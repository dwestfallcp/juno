{"version":3,"sources":["webpack:///./src/record/forms/formsConstants.ts","webpack:///./generated/api/ScheduleApi.ts","webpack:///./generated/api/AppointmentApi.ts","webpack:///./src/admin/adminConstants.ts","webpack:///./generated/api/SystemPreferenceApi.ts","webpack:///./generated/index.ts","webpack:///./src/common/services/systemPreferenceServiceConstants.ts","webpack:///./generated/api/SitesApi.ts","webpack:///./generated/api/ProviderPreferenceApi.ts","webpack:///./generated/api/IceFallApi.ts","webpack:///./src/settings/partials/patientSummaryItems.html","webpack:///../webapp/share/javascript/Oscar.js","webpack:///../webapp/share/javascript/HealthCardParser.js","webpack:///./src/common/displayMessages.js","webpack:///./src/common/util/util.js","webpack:///./src/common/util/serviceHelper.js","webpack:///./src/consults/common.js","webpack:///./app.js","webpack:///./src/common/module.js","webpack:///./src/common/util/module.js","webpack:///./src/common/util/angular-util.js","webpack:///./src/common/util/junoHttp.js","webpack:///./src/common/util/searchListHelper.js","webpack:///./src/common/services/module.js","webpack:///./src/common/services/appService.js","webpack:///./src/common/services/autoCompleteService.js","webpack:///./src/common/services/billingService.js","webpack:///./src/common/services/consultService.js","webpack:///./src/common/services/demographicService.js","webpack:///./src/common/services/demographicsService.js","webpack:///./src/common/services/diseaseRegistryService.js","webpack:///./src/common/services/errorsService.js","webpack:///./src/common/services/eFormService.js","webpack:///./src/common/services/faxAccountService.js","webpack:///./src/common/services/faxInboundService.js","webpack:///./src/common/services/faxOutboundService.js","webpack:///./src/common/services/fieldHelperService.js","webpack:///./src/common/services/focusService.js","webpack:///./src/common/services/formService.js","webpack:///./src/common/services/globalStateService.js","webpack:///./src/common/services/inboxService.js","webpack:///./src/common/services/k2aService.js","webpack:///./src/common/services/messageService.js","webpack:///./src/common/services/noteService.js","webpack:///./src/common/services/patientDetailStatusService.js","webpack:///./src/common/services/personaService.js","webpack:///./src/common/services/programService.js","webpack:///./src/common/services/providerService.js","webpack:///./src/common/services/providersService.js","webpack:///./src/common/services/reportingService.js","webpack:///./src/common/services/resultsService.js","webpack:///./src/common/services/securityService.js","webpack:///./src/common/services/staticDataService.js","webpack:///./src/common/services/summaryService.js","webpack:///./src/common/services/systemPreferenceService.js","webpack:///./src/common/services/ticklerService.js","webpack:///./src/common/services/reportByTemplateService.js","webpack:///./src/common/services/uxService.js","webpack:///./src/common/services/specialistsService.js","webpack:///./src/common/services/referralDoctorsService.js","webpack:///./src/common/filters/module.js","webpack:///./src/common/filters/age.js","webpack:///./src/common/filters/cut.js","webpack:///./src/common/filters/offset.js","webpack:///./src/common/filters/startFrom.js","webpack:///./src/common/directives/module.js","webpack:///./src/common/directives/junoConfirmClick.js","webpack:///./src/common/directives/typeaheadHelper.js","webpack:///./src/common/directives/patientSearchTypeahead.js","webpack:///./src/common/directives/patientTypeahead.js","webpack:///./src/common/directives/datepickerPopup.js","webpack:///./src/common/directives/jqueryUIResizable.js","webpack:///./src/common/directives/jqueryUIDraggable.js","webpack:///./src/common/directives/angular-ui-calendar.js","webpack:///./src/common/directives/selectOptionTooltip.js","webpack:///./src/common/directives/appointment/juno_appointment_status_select.js","webpack:///./src/common/directives/clinicaid/ca_field_alphadate.js","webpack:///./src/common/directives/clinicaid/ca_field_alpha.js","webpack:///./src/common/directives/clinicaid/ca_field_autocomplete.js","webpack:///./src/common/directives/clinicaid/ca_field_boolean.js","webpack:///./src/common/directives/clinicaid/ca_field_button_group.js","webpack:///./src/common/directives/clinicaid/ca_field_color.js","webpack:///./src/common/directives/clinicaid/ca_field_currency_filter.js","webpack:///./src/common/directives/clinicaid/ca_field_currency.js","webpack:///./src/common/directives/clinicaid/ca_field_date3.js","webpack:///./src/common/directives/clinicaid/ca_field_date.js","webpack:///./src/common/directives/clinicaid/ca_field_number.js","webpack:///./src/common/directives/clinicaid/ca_field_password.js","webpack:///./src/common/directives/clinicaid/ca_field_radio.js","webpack:///./src/common/directives/clinicaid/ca_field_select.js","webpack:///./src/common/directives/clinicaid/ca_field_text.js","webpack:///./src/common/directives/clinicaid/ca_field_time.js","webpack:///./src/common/directives/clinicaid/ca_field_toggle.js","webpack:///./src/common/directives/clinicaid/ca_focus_field.js","webpack:///./src/common/directives/clinicaid/ca_info_messages.js","webpack:///./src/common/directives/clinicaid/ca_key_bind_scope.js","webpack:///./src/common/directives/clinicaid/ca_pagination.js","webpack:///./src/common/directives/clinicaid/ca_quill.js","webpack:///./src/common/directives/clinicaid/ca_sticky_search_results_footer.js","webpack:///./src/common/directives/clinicaid/ca_zero_pad.js","webpack:///./src/common/directives/clinicaid/compile_html.js","webpack:///./src/common/directives/clinicaid/file_model.js","webpack:///./src/common/directives/clinicaid/resize_handler.js","webpack:///./src/common/directives/clinicaid/resize.js","webpack:///./src/common/directives/clinicaid/scroll_handler.js","webpack:///./src/common/directives/clinicaid/scroll.js","webpack:///./src/common/directives/clinicaid/zero_pad.js","webpack:///./src/common/components/module.js","webpack:///./src/common/components/modalComponent.js","webpack:///./src/common/components/loadingIndicatorComponent.js","webpack:///./src/common/components/zeroStateDisplayComponent.js","webpack:///./src/common/components/accordionList/accordionListComponent.js","webpack:///./src/common/components/iconCard/iconCardComponent.js","webpack:///./src/common/components/panel/panelComponent.js","webpack:///./src/layout/module.js","webpack:///./src/layout/bodyController.js","webpack:///./src/layout/primaryNavComponent.js","webpack:///./src/layout/leftAsideComponent.js","webpack:///./src/patient/module.js","webpack:///./src/patient/addDemographicModal/addDemographicModalComponent.js","webpack:///./src/patient/demographicCardComponent.js","webpack:///./src/dashboard/module.js","webpack:///./src/dashboard/dashboardController.js","webpack:///./src/dashboard/ticklerConfigureController.js","webpack:///./src/record/module.js","webpack:///./src/record/recordController.js","webpack:///./src/record/summary/module.js","webpack:///./src/record/summary/summaryController.js","webpack:///./src/record/summary/recordPrintController.js","webpack:///./src/record/summary/groupNotesController.js","webpack:///./src/record/summary/saveWarningController.js","webpack:///./src/record/summary/summaryModuleComponent.js","webpack:///./src/record/summary/encounterNoteComponent.js","webpack:///./src/record/summary/encounterNoteListComponent.js","webpack:///./src/record/forms/module.js","webpack:///./src/record/forms/formsController.js","webpack:///./src/record/forms/components/formView/formViewComponent.js","webpack:///./src/record/forms/components/modeSelector/modeSelectorComponent.js","webpack:///./src/record/forms/components/groupSelector/groupSelectorComponent.js","webpack:///./src/record/details/module.js","webpack:///./src/record/details/detailsController.js","webpack:///./generated/api/api.ts","webpack:///./generated/model/models.ts","webpack:///./generated/model/AppointmentTo1.ts","webpack:///./generated/model/ProviderTo1.ts","webpack:///./generated/model/RestResponseAppointmentTo1.ts","webpack:///./generated/model/RestResponseBoolean.ts","webpack:///./generated/model/RestResponseCalendarAppointment.ts","webpack:///./generated/model/RestResponseCalendarSchedule.ts","webpack:///./generated/model/RestResponseIceFallLogEntryListTo1.ts","webpack:///./generated/model/RestResponseIceFallSettingsTo1.ts","webpack:///./generated/model/RestResponseInteger.ts","webpack:///./generated/model/RestResponseSiteTransfer.ts","webpack:///./generated/model/RestResponseString.ts","webpack:///./generated/model/RestSearchResponseAppointmentEditRecord.ts","webpack:///./generated/model/RestSearchResponseAppointmentTypeTo1.ts","webpack:///./generated/model/RestSearchResponseCalendarAppointmentStatus.ts","webpack:///./generated/model/RestSearchResponseLookupListItemTo1.ts","webpack:///./generated/model/RestSearchResponsePatientListItemTransfer.ts","webpack:///./generated/model/RestSearchResponseScheduleGroup.ts","webpack:///./generated/model/RestSearchResponseScheduleSearchResult.ts","webpack:///./generated/model/RestSearchResponseScheduleTemplateCode.ts","webpack:///./generated/model/RestSearchResponseSiteTransfer.ts","webpack:///./generated/model/ScheduleGroup.ts","webpack:///./src/record/details/swipecardController.js","webpack:///./src/record/phr/module.js","webpack:///./src/record/phr/phrController.js","webpack:///./src/record/tracker/module.js","webpack:///./src/record/tracker/trackerController.js","webpack:///./src/tickler/module.js","webpack:///./src/tickler/ticklerListController.js","webpack:///./src/tickler/ticklerViewController.js","webpack:///./src/tickler/ticklerAddController.js","webpack:///./src/tickler/ticklerNoteController.js","webpack:///./src/tickler/ticklerCommentController.js","webpack:///./src/schedule/module.js","webpack:///./src/schedule/scheduleController.js","webpack:///./src/schedule/view-event.html","webpack:///./src/schedule/view-backgroundEvent.html","webpack:///./src/schedule/view-columnControl.html","webpack:///./src/schedule/eventComponent.js","webpack:///./src/schedule/scheduleSearchComponent.js","webpack:///./src/schedule/scheduleService.js","webpack:///./src/admin/module.js","webpack:///./src/admin/adminController.js","webpack:///./src/admin/integration/module.js","webpack:///./src/admin/integration/fax/module.js","webpack:///./src/admin/integration/fax/faxConfigurationController.js","webpack:///./src/admin/integration/fax/faxConfigurationEditController.js","webpack:///./src/admin/integration/fax/faxSendReceiveController.js","webpack:///./src/admin/integration/landingPage/landingPageComponent.js","webpack:///./src/admin/integration/panelManagement/panelManagementAdminComponent.js","webpack:///./src/admin/integration/integrationModules/integrationModulesComponent.js","webpack:///./src/admin/integration/iceFall/iceFallAdminComponent.js","webpack:///./src/admin/integration/iceFall/settings/iceFallAdminSettingsComponent.js","webpack:///./src/admin/integration/iceFall/activity/iceFallAdminActivityComponent.js","webpack:///./src/admin/integration/know2act/module.js","webpack:///./src/admin/integration/know2act/Know2actConfigController.js","webpack:///./src/admin/integration/know2act/Know2actNotificationController.js","webpack:///./src/admin/integration/know2act/Know2actTemplateController.js","webpack:///./src/admin/integration/frameContent/frameContentController.js","webpack:///./src/billing/billingController.js","webpack:///./src/consults/module.js","webpack:///./src/consults/consultRequestAttachmentController.js","webpack:///./src/consults/consultResponseAttachmentController.js","webpack:///./src/consults/consultRequestListController.js","webpack:///./src/consults/consultRequestController.js","webpack:///./src/consults/consultResponseListController.js","webpack:///./src/consults/consultResponseController.js","webpack:///./src/inbox/module.js","webpack:///./src/inbox/inboxController.js","webpack:///./src/patient/search/module.js","webpack:///./src/patient/search/patientSearchController.js","webpack:///./src/patient/search/remotePatientResultsController.js","webpack:///./src/report/module.js","webpack:///./src/report/reportsController.js","webpack:///./src/report/reportBadAppointmentSheetController.js","webpack:///./src/report/reportDaySheetController.js","webpack:///./src/report/reportEdbListController.js","webpack:///./src/report/reportNoShowAppointmentSheetController.js","webpack:///./src/report/reportOldPatientsController.js","webpack:///./src/report/reportPatientChartListController.js","webpack:///./src/document/module.js","webpack:///./src/document/documentsController.js","webpack:///./src/settings/module.js","webpack:///./src/settings/settingsController.js","webpack:///./src/settings/changePasswordController.js","webpack:///./src/settings/quickLinkController.js","webpack:///./src/settings/summaryItemSettingsController.js","webpack:///./src/help/module.js","webpack:///./src/help/supportController.js","webpack:///./src/help/helpController.js"],"names":["FORM_CONTROLLER_STATES","exports","FORM_CONTROLLER_SORT_MODES","FORM_CONTROLLER_FORM_TYPES","FORM_CONTROLLER_SPECIAL_GROUPS","ScheduleApi","$http","$httpParamSerializer","basePath","this","defaultHeaders","undefined","prototype","getAppointmentHistory","demographicNo","extraHttpRequestParams","localVarPath","replace","encodeURIComponent","String","headerParams","Object","assign","Error","httpRequestParams","method","url","params","headers","getAppointmentReasons","getAppointmentStatuses","getAppointmentTypes","getAppointmentsForDay","date","getCalendarAppointmentStatuses","getCalendarSchedule","scheduleId","scheduleIdType","scheduleFilter","startDate","endDate","startTime","endTime","site","slotDuration","queryParameters","getScheduleGroups","getScheduleTemplateCodes","searchAvailable","providerNo","dayOfWeek","code","resultCount","$inject","AppointmentApi","addAppointment","calendarAppointment","data","addRepeatingAppointment","calendarAppointmentRepeating","deleteAppointment","appointmentNo","getAppointment","getEditHistory","setNextStatus","setStatus","body","updateAppointment","ADMIN_PAGE_EVENTS","SystemPreferenceApi","getPreferenceEnabled","key","_default","getPreferenceValue","getPropertyEnabled","getPropertyValue","putPreferenceValue","__export","__webpack_require__","SYSTEM_PROPERTIES","INSTANCE_TYPE","BILLING_TYPE","SitesApi","getProviderSiteBySchedule","sdate","getSiteList","getSitesByProvider","getSitesEnabled","ProviderPreferenceApi","getProviderSettings","saveProviderSettings","providerSettings","updateProviderSetting","IceFallApi","authenticateWithIceFallApi","getIceFallSettings","getLogEntries","page","pageSize","status","sortBy","sortDirection","sendFormToIceFall","iceFallSendFormTo1","setIceFallSettings","iceFallSettingsTo1","module","popup","height","width","windowName","popup2","newWindow","w","document","getElementsByTagName","clientWidth","h","clientHeight","Math","max","window","innerWidth","innerHeight","top","left","winRefs","closed","windowprops","open","location","href","resizeTo","focus","confirmNGo","message","confirm","showHideItem","id","getElementById","style","display","showItem","hideItem","validDate","validDateText","value","completeRawDate","delimiter","indexOf","dateArray","split","length","year","month","day","dateObject","Date","getDate","getMonth","getFullYear","validDateFieldsByClass","className","parentEle","datefields","getElementsByClassName","i","getMouseCoords","e","array","Array","posx","posy","event","pageX","pageY","clientX","clientY","scrollLeft","documentElement","scrollTop","checkAll","master","val","checked","chkList","oscarLog","str","console","log","grabEnter","callb","keyCode","which","eval","isNumericInt","sText","chara","isNumber","charAt","isNumeric","trim","getElementsByAttribute","oElm","strTagName","strAttributeName","strAttributeValue","oCurrent","oAttribute","arrElements","all","arrReturnElements","oAttributeValue","RegExp","getAttribute","test","push","Oscar","HealthCardParser","isWhitelisted","cardNo","toUpperCase","startsWith","substring","validateDate","dateString","isNaN","parse","getFieldValue","track","trackIndex","fieldValue","terminationIndex","err","parseBCCombined","cardData","cardHash","dataHash","metaHash","meta","track2Index","track3Index","track1","track2","track3","index","province","city","names","fullAddress","lastName","firstName","address","includes","isoiin","DL","driverLicenseNo","clientNo","expire","endYear","endMonth","endDay","dobCCYYMMDD","dobYear","dobMonth","dobDay","versionNo","secVersionNo","postal","class","restrictions","endorsements","sex","weight","hairColour","eyeColour","hin","fourteenA","ecc","securityFunction","parseBCStandalone","subcard","endYYMM","issuerYYMM","effYear","effMonth","effDay","parseOntario","versionCode","monthInt","parseInt","cardHashOut","info","error","Juno","Common","DisplayMessages","messages_hash","options","me","display_field_errors","field_errors_label_map","field_errors_label_map_key","extra_info","saving_message","init","Util","exists","force_field_error_arrays","merge","display_messages","angular","has_alert_warnings","alert_warnings","add_alert_warning","has_validation_warnings","validation_warnings","add_validation_warning","has_standard_errors","standard_errors","add_standard_error","add_generic_fatal_error","has_standard_warnings","standard_warnings","add_standard_warning","has_standard_info","standard_info","add_standard_info","has_standard_success","standard_success","add_standard_success","has_field_errors","field_errors","equals","prepend_label","has_one_of_field_error","keys","isArray","has_field_error","has_indexed_field_error","field_error_string","concat_string","join","add_field_error","remove_field_error","has_error_links","error_links","add_error_link","has_field_warnings","field_warnings","has_field_warning","field_warning_string","add_field_warning","remove_field_warning","has_errors","clear","copy","field","label","out_field_errors","error_message","merge_messages","merge_display_messages","standard_infos","hasOwnProperty","moment","$","settings","datetime_format","datetime_no_timezone_format","time_format","date_format","dayofweek_format","DisplaySettings","dateFormat","timeFormat","object","isDefined","isBlank","parseBoolean","trueValues","falseValues","toArray","obj","pad0","n","s","toString","toTrimmedString","formatDate","d","formatTime","getHours","getMinutes","formatMomentDate","format","formatMomentTime","formatMomentDateTimeNoTimezone","getDateMoment","date_string","utc","getTimeMoment","time_string","getDateMomentFromComponents","year_string","month_string","day_string","Number","getDateAndTimeMoment","timeString","getDatetimeNoTimezoneMoment","datetime_string","getUserISOTimezoneOffset","sign","offsetRaw","getTimezoneOffset","offsetMin","padStart","validateDateString","displayErrors","fieldDisplayName","required","isValid","validateTimeString","validateIntegerString","inputString","nonNegative","nonZero","isIntegerString","addNewLine","line","mssg","calcAge","dateOfBirth","diff","isInArray","mergeHash","baseHash","toMerge","extend","noNull","isUndefinedOrNull","isUndefined","isDefinedAndNotNull","objectArrayIndexOf","searchTerm","property","len","string","escapeHtml","entityMap","&","<",">","\"","'","/","formatName","trimToLength","maxLength","shortString","windowClosedPromise","Promise","resolve","reject","interId","setInterval","clearInterval","ServiceHelper","configHeaders","Content-Type","Accept","configHeadersWithCache","cache","Consults","sortAttachmentDocs","arrayOfDocs","sort","doc1","doc2","documentType","displayName","config","$stateProvider","$urlRouterProvider","$httpProvider","otherwise","state","templateUrl","controller","loadedSettings","providerService","getSettings","component","providers","searchProviders","active","term","user","getMe","billingServiceTypes","billingService","getUniqueServiceTypes","providerList","encounterForms","formService","getAllEncounterForms","eforms","getAllEForms","teams","getActiveTeams","groupNames","getGroupNames","loadedApps","appService","getApps","tab","demo","$stateParams","demographicService","getDemographic","properties","uxService","getDisplayProperties","viewState","_src_record_forms_formsConstants__WEBPACK_IMPORTED_MODULE_0__","COMPLETED","ADD","REVISION","DELETED","consult","consultService","requestId","getNewRequest","getRequest","getResponse","responseId","interceptors","$q","responseError","rejection","reload","factory","load","msg","service","$window","inMobileView","http_util","request","request_hash","deferred","defer","then","response","success_function","errors","errors_function","progress","notify","promise","request_result","results","call","get","post","put","del","SearchListHelper","defaultParams","searchParams","defaults","perPage","initSearchParameters","fieldName","getParams","outParams","apiPath","init_autocomplete_values","patient","autocomplete_values","result","dob","formatDemographic","uuid","full_name","birth_date","health_number","phone_number_primary","phone","content","getBillingRegion","errorsz","getDefaultView","junoHttp","searchRequests","search","getTotalRequests","referralDate","toDate","appointmentDate","followUpDate","getRequestAttachments","demographicId","attached","saveRequest","eSendRequest","searchResponses","responseDate","getResponseAttachments","saveResponse","getReferralPathwaysByService","serviceName","getLetterheadList","effDate","hcRenewDate","patientStatusDate","onWaitingListSinceDate","scrPaperChartArchivedDate","dateJoined","rosterTerminationDate","rosterDate","getDemographicContacts","contactCategory","category","saveDemographic","demographic","updateDemographic","SEARCH_MODE","freeze","Name","DOB","Phone","Hin","Address","Email","ChartNo","DemographicNo","STATUS_MODE","ALL","ACTIVE","INACTIVE","quickSearch","query","jsonData","searchIntegrator","itemsToReturn","getStatusList","listType","type","getQuickLists","getIssueQuickLists","addToDxRegistry","disease","issueToSend","description","findDxIssue","codingSystem","messages","errorsHash","saveEForm","updateEForm","formId","loadEForm","listAccounts","isEnabled","getAccountSettings","addAccountSettings","transfer","updateAccountSettings","testConnection","getInbox","accountId","searchListHelper","getOutbox","getNextPullTime","resendOutboundFax","getNextPushTime","getDownloadUrl","setNotificationStatus","archive","$timeout","helper","default_scope","form_group_class","label_size","input_size","text_length","text_placeholder","hide_label_colon","template","name","title","hint","tab_index","warning_message","depends_on_field","depends_on_value","model","disabled","hide","focus_field","requiredField","on_focus_fn","change_fn","blur_fn","keypress_enter_fn","resolve_template","attributes","base_default_template","merge_title_messages","$scope","title_array","title_string","default_link_function","element","attribute","focus_fn","isFunction","is","find","$watch","select","first","$on","bind","$apply","$eval","preventDefault","default_controller","$element","$attrs","ignore_focus_field","textInputDirective","forceHidePassword","scope","rows","hideText","max_characters","no_label","restrict","link","new_value","old_value","selector","first_form_input","first_error_input","opts","isObject","first_alert","scroll_offset","hasClass","animate","offset","popupOptions","eformPopupHeight","eformPopupWidth","getAllFormsByHeading","heading","genericFormGet","getSelectedEncounterForms","getCompletedEncounterForms","getAddForms","getRevisionForms","getDeletedForms","deleteForm","restoreForm","getFormGroups","getFavouriteFormGroup","getFormOptions","openEFormPopup","openEFormInstancePopup","fdid","openFormPopup","openFormInstancePopup","formName","global_settings","interface_preferences","scheduler_license_key","schedule","date_selected","view_selected","getDashboardItems","limit","getUnAckLabDocCount","getInboxCountByStatus","providerId","statusCode","getK2aFeed","startPoint","numberOfRows","isK2AInit","initK2A","clinicName","transferObj","postK2AComment","commentItem","removeK2AComment","commentId","preventionRulesList","loadPreventionRuleById","getCurrentPreventionRulesVersion","getNotifications","getMoreNotification","ackNotification","getUnread","getUnreadCount","getNotesFrom","numberToReturn","noteConfig","numToReturn","saveNote","note","saveIssueNote","getCurrentNote","tmpSave","getNoteExt","noteId","getIssueNote","getIssueId","issueCode","getTicklerNote","ticklerId","saveTicklerNote","ticklerNote","JSON","stringify","searchIssues","startIndex","getIssue","issueId","setEditingNoteFlag","noteUUID","userId","checkEditNoteNew","removeEditingNoteFlag","getStatus","validateHC","healthCardNo","isUniqueHC","getEligibilityInfo","random","getDashboardMenu","getNavBar","getAdminNav","getPatientListConfig","setPatientListConfig","patientListConfig","setCurrentProgram","programId","getDashboardPreferences","updateDashboardPreferences","prefs","getPrograms","getProvider","filter","saveSettings","getRecentPatientList","searchText","searchMode","getBySecurityRole","role","getByType","getAll","getDemographicSetList","results_hash","meta_hash","results_object","has_results","error_type","util","pagination","per_page","total","total_pages","getUser","setUser","u","hasRight","objectName","privilege","success","hasRights","listOfItems","isAllowedAccessToPatientRecord","hasOneOfPermissions","permission_array","hasPermission","permission","getGenders","genders","getTitles","titles","getCanadaProvinces","provinces","getProvinces","getCountries","countries","getEngFre","langs","getSpokenLanguages","getRosterTerminationReasons","reasons","getSecurityQuestions","questions","getConsultUrgencies","urgencies","getConsultRequestStatuses","statuses","getConsultResponseStatuses","getRxInteractionLevels","levels","getSummaryHeaders","getFullSummary","summaryCode","getFamilyHistory","getMedicalHistory","getSocialHistory","getOngoingConcerns","getOtherMeds","getReminders","getRiskFactors","getPreference","defaultValue","default","setPreference","isPreferenceEnabled","setCompleted","ticklerIds","ticklers","setDeleted","update","tickler","getTextSuggestions","add","getAllK2AReports","getK2AReportById","getK2AUrl","menu","searchTemplates","getTemplate","getAllDashboards","searchSpecialists","searchName","searchRefNo","searchReferralDoctors","input","years","months","days","wordwise","tail","substr","lastspace","lastIndexOf","start","slice","directive","onConfirm","onCancel","junoConfirmMessage","defaultTypeaheadScope","placeholder","onSearchFn","onAddFn","searchButtonTitle","addButtonTitle","iconLeft","iconRight","initTypeahead","findMatches","$viewValue","formatMatchSelection","$model","optionsTemplateUrl","forceSelection","searchField","typeaheadModelOptions","debounce","blur","autocompleteMinLength","hasButtons","hasSearchButton","hasAddButton","hasIcon","hasLeftIcon","hasRightIcon","hasTemplateUrl","hasForceSelectionEnabled","formatMatch","isDummySelection","searchQuery","onSelect","$item","$label","$event","onBlur","isString","onChange","createDummySelection","onSearch","onAdd","isTypeaheadSearchQuery","match","typeaheadHelper","demographicsService","matches","moreResults","integrator","outofdomain","typeaheadLabel","showIcon","disableInput","elem","dateOptions","showWeeks","opened","openDatepicker","callback","attrs","resizable","handles","minHeight","minWidth","maxWidth","maxHeight","on","evt","ui","css","newHeight","draggable","axis","containment","constant","calendars","$locale","sources","eventSources","extraEventSignature","calendarWatchEvent","noop","eventSerialId","eventFingerprint","_id","extraSignature","isMoment","unix","end","allDay","sourceSerialId","sourceEventsSerialId","sourceFingerprint","source","fp","__id","events","allEvents","arraySources","srcLen","extEvent","eI","concat","apply","changeWatcher","arraySource","tokenFn","self","getTokens","token","el","map","subtractAsSets","a","b","inB","subscribe","onArrayChanged","newTokens","oldTokens","replacedTokens","removedTokens","removedToken","newToken","onRemoved","onChanged","addedTokens","onAdded","applyChanges","getFullCalendarConfig","calendarSettings","uiCalendarConfig","forEach","functionToWrap","$root","$$phase","arguments","args","getLocaleConfig","fullCalendarConfig","lang","useNgLocale","tValues","r","k","dtf","DATETIME_FORMATS","monthNames","MONTH","monthNamesShort","SHORTMONTH","dayNames","DAY","dayNamesShort","SHORTDAY","enabled","elm","calendar","sourcesChanged","eventSourcesWatcher","eventsWatcher","destroyCalendar","fullCalendar","html","initCalendar","stick","clientEvents","clientEvent","uiCalendar","$parent","localeFullCalendarConfig","options2","o","newValue","oldValue","$parse","priority","require","addCustomAttr","attr","fnDisableIfTrue","each","locals","expElements","attrToWatch","$watchCollection","scheduleService","include_empty_option","select_change_fn","button_change_fn","getNextRotateStatus","option","statusElem","removeClass","color","statusIcon","icon","addClass","input_placeholder","on_blur","momentDate","global_state","autocomplete","results_factory","min_length_zero_types","input_group_class","autocomplete_type","params_fn","on_select_fn","on_select_data","on_clear_fn","on_clear_data","on_create_fn","create_if","on_modify_fn","modify_if","create_on_not_found","editable","ca_exclude_list","search_field","dao_map","Clinicaid","Model","GenericRef","REF_DEFINITIONS","autocomplete_min_length","clear_autocomplete_search","clear_autocomplete_model","focus_input","on_select","create_on_not_found_fn","temp_model","on_change","build_model_object","model_on_focus","on_focus","on_create","on_modify","show_modify_if","autocomplete_items","params_check","get_items","out_items","prune_items","items","in_list","ii","exclude_item","value_field","autocomplete_input_formatter","autocomplete_input_formatted","show_create","show_modify","dummy_record","show_buttons","field_settings","field_default","selected_values","is_selected","toggle_selected","value_index","splice","$filter","ngModelController","$parsers","text","tempValue","parseFloat","toFixed","$formatters","unshift","currencyFilter","on_focus_fn_year","on_focus_fn_month","on_focus_fn_day","get_date","field_year","field_month","field_day","date_part_array","put_date","focus_fn_year","focus_fn_month","focus_fn_day","$compile","date_picker_id","orientation","use_multi_date","container_id","initialization_complete","delayed_change_fn","datepicker","is_multi_date","CTRL_KEY","LEFT_SHIFT_KEY","ctrl_key_down","shift_key_down","is_visible","container","create_datepicker","multidate","autoclose","todayHighlight","todayBtn","clearBtn","toggleActive","showOnFocus","keyboardNavigation","toggle_multi","force_true","input_string","key_up","input_value","close_date_picker","key_down","open_date_picker","on_click","dates","new_is_multi_date","input_box","caDatePickerId","dropdown","footer","replaceWith","contents","pad_length","minute_step","disable_widget","picker_container","toggle_widget","timepicker","defaultTime","minuteStep","icons","up","down","true_text","false_text","true_value","false_value","field_controllers","ignore","form_nav","saving","field_value_map","success_message","field_value_map_label_key","displayFieldErrors","prepend_name_to_field_errors","error_link_functions","get_label","force_array","item","has_sub_errors","error_link_has_function","error_link","execute_error_link_fn","should_display_field_errors","$rootScope","identifier","key_combo","callback_fn","key_bind_settings","hierarchy","parents","nodeValue","build_hierarchy","ca_key_binding","bind_key_element","change_page_callback","mode","change_page","page_number","current_page","expand_ellipsis","go_to_page_num","close_ellipsis","go_to_page","page_int","ngModel","editor","modules","toolbar","image-tooltip","link-tooltip","theme","extraOptions","quill","Quill","children","$render","delta","getHTML","$setViewValue","setHTML","$document","eventName","searchResultsRecordsElement","querySelector","scrollbarWrapperElement","scrollbarElement","tableWrapperElement","tableElement","footerElement","searchResultsElement","contentWrapperElement","layoutSidebarElement","scroll","update_search_results_footer","ctrl","compileHtml","jsp","modelSetter","fileModel","files","resizeHandler","$broadcast","scrollHandler","caZeroPad","bindings","hideFooter","showLoading","transclude","ctlButtons","$onInit","$onChanges","bindingHash","currentValue","messageAlignment","indicatorType","isAlignmentVertical","isAlignmentHorizontal","itemList","$state","bindCollapseListener","idx","targetItem","eventsBound","collapseEl","getGroupCollapseId","expanded","group","onGroupClick","collapse","onItemClicked","cardSize","onClick","onCardClick","header","securityService","userLoaded","showPatientList","toggleShowPatientList","isLeftAsideOpen","$location","$uibModal","$interval","personaService","inboxService","messageService","ticklerService","updateInterval","messageInterval","intervalLengthOneMinute","intervalLengthFiveMinutes","activeConsultationTotal","ticklerTotal","unAckLabDocTotal","unclaimedCount","unreadMessageTotal","demographicSearch","consultationTeamWarning","consultationLookbackPeriod","billRegion","searchRights","newDemographicRights","messageRights","menus","dashboardMenu","consultationTimePeriodWarning","currentProgram","program","programDomain","unreadMessagesCount","unreadPatientMessagesCount","updateCounts","getUnreadMessageCount","demographicSearchDropDownItems","patientSearchMenu","menuItems","userMenuItems","userMenu","messengerMenu","newVal","goToPatientSearch","goToPatientRecord","cancelIntervals","cancel","getOverdueTicklerCount","getActiveConsultationCount","getUnclaimedInboxCount","getCountForLabel","labelCount","creator","overdueOnly","subtract","toISOString","invertStatus","referralEndDate","team","onPatientSearch","go","hideNote","transition","extraParams","wname","qs","path","param","openNewWindow","loadClassicUi","openMessenger","extra","openScratchpad","newDemographic","size","backdrop","windowClass","isActive","current","changeProgram","navItemFilter","labelsToShow","inverse","filterValue","inArray","mediumNavItemFilter","smallNavItemFilter","mobileNavItemFilter","__webpack_exports__","_generated_api_ScheduleApi__WEBPACK_IMPORTED_MODULE_0__","_generated_api_AppointmentApi__WEBPACK_IMPORTED_MODULE_1__","_generated_api_SystemPreferenceApi__WEBPACK_IMPORTED_MODULE_2__","expandOn","angularUtil","initialized","scheduleApi","appointmentApi","systemPreferenceApi","tabEnum","appointments","recent","activeTab","activePatientList","activeAppointmentList","datepickerSelectedDate","refreshSettings","timerVariable","defaultAutoRefreshMinutes","preferredAutoRefreshMinutes","eventStatusOptions","loadEventStatuses","eventStatuses","changeTab","loadWatches","initListAutoRefresh","provider","telehealthEnabled","loadTelehealthEnabled","loadProviderSettings","tabId","refresh","goToRecord","hideOldEchartLinkInAppointment","encType","startMoment","curProviderNo","providerview","userName","curDate","reason","getEncounterLink","rawResults","displayMessages","openTelehealthLink","isVirtual","isRecentPatientView","isAppointmentPatientView","refreshRecentPatientList","refreshAppointmentPatientList","updateAppointmentStatus","appointment","stepForward","stepBack","isInitialized","minutes","_generated_api_SystemPreferenceApi__WEBPACK_IMPORTED_MODULE_0__","modalInstance","staticDataService","programService","provincesCA","newDemographicData","ver","hcType","email","invalidLastName","invalidFirstName","invalidSex","invalidDob","programs","admissionProgramId","defaultSex","defaultHcType","validateDemographic","dateOfBirthValid","dismiss","close","alert","demographicModel","displayData","birthDate","fullName","addressLine","hasPhoto","patientPhotoUrl","fillDisplayData","demographicDataModel","NgTableParams","k2aService","noteService","dashboardInterval","dashboardMessageInterval","displayDate","k2aActive","k2aFeedActive","busyLoadingData","dashboardPreferences","ticklerWriteAccess","ticklerReadAccess","inboxTableParams","count","getData","openInbox","newwindow","updateK2aActive","loadMoreK2aFeed","updateFeed","k2afeed","authenticateK2A","agreeWithK2aPost","agree","agreeId","agreeCount","disagree","newComment","commentOnK2aPost","disagreeWithK2aPost","disagreeCount","postId","commentCount","comments","updateTicklers","totalTicklers","arr","updateMessages","totalMessages","updateReports","inbox","totalInbox","authenticatek2a","updateDashboard","isTicklerExpiredOrHighPriority","serviceDate","isTicklerHighPriority","openClassicMessenger","viewMessage","viewTickler","configureTicklers","$uibModalInstance","save","_generated_api_AppointmentApi__WEBPACK_IMPORTED_MODULE_0__","zero","$localStorage","assignedCMIssues","itvSet","itvCheck","editingNoteId","isNoteSaved","$storage","recordtabs2","working","fillMenu","cannotChange","checkAction","stopPropagation","num","temp","currenttab2","demoId","win","round","onbeforeunload","encounterNote","timeout","saveUpdates","initNote","skipTmpSave","oldVal","saveIntervalSeconds","totalSeconds","myVar","setTime","innerHTML","pad","valString","getCurrentTimerToggle","toggleTimer","pasteTimer","ed","isWorking","toggleNote","cancelNoteEdit","updateCurrentNote","assignedIssues","issueDescriptions","editorNames","issue","saveSignNote","isSigned","saveSignVerifyNote","isVerified","billregion","defaultView","saveSignBillNote","dxCode","apptNo","apptProvider","apptDate","apptStartTime","dt","getSeconds","screen","currentNoteConfig","showNoteAfterLoadingFlag","initAppendNoteEditor","initObservationDate","editNote","displayWarning","noteEditorText","observationDate","doSetEditingNoteFlag","resp","x","templates","encounterTemplateName","insertTemplate","encounterTemplateValue","magicVal","noteToEdit","assignIssue","cmIssue","acute","certain","issue_id","major","resolved","unsaved","removeIssue","unchecked","newList","age","summaryService","getLeftItems","columnOne","fillItems","getRightItems","columnThree","selectedNoteHash","busy","noteListComponentRefreshFunction","canRead","cannotAdd","openRx","demoNo","openAllergies","openPreventions","openAddForms","openCompletedForms","findGroupNote","moduleList","summaryItems","summaryItem","bubbleUpEditNoteCallback","successCallback","dismissCallback","$emit","trackerUrl","getTrackerUrl","summaryLists","itemsToFill","onEditCpp","mod","action","editGroupedNotes","refreshModel","gotoState","transitionTo","viewEform","eFormId","viewDocument","documentId","itemArray","showPrintModal","selectedNoteList","onSummaryModAdd","onSummaryModClickTitle","isModTitleClickable","hideSummaryModuleDate","registerEncNoteListFunctions","printTypeEnum","selected","selectedWarning","pageOptions","printType","selectedList","printToday","cancelPrint","sendToPhr","queryString","getTime","cpp","print","ops","diseaseRegistryService","quickLists","groupNotesForm","position","now","annotation_attrib","addDxItem","displayIssueId","displayGroupNote","itemId","groupNoteExt","setAvailablePositions","itemExtra","availablePositions","changeNote","saveGroupNotes","encounterType","encounterTime","inherit","removeGroupNoteIssue","restoreIssue","archiveGroupNotes","archived","openRevisionHistory","rnd","isSelected","clearChanges","itemDisplayCount","maxItemNameLength","hideDate","onclickItem","onclickAdd","onclickTitle","clickableTitle","enableFilter","enableAddButton","displayDateFormat","itemFilter","showAllItems","itemCallback","newItem","addBtnCallback","clickTitleCallback","toggleShowAllItems","onEditNote","onToggleSelect","minimized","selectedForPrint","inOpenEdit","showNoteViewButton","eformData","encounterForm","viewButtonClick","eformDataId","encounterFormId","showNoteEditButton","isRegularNote","editButtonClick","updatedNote","revision","toggleMinimizeNote","isNoteMinimized","isNoteExpanded","toggleIsSelectedForPrint","isSelectedForPrint","getNoteHeader","allowNoteExpansion","isUnsignedEncounterNote","rxAnnotation","invoice","registerFunctions","onlyNotes","onlyMine","textFilter","enableFilterHeader","showFilters","noteList","openNote","moreNotes","bubbleUpEditCppCallback","onSelectionStateChange","toggleShowFilters","clearFilters","showNote","toLowerCase","deleted","setNoteMinimized","cmeNoteDate","minimizeNote","cutoffDate","noteDate","isAfter","addMoreItems","notelist","_formsConstants__WEBPACK_IMPORTED_MODULE_0__","formSearchStr","groupSelection","SELECT_ALL","groupSelectedForms","displayFormList","adminAccess","adminEformAccess","hasAdminAccess","getCompletedForms","list","ensureSubjectNotNull","getFormsToAdd","getFormRevisions","formList","form","subject","onModeChange","onGroupChange","groupId","selectedForms","onFilterForms","foundInGroup","SELECT_FORM","FORM","SELECT_EFORM","EFORM","found","selectedItem","foundInSearch","openManageForms","showEditPopup","instancedForms","filterForms","reloadForms","sortMode","FORM_NAME","openEForm","openForm","doFilterForms","findIndex","tableParams","sorting","orderBy","cols","visible","sortable","displayClass","modeChange","newMode","groupChange","selectedItems","groups","_common_services_systemPreferenceServiceConstants__WEBPACK_IMPORTED_MODULE_0__","_generated__WEBPACK_IMPORTED_MODULE_1__","updateDemoExtras","extKey","posExtras","oldExtras","newExtras","pos","hidden","$sce","messagesFactory","providersService","patientDetailStatusService","referralDoctorsService","hin0","ver0","chartNo0","cytolNum0","referralDocNo0","familyDocNo0","sin0","effDate0","hcRenewDate0","rosterDate0","rosterTerminationDate0","patientStatusDate0","dateJoined0","endDate0","onWaitingListSinceDate0","paperChartArchivedDate0","phoneNum","defPhTitle","prefPhTitle","eligibilityMsg","trustAsHtml","showEligibility","recordCtrl","initDemographicVars","checkAccess","doctors","nurses","midwives","demoContacts","demoContactShow","demoContactPros","notes","scrNotes","familyDoctor","referralDoc","formatDocOutput","scrReferralDocNo","number","scrReferralDoc","familyDoctor2","familyDoc","scrFamilyDocNo","scrFamilyDoc","extras","scrDemoCell","scrAboriginal","scrHPhoneExt","scrWPhoneExt","scrCytolNum","scrPhoneComment","scrPaperChartArchived","scrUsSigned","scrPrivacyConsent","scrInformedConsent","scrSecurityQuestion1","scrSecurityAnswer1","scrRxInteractionLevel","scrCellPhone","getPhoneNum","scrHomePhone","scrWorkPhone","alternativePhone","waitingListNames","tmp","groupNo","createDate","isHistory","cellPhonePreferredMsg","homePhonePreferredMsg","workPhonePreferredMsg","isPreferredPhone","scrPreferredPhone","preferredPhoneNumber","cellPhonePreferredColor","homePhonePreferredColor","workPhonePreferredColor","dataChanged","engFre","spokenlangs","rosterTermReasons","securityQuestions","rxInteractionLevels","macPHRLoggedIn","macPHRIdsSet","macPHRVerificationLevel","integratorEnabled","integratorOffline","integratorAllSynced","conformanceFeaturesEnabled","workflowEnhance","hospitalView","integratorStatusColor","integratorStatusMsg","billingHistoryLabel","rosterStatusList","patientStatusList","formatLastName","formatFirstName","validateHCSave","BC","ON","CLINICAID","effDateMoment","hcRenewDateMoment","chartNo","sin","openSwipecardModal","cardInfo","fillDataFromSwipecard","checkEligibility","expireDate","valid","HCValidation","swipecardMsg","responseDescription","responseCode","checkHin","checkHinVer","checkDate","checkYear","checkMonth","daysOfMonth","date3Valid","checkDay","checkPatientStatus","patientStatus","dateStr","datePart","dateDate","dateValid","isPostalComplete","isPostalValid","resetEditState","checkEmail","regex","checkChartNo","checkCytoNum","checkReferralDocNo","validateDocNo","checkFamilyDocNo","docNo","quiet","checkSin","validateSin","sinNumber","floor","preventManualEffDate","preventManualHcRenewDate","preventManualRosterDate","preventManualRosterTerminationDate","preventManualPatientStatusDate","preventManualDateJoined","preventManualEndDate","preventManualOnWaitingListSinceDate","preventManualPaperChartArchivedDate","isRosterTerminated","rosterStatus","showReferralDocList","searchReferralDocsName","searchReferralDocs","searchReferralDocsRefNo","referralDoctors","referralNo","specialtyType","chooseReferralDoc","chooseFamilyDoc","showAddNewRosterStatus","newRosterStatus","showAddNewPatientStatus","newPatientStatus","addNewRosterStatus","addNewPatientStatus","checkPhone","invalidPhoneNumber","setPreferredPhone","isPhoneVoid","showEnrollmentHistory","launchPhoto","manageContacts","discard","printLabel","integratorDo","func","macPHRDo","appointmentDo","encodeURI","isClinicaidBilling","billingDo","exportDemographic","begin","formatDocInput","doc","doSave","dateEmpty","newDemoExtras","maxDaysOfMonth","demoContact","contactShow","sdm","ec","AppointmentApi_1","IceFallApi_1","ProviderPreferenceApi_1","ScheduleApi_1","SitesApi_1","SystemPreferenceApi_1","APIS","AppointmentTo1","BookingSourceEnum","ProviderTo1","SexEnum","RestResponseAppointmentTo1","StatusEnum","RestResponseBoolean","RestResponseCalendarAppointment","RestResponseCalendarSchedule","RestResponseIceFallLogEntryListTo1","RestResponseIceFallSettingsTo1","RestResponseInteger","RestResponseSiteTransfer","RestResponseString","RestSearchResponseAppointmentEditRecord","RestSearchResponseAppointmentTypeTo1","RestSearchResponseCalendarAppointmentStatus","RestSearchResponseLookupListItemTo1","RestSearchResponsePatientListItemTransfer","RestSearchResponseScheduleGroup","RestSearchResponseScheduleSearchResult","RestSearchResponseScheduleTemplateCode","RestSearchResponseSiteTransfer","ScheduleGroup","IdentifierTypeEnum","cardDataString","focusInput","parseDataAndClose","dataString","onEnterKeyDown","pym","currentFormList","currentForm","currentlistId","formlists","changeTo","listId","debug","viewFormState","hasChildNodes","removeChild","firstChild","pymParent","Parent","getListClass","getActiveFormClass","keypress","altKey","currIdx","resizeIframe","iframe","contentWindow","scrollHeight","$resource","ticklerAPI","lastResponse","serviceEndDate","startOf","ticklerViewOnlyMine","taskAssignedTo","loadTable","doSearch","checkNone","ServiceDate","includeLinks","includeComments","includeUpdates","includeProgram","myRegexp","exec","sortColumn","$promise","ticklerList","ticklerLinks","ticklerLinkUrl","getLinkUrl","completeTicklers","selectedTicklers","deleteTicklers","addTickler","editTickler","editNote2","showComments","printArea","tableName","tableId","inDemographicView","ticklerUpdate","serviceDateInput","serviceTimeInput","needsUpdate","showUpdates","showCommentFormControl","priorities","selectedStatus","newDate","finalVal","updateTaskAssignedTo","taskAssignedToName","showTaskAssignedToFormControl","cancelTaskAssignedToUpdate","editServiceDateAndTime","showServiceDateAndTimeFormControl","updateServiceDateAndTime","dp","tp","serviceTime","cancelServiceDateAndTimeUpdate","editPriority","showPriorityFormControl","updatePriority","newPriority","cancelPriorityUpdate","editStatus","showStatusFormControl","updateStatus","statusName","cancelStatusUpdate","addComment","saveComment","ticklerComments","comment","providerName","formattedName","updateDate","cancelCommentUpdate","saveChanges","postData","completeTickler","deleteTickler","printTickler","serviceDateDate","serviceDateTime","suggestedTextId","updateDemographicNo","textSuggestions","suggestedText","validate","t","showErrors","givenDate","givenTime","setHours","setMinutes","searchPatients","updateProviderNo","setSuggestedText","addMonthsFromNow","originalNote","_generated_api_ScheduleApi__WEBPACK_IMPORTED_MODULE_1__","_generated_api_SitesApi__WEBPACK_IMPORTED_MODULE_2__","_generated_api_ProviderPreferenceApi__WEBPACK_IMPORTED_MODULE_3__","_generated_api_SystemPreferenceApi__WEBPACK_IMPORTED_MODULE_4__","focusService","globalStateService","sitesApi","providerPreferenceApi","systemPreferencesApi","calendarMinColumnWidth","calendarName","calendarLoading","customLoading","uiConfig","uiConfigApplied","cpCalendarControl","scheduleOptions","resourceOptionHash","selectedResources","showNoResources","timeIntervalOptions","defaultTimeInterval","selectedTimeInterval","scheduleTimeInterval","selectedSlotLabelInterval","hours","availabilityTypes","scheduleTemplates","sites","siteOptions","sitesEnabled","selectedSiteName","openingDialog","dialog","calendarViewEnum","agendaDay","agendaWeek","agendaMonth","calendarViewDefault","calendarViewName","scheduleViewEnum","selectedScheduleView","scheduleTypeEnum","selectedSchedule","defaultDate","formLinks","formNameMap","eFormNameMap","quickLinkMap","getCalendarViewName","loadAvailabilityTypes","loadScheduleOptions","loadResourceHash","loadSiteOptions","loadExtraLinkData","loadDefaultSelections","setEventSources","initEventsAutoRefresh","applyUiConfig","isSchedulingEnabled","hasSites","getTimeIntervalOptions","getScheduleOptions","getSiteOptions","viewName","calendarEvents","timezone","loadScheduleEvents","showTimeIntervals","changeToSchedule","resourceId","view","scheduleData","identifierType","providerNos","onScheduleChanged","changeCalendarView","changeScheduleView","refetchEvents","changeDate","isAgendaView","resources","isResourceView","isScheduleView","isAgendaDayView","isAgendaWeekView","isAgendaMonthView","getSelectedSchedule","selectedUuid","getSelectedScheduleView","preference","viewSelected","getSelectedSite","siteSelected","hasPatientSelected","calEvent","setCalendarLoading","isLoading","setCustomLoading","updateEvent","timeIntervalMinutes","getSelectedTimeInterval","timeInterval","period","getScheduleMinTime","timeStr","startHour","getScheduleMaxTime","endHour","siteName","endOf","startDateString","endDateString","hasVisibleSchedules","visibleSchedules","hiddenDays","providerIdList","buildSelectedResources","hiddenDaysList","eventList","resourceOption","warn","setCalendarResources","resourceView","saveEvent","editMode","repeatOnDateList","dateList","moveEvent","adjustStartTime","endMoment","movedAppointment","asMinutes","moveEventSuccess","eventData","rendering","processSaveResults","errorMessage","validationErrorArray","validationErrors","deleteEvent","openCreateInvoice","event_uuid","schedule_uuid","demographics_patient_uuid","get_loaded_schedule","calendar_api_adapter","get_create_invoice_url","demographics_practitioner_uuid","window_scope","rotateEventStatus","newStatus","getStatusByCode","eventStatusCode","buildEventLink","$rootElem","shortName","append","data-id","onEventRender","eventElement","labelElem","detailElem","selfBookElem","telehealthElem","eventStatus","displayLetter","sortOrder","eventReason","eventNotes","virtual","show","doNotBook","demographicName","appointmentName","detailText","eventTitle","tagSelfBooked","parent","maxNameLengthProp","patientNameLength","formContainerElem","scheduleCodeElement","availabilityType","systemCode","systemCodeVisible","minute","onViewRender","onResourceRender","resourceObj","labelTds","bodyTds","display_name","onHeaderClick","afterRender","click","jsEvent","currentTarget","dataset","target","openDaysheet","openScheduleSearchDialog","onEventClick","$target","openEncounterPage","openBillingPage","openMasterRecord","openRxPage","openFormLink","openQuickLink","openEditEventDialog","userProviderNo","userFirstName","userLastName","apptProvider_no","demographic_no","demographic_name","user_no","billingRegion","billForm","billingForm","hotclick","bNewForm","appointment_no","start_time","referral_no_1","billingRdohip","getBillingLink","getRxLink","formattedDate","openEFormLink","getActiveTemplateEvents","momentStart","activeEvents","isBefore","isSameOrAfter","extendedAvailabilityType","scheduleTemplateCode","duration","preferredEventLengthMinutes","openCreateEventDialog","resource","scheduleUuid","templateEvent","templateDuration","openAppointmentDialog","isEditMode","calEventData","defaultEventStatus","animation","parentScope","keyBinding","bindKeyGlobal","scheduleStartTime","scheduleEndTime","onEventDrop","revertFunc","onEventResize","onSiteChanged","onTimeIntervalChanged","intervalInMin","slotLabelInterval","loadSitesEnabled","loadSites","out","siteId","bgColor","lengthProp","appointmentScreenLinkNameDisplayLength","eFormIds","appointmentScreenEforms","eFormList","formIds","appointmentScreenForms","enableIntakeForm","intakeFormEnabled","quickLinkIds","appointmentScreenQuickLinks","linkName","linkUrl","loadEformData","eFormService","minTime","maxTime","scrollTime","nowIndicator","columnHeader","views","columnHeaderFormat","week","allDaySlot","agendaEventMinHeight","snapDuration","slotLabelFormat","slotEventOverlap","lazyFetching","resourceOrder","loading","selectable","eventClick","eventRender","viewRender","resourceRender","navLinkDayClick","navLinkWeekClick","eventAfterAllRender","eventDrop","eventResize","schedulerLicenseKey","_generated__WEBPACK_IMPORTED_MODULE_2__","controllerAs","useOldEchart","repeatBooking","history","appointmentTypeList","reasonCodeList","eventUuid","reasonCode","critical","superAdmin","max_bookings_limit","toggleEnum","off","endTypeEnum","after","intervalOptions","frequencyOptions","repeatBookingData","frequency","interval","endAfterNumber","endType","repeatBookingDates","eventHistory","patientTypeahead","autocompleteValues","selectedEventStatus","timepickerFormat","fieldValueMapping","isDoubleBook","isDoubleBookPrevented","providerModel","loadData","fillData","keyBindSettings","loadAppointmentReasons","loadAppointmentTypes","momentEnd","setSelectedEventStatus","eventStatusModifier","urgency","checkEventConflicts","isPatientSelected","loadAppointmentHistory","userSites","filteredSites","isValidSiteValue","assignDefaultSite","noSitesSite","selectedCode","getTypeDataByTypeValue","typeValue","modalContent","formattedTime","calculateEndTime","isSameOrBefore","eventStart","eventEnd","eventDoNotBook","appointmentId","formattedUpdateDate","updateDateTime","formattedCreateDate","createDateTime","formattedUpdateTime","formattedCreateTime","validateForm","updateRepeatBookingDates","isRepeatBookingEnabled","generateRepeatBookingDateList","removeRepeatBookingDate","dataObj","maxRepeats","bUseEndDate","isRepeatBookingEndTypeDate","bUseMaxRepeat","isRepeatBookingEndTypeAfter","lastDate","nextDate","startDatetime","endDatetime","repeatOnDates","time_str","loadPatientFromTypeahead","autofillDataFromType","typeData","hasAppointmentId","inEditMode","valueToTest","showPatientChartLinks","isTabActive","clearPatient","saveAndBill","saveAndPrint","saveAndReceipt","saveDoNotBook","viewInvoices","open_view_invoices","createPatient","create_patient_dialog","openPatientDialog","onPatientModalSave","modify_patient","modify_patient_dialog","openRxWindow","openTelehealthWindow","ctrl+enter","tooltip","ctrl+shift+enter","appointmentCode","clean","resultList","loadProviderList","appointmentCodeList","loadAppointmentCodes","dayOfWeekList","timeList","timeObj","scheduleSlot","appointmentDateTime","durationMinutes","reset","searchSchedules","codeList","rotateStatuses","currentStatus","nextStatusCode","rotates","_adminConstants__WEBPACK_IMPORTED_MODULE_0__","processNavResults","newState","rawTransition","transitionState","frameUrl","loadNavItems","navList","expandNavGroup","navGroup","collapseAllNavGroups","ADMIN_RELOAD_NAV","ADMIN_EXPAND_NAV_GROUP","faxAccountService","systemPreferenceService","faxAccountList","loggedInProvider","masterFaxDisabled","masterFaxEnabledInbound","masterFaxEnabledOutbound","initialize","updateMasterFaxDisabledStatus","editNewFaxAccount","editFaxAccount","faxAccount","isNewAcct","updatedAccount","saveMasterFaxEnabledStateInbound","setSystemProperty","saveMasterFaxEnabledStateOutbound","connectionStatusEnum","unknown","failure","coverLetterOptions","connectionStatus","setDefaultConnectionStatus","enableInbound","enableOutbound","accountLogin","accountEmail","password","coverLetterOption","faxNumber","$valid","closeSuccess","closeError","faxInboundService","faxOutboundService","displayStatus","queued","inProgress","integrationFailed","integrationSuccess","archivedStatus","systemStatusEnum","sent","notificationStatusEnum","dismissed","outbox","loggedInProviderNo","displayNotificationColumn","nextPullTime","nextPushTime","selectedFaxAccount","outboxItemList","inboxItemList","DateSent","loadNextPushTime","loadNextPullTime","loadOutboxItems","tableParamsOutbox","formatOptionalDateParam","combinedStatus","loadInboxItems","tableParamsInbox","resendFax","outboxItem","requireFullRefresh","systemStatus","systemStatusMessage","dismissNotification","openDocument","openDocumentWindow","viewDownloadFile","outboundId","dateObj","getStatusDisplayLabel","statusEnum","displayLabel","goTo","expandGroup","goToFrame","context","adminLandingPage","oscarContextPath","selectedProvider","selectedPanel","dashboardUrl","missingRequiredFeildProvider","missingRequiredFeildPanel","panels","panel","runReport","integrationList","propertyName","configUrl","integration","enableProperty","enable","tabState","_generated__WEBPACK_IMPORTED_MODULE_0__","iceFallApi","iceFallSettings","setIceFallVisible","saveIceFallSettings","filterStatuses","statusFilter","logEntries","DATE_SENT","paginationMaxBlocks","paginationMinBlocks","orderByToApiName","orderByGetDirection","totalLogEntries","doEformPopup","instance","PrevListQuantity","availablePreventionRuleSets","currentPreventionRulesSet","checkStatus","getPreventionRulesList","prevSet","increasePrevListQuantity","notifications","readMore","notif","reportByTemplateService","k2aReports","K2A_URL","dtOptions","saveK2AReport","refreshParent","openK2AUrl","opener","onunload","frameUrlEncoded","escape","useCompat","atth","patientName","attachedDocs","attachments","selectedAttachedDoc","consultId","availableDocs","selectedAvailableDoc","openDoc","attach","removeIndex","documentNo","selectionIndex","selectedIndex","attachmentsChanged","detach","done","consultReadAccess","consultUpdateAccess","consultWriteAccess","searchMrps","mrpNo","updateMrpNo","mrpName","editConsult","addConsult","removeDemographicAssignment","removeMrpAssignment","searchDemoNo","setSearchParams","$current","srhDemoNo","srhMrpNo","srhStatus","srhTeam","referralStartDate","srhRefStartDate","srhRefEndDate","appointmentStartDate","srhApptStartDate","appointmentEndDate","srhApptEndDate","srhToPage","srhCountPerPage","srhSortMode","srhSortDir","justOpen","ReferralDate","getSavedSearchVals","search1","j","statusDescription","urgencyDescription","urgencyColor","refDate","setMonth","outstanding","hideSearchPatient","vheight","vwidth","varpage","winname","faxList","serviceList","sendToList","parseTime","time","tArray","appointmentHour","appointmentMinute","appointmentTime","cellPhone","letterheadList","letterhead","changeLetterhead","letterheadName","serviceId","specialists","spec","professionalSpecialist","letterheadAddress","letterheadPhone","letterheadFax","fax","consultChanged","changeService","writeToBox","boxId","boxData","clinicalInfo","concurrentProblems","currentMeds","getAllergies","invalidData","setAppointmentTime","patientWillBook","apptTime","set","openAttach","attachment","attachFiles","setESendEnabled","eSendEnabled","eDataUrl","consultSaving","finally","saveAndFax","reqId","eSend","onRecordPage","getAccessRights","getTeams","getSavedSearchParams","_params","tmpSearch","countPerPage","toPage","referringDoctorList","referringDoc","referringDoctor","p_page1","sendFax","p_urgency","p_letterheadName","p_page2","getPrintPage2","consultResponsePage","printPreview","printWin","p_attachments","write","p_clinicName","p_responseDate","p_referralDate","p_letterheadAddress","p_letterheadPhone","p_letterheadFax","p_consultantName","p_consultantPhone","phoneNumber","p_consultantFax","p_consultantAddress","streetAddress","p_patientName","p_patientPhone","p_patientWorkPhone","p_patientBirthdate","p_patientSex","sexDesc","p_patientHealthCardNo","p_patientChartNo","p_patientAddress","p_appointmentDate","p_appointmentTime","p_reason","reasonForReferral","examination","impression","plan","allergies","demographicReadAccess","defaultStatus","clearParams","initTable","DemographicName","promiseArray","integratorResults","demographicSearchResults","promiseErrors","dobMoment","searchType","searchTermPlaceHolder","toggleParam","loadRecord","showIntegratorResults","currentPage","doImport","myUrl","remoteFacilityId","prevPage","nextPage","$log","ReportNavigation","reports","numberLabel","iframeUrl","reportGroup","reportGroups","getReportGroups","reportSidebar","editDemographicSet","selectReport","getReports","groupMap","report","currentReport","direct","generateReport","p","version","region","openPopup","_generated_api_SitesApi__WEBPACK_IMPORTED_MODULE_0__","pref","recentPatients","formGroupNames","billingServiceTypesMod","tabs","pageSizes","rxInteractionWarningLevels","staleDates","olisLabs","pasteFormats","letterHeadNameDefaults","consultationLetterHeadNameDefault","currentTab","validateSettings","selectEncounterForms","selectEForms","removeQuickLinks","openChangePasswordModal","openQuickLinkModal","editDocumentTemplates","showProviderColourPopup","showDefaultEncounterWindowSizePopup","openConfigureEChartCppPopup","openManageAPIClientPopup","openMyOscarUsernamePopup","authenticate","app","refreshAppList","changePassword","qll","addQuickLink","qlForm","_partials_patientSummaryItems_html__WEBPACK_IMPORTED_MODULE_0__","_partials_patientSummaryItems_html__WEBPACK_IMPORTED_MODULE_0___default","ospInfo","contact","buildInfo","versionDisplayName"],"mappings":"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","file":"bundle.94c815eb131cd2dd336e.js","sourcesContent":["/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\nexport enum FORM_CONTROLLER_STATES\n{\n\t\tADD,\n\t\tCOMPLETED,\n\t\tREVISION,\n\t\tDELETED,\n\t\tMANAGE,\n}\n\nexport enum FORM_CONTROLLER_SORT_MODES\n{\n\tFORM_NAME = \"name\",\n\tADDITIONAL =\"subject\",\n\tMOD_DATE = \"date\",\n\tCREATE_DATE = \"createDate\"\n}\n\nexport enum FORM_CONTROLLER_FORM_TYPES\n{\n\tEFORM = 'eform',\n\tFORM ='form'\n}\n\nexport enum FORM_CONTROLLER_SPECIAL_GROUPS\n{\n\tSELECT_ALL = -1,\n\tSELECT_EFORM = -2,\n\tSELECT_FORM = -3\n}","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ScheduleApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param demographicNo \n     */\n    public getAppointmentHistory (demographicNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.SchedulingResponse> {\n        const localVarPath = this.basePath + '/schedule/{demographicNo}/appointmentHistory'\n            .replace('{' + 'demographicNo' + '}', encodeURIComponent(String(demographicNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'demographicNo' is not null or undefined\n        if (demographicNo === null || demographicNo === undefined) {\n            throw new Error('Required parameter demographicNo was null or undefined when calling getAppointmentHistory.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentReasons (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseLookupListItemTo1> {\n        const localVarPath = this.basePath + '/schedule/reasons';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseAppointmentStatusTo1> {\n        const localVarPath = this.basePath + '/schedule/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getAppointmentTypes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseAppointmentTypeTo1> {\n        const localVarPath = this.basePath + '/schedule/types';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param date \n     */\n    public getAppointmentsForDay (date: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponsePatientListItemTransfer> {\n        const localVarPath = this.basePath + '/schedule/day/{date}'\n            .replace('{' + 'date' + '}', encodeURIComponent(String(date)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'date' is not null or undefined\n        if (date === null || date === undefined) {\n            throw new Error('Required parameter date was null or undefined when calling getAppointmentsForDay.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getCalendarAppointmentStatuses (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseCalendarAppointmentStatus> {\n        const localVarPath = this.basePath + '/schedule/calendar/statuses';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param scheduleId \n     * @param scheduleIdType \n     * @param scheduleFilter \n     * @param startDate \n     * @param endDate \n     * @param startTime \n     * @param endTime \n     * @param site \n     * @param slotDuration \n     */\n    public getCalendarSchedule (scheduleId?: string, scheduleIdType?: string, scheduleFilter?: boolean, startDate?: string, endDate?: string, startTime?: string, endTime?: string, site?: string, slotDuration?: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarSchedule> {\n        const localVarPath = this.basePath + '/schedule/calendar';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        if (scheduleId !== undefined) {\n            queryParameters['scheduleId'] = scheduleId;\n        }\n\n        if (scheduleIdType !== undefined) {\n            queryParameters['scheduleIdType'] = scheduleIdType;\n        }\n\n        if (scheduleFilter !== undefined) {\n            queryParameters['scheduleFilter'] = scheduleFilter;\n        }\n\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (startTime !== undefined) {\n            queryParameters['startTime'] = startTime;\n        }\n\n        if (endTime !== undefined) {\n            queryParameters['endTime'] = endTime;\n        }\n\n        if (site !== undefined) {\n            queryParameters['site'] = site;\n        }\n\n        if (slotDuration !== undefined) {\n            queryParameters['slotDuration'] = slotDuration;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleGroups (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleGroup> {\n        const localVarPath = this.basePath + '/schedule/groups';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getScheduleTemplateCodes (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleTemplateCode> {\n        const localVarPath = this.basePath + '/schedule/templateCodes';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param dayOfWeek \n     * @param startTime \n     * @param endTime \n     * @param code \n     * @param resultCount \n     */\n    public searchAvailable (providerNo?: string, dayOfWeek?: string, startTime?: string, endTime?: string, code?: string, resultCount?: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseScheduleSearchResult> {\n        const localVarPath = this.basePath + '/schedule/search/available';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        if (providerNo !== undefined) {\n            queryParameters['providerNo'] = providerNo;\n        }\n\n        if (dayOfWeek !== undefined) {\n            queryParameters['dayOfWeek'] = dayOfWeek;\n        }\n\n        if (startTime !== undefined) {\n            queryParameters['startTime'] = startTime;\n        }\n\n        if (endTime !== undefined) {\n            queryParameters['endTime'] = endTime;\n        }\n\n        if (code !== undefined) {\n            queryParameters['code'] = code;\n        }\n\n        if (resultCount !== undefined) {\n            queryParameters['resultCount'] = resultCount;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class AppointmentApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public addAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param calendarAppointmentRepeating \n     */\n    public addRepeatingAppointment (calendarAppointmentRepeating?: models.CalendarAppointmentRepeating, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment/repeating';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: calendarAppointmentRepeating,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public deleteAppointment (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseInteger> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling deleteAppointment.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'DELETE',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public getAppointment (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseAppointmentTo1> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling getAppointment.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public getEditHistory (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseAppointmentEditRecord> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}/edit_history'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling getEditHistory.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     */\n    public setNextStatus (appointmentNo: number, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}/rotate_status'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling setNextStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param appointmentNo \n     * @param body \n     */\n    public setStatus (appointmentNo: number, body?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/appointment/{appointmentNo}/set_status'\n            .replace('{' + 'appointmentNo' + '}', encodeURIComponent(String(appointmentNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'appointmentNo' is not null or undefined\n        if (appointmentNo === null || appointmentNo === undefined) {\n            throw new Error('Required parameter appointmentNo was null or undefined when calling setStatus.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: body,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param calendarAppointment \n     */\n    public updateAppointment (calendarAppointment?: models.CalendarAppointment, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseCalendarAppointment> {\n        const localVarPath = this.basePath + '/appointment';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: calendarAppointment,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\nexport enum ADMIN_PAGE_EVENTS\n{\n    ADMIN_RELOAD_NAV = 'adminNavReload',\n    ADMIN_EXPAND_NAV_GROUP = \"adminExpandNavGroup\"\n}","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class SystemPreferenceApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param key \n     * @param _default \n     */\n    public getPreferenceEnabled (key: string, _default?: boolean, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseBoolean> {\n        const localVarPath = this.basePath + '/systemPreference/{key}/enabled'\n            .replace('{' + 'key' + '}', encodeURIComponent(String(key)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'key' is not null or undefined\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling getPreferenceEnabled.');\n        }\n\n        if (_default !== undefined) {\n            queryParameters['default'] = _default;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param key \n     * @param _default \n     */\n    public getPreferenceValue (key: string, _default?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/systemPreference/{key}'\n            .replace('{' + 'key' + '}', encodeURIComponent(String(key)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'key' is not null or undefined\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling getPreferenceValue.');\n        }\n\n        if (_default !== undefined) {\n            queryParameters['default'] = _default;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param key \n     */\n    public getPropertyEnabled (key: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseBoolean> {\n        const localVarPath = this.basePath + '/systemPreference/property/{key}/enabled'\n            .replace('{' + 'key' + '}', encodeURIComponent(String(key)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'key' is not null or undefined\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling getPropertyEnabled.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param key \n     * @param _default \n     */\n    public getPropertyValue (key: string, _default?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/systemPreference/property/{key}'\n            .replace('{' + 'key' + '}', encodeURIComponent(String(key)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'key' is not null or undefined\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling getPropertyValue.');\n        }\n\n        if (_default !== undefined) {\n            queryParameters['default'] = _default;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param key \n     * @param body \n     */\n    public putPreferenceValue (key: string, body?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseInteger> {\n        const localVarPath = this.basePath + '/systemPreference/{key}'\n            .replace('{' + 'key' + '}', encodeURIComponent(String(key)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'key' is not null or undefined\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling putPreferenceValue.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: body,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","export * from './api/api';\nexport * from './model/models';","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\nexport enum SYSTEM_PROPERTIES\n{\n    INSTANCE_TYPE = \"instance_type\",\n    BILLING_TYPE = \"billing_type\",\n}\n\nexport enum INSTANCE_TYPE\n{\n    BC = \"BC\",\n    ON = \"ON\",\n    AB = \"AB\"\n}\n\nexport enum BILLING_TYPE\n{\n    BC = \"BC\",\n    ON = \"ON\",\n    CLINICAID = \"CLINICAID\"\n}","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class SitesApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     * @param providerNo \n     * @param sdate \n     */\n    public getProviderSiteBySchedule (providerNo: string, sdate: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseSiteTransfer> {\n        const localVarPath = this.basePath + '/sites/provider/{providerNo}/{sdate}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'sdate' + '}', encodeURIComponent(String(sdate)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getProviderSiteBySchedule.');\n        }\n\n        // verify required parameter 'sdate' is not null or undefined\n        if (sdate === null || sdate === undefined) {\n            throw new Error('Required parameter sdate was null or undefined when calling getProviderSiteBySchedule.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getSiteList (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseSiteTransfer> {\n        const localVarPath = this.basePath + '/sites';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     */\n    public getSitesByProvider (providerNo: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestSearchResponseSiteTransfer> {\n        const localVarPath = this.basePath + '/sites/provider/{providerNo}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling getSitesByProvider.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getSitesEnabled (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseBoolean> {\n        const localVarPath = this.basePath + '/sites/enabled';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class ProviderPreferenceApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     */\n    public getProviderSettings (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.AbstractSearchResponseProviderSettings> {\n        const localVarPath = this.basePath + '/providerSettings/get';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param providerSettings \n     */\n    public saveProviderSettings (providerNo: string, providerSettings?: models.ProviderSettings, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.GenericRESTResponse> {\n        const localVarPath = this.basePath + '/providerSettings/{providerNo}/save'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling saveProviderSettings.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: providerSettings,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param providerNo \n     * @param key \n     * @param body \n     */\n    public updateProviderSetting (providerNo: string, key: string, body?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseString> {\n        const localVarPath = this.basePath + '/providerSettings/{providerNo}/{key}'\n            .replace('{' + 'providerNo' + '}', encodeURIComponent(String(providerNo)))\n            .replace('{' + 'key' + '}', encodeURIComponent(String(key)));\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        // verify required parameter 'providerNo' is not null or undefined\n        if (providerNo === null || providerNo === undefined) {\n            throw new Error('Required parameter providerNo was null or undefined when calling updateProviderSetting.');\n        }\n\n        // verify required parameter 'key' is not null or undefined\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling updateProviderSetting.');\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: body,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from '../model/models';\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nexport class IceFallApi {\n    protected basePath = 'http://localhost/';\n    public defaultHeaders : any = {};\n\n    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];\n\n    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {\n        if (basePath !== undefined) {\n            this.basePath = basePath;\n        }\n    }\n\n    /**\n     * \n     */\n    public authenticateWithIceFallApi (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseBoolean> {\n        const localVarPath = this.basePath + '/integrations/iceFall/authenticate';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     */\n    public getIceFallSettings (extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseIceFallSettingsTo1> {\n        const localVarPath = this.basePath + '/integrations/iceFall/settings';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param startDate \n     * @param endDate \n     * @param page \n     * @param pageSize \n     * @param status \n     * @param sortBy \n     * @param sortDirection \n     */\n    public getLogEntries (startDate?: string, endDate?: string, page?: number, pageSize?: number, status?: string, sortBy?: string, sortDirection?: string, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseIceFallLogEntryListTo1> {\n        const localVarPath = this.basePath + '/integrations/iceFall/logs';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        if (startDate !== undefined) {\n            queryParameters['startDate'] = startDate;\n        }\n\n        if (endDate !== undefined) {\n            queryParameters['endDate'] = endDate;\n        }\n\n        if (page !== undefined) {\n            queryParameters['page'] = page;\n        }\n\n        if (pageSize !== undefined) {\n            queryParameters['pageSize'] = pageSize;\n        }\n\n        if (status !== undefined) {\n            queryParameters['status'] = status;\n        }\n\n        if (sortBy !== undefined) {\n            queryParameters['SortBy'] = sortBy;\n        }\n\n        if (sortDirection !== undefined) {\n            queryParameters['sortDirection'] = sortDirection;\n        }\n\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'GET',\n            url: localVarPath,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param iceFallSendFormTo1 \n     */\n    public sendFormToIceFall (iceFallSendFormTo1?: models.IceFallSendFormTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseBoolean> {\n        const localVarPath = this.basePath + '/integrations/iceFall/sendForm';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'POST',\n            url: localVarPath,\n            data: iceFallSendFormTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n    /**\n     * \n     * @param iceFallSettingsTo1 \n     */\n    public setIceFallSettings (iceFallSettingsTo1?: models.IceFallSettingsTo1, extraHttpRequestParams?: any ) : ng.IHttpPromise<models.RestResponseIceFallSettingsTo1> {\n        const localVarPath = this.basePath + '/integrations/iceFall/settings';\n\n        let queryParameters: any = {};\n        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);\n        let httpRequestParams: ng.IRequestConfig = {\n            method: 'PUT',\n            url: localVarPath,\n            data: iceFallSettingsTo1,\n            params: queryParameters,\n            headers: headerParams\n        };\n\n        if (extraHttpRequestParams) {\n            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);\n        }\n\n        return this.$http(httpRequestParams);\n    }\n}\n","module.exports = \"<h4 class=\\\"ng-scope\\\">Summary Items - Left Side</h4>\\n<table class=\\\"table table-hover table-condensed ng-scope\\\">\\n\\t<tbody>\\n\\t<tr>\\n\\t\\t<td class=\\\"col-xs-4\\\">\\n\\t\\t\\tOngoing Concerns\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-10\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-10\\\" id=\\\"radios-enc-10\\\" ng-model=\\\"$ctrl.pref.cppDisplayOngoingConcerns\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-11\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-11\\\" id=\\\"radios-enc-11\\\" ng-model=\\\"$ctrl.pref.cppDisplayOngoingConcerns\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<!-- ngIf: pref.cppDisplayOngoingConcerns -->\\n\\t\\t\\t\\t<small ng-if=\\\"$ctrl.pref.cppDisplayOngoingConcerns\\\" class=\\\"ng-scope\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-7\\\" id=\\\"check-enc-7\\\"\\n\\t\\t\\t\\t\\t\\t\\t   ng-model=\\\"$ctrl.pref.cppOngoingConcernsStartDate\\\" value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\">\\n\\t\\t\\t\\t\\t\\tShow Start Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-8\\\" id=\\\"check-enc-8\\\"\\n\\t\\t\\t\\t\\t\\t\\t   ng-model=\\\"$ctrl.pref.cppOngoingConcernsResDate\\\" value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show\\n\\t\\t\\t\\t\\t\\tResolution Date\\n\\t\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-9\\\" id=\\\"check-enc-9\\\"\\n\\t\\t\\t\\t\\t\\t\\t   ng-model=\\\"$ctrl.pref.cppOngoingConcernsProblemStatus\\\" value=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t   class=\\\"ng-pristine ng-valid\\\"> Show Problem Status\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</small><!-- end ngIf: pref.cppDisplayOngoingConcerns -->\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tMedical History\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-8\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-8\\\" id=\\\"radios-enc-8\\\" ng-model=\\\"$ctrl.pref.cppDisplayMedHx\\\" ng-value=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t   type=\\\"radio\\\" class=\\\"ng-valid ng-dirty\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-9\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-9\\\" id=\\\"radios-enc-9\\\" ng-model=\\\"$ctrl.pref.cppDisplayMedHx\\\" ng-value=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t   type=\\\"radio\\\" class=\\\"ng-valid ng-dirty\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<!-- ngIf: pref.cppDisplayMedHx -->\\n\\t\\t\\t\\t<small ng-if=\\\"$ctrl.pref.cppDisplayMedHx\\\" class=\\\"ng-scope\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-3\\\" id=\\\"check-enc-3\\\" ng-model=\\\"$ctrl.pref.cppMedHxStartDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Start Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-4\\\" id=\\\"check-enc-4\\\" ng-model=\\\"$ctrl.pref.cppMedHxResDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Resolution Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-5\\\" id=\\\"check-enc-5\\\" ng-model=\\\"$ctrl.pref.cppMedHxTreatment\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Treatment\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-6\\\" id=\\\"check-enc-6\\\" ng-model=\\\"$ctrl.pref.cppMedHxProcedureDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Procedure Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</small><!-- end ngIf: pref.cppDisplayMedHx -->\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tSocial History\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-6\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-6\\\" id=\\\"radios-enc-6\\\" ng-model=\\\"$ctrl.pref.cppDisplaySocialHx\\\" ng-value=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t   type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-7\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-7\\\" id=\\\"radios-enc-7\\\" ng-model=\\\"$ctrl.pref.cppDisplaySocialHx\\\" ng-value=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t   type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<!-- ngIf: pref.cppDisplaySocialHx -->\\n\\t\\t\\t\\t<small ng-if=\\\"$ctrl.pref.cppDisplaySocialHx\\\" class=\\\"ng-scope\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-1\\\" id=\\\"check-enc-1\\\" ng-model=\\\"$ctrl.pref.cppSocialHxStartDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Start Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-2\\\" id=\\\"check-enc-2\\\" ng-model=\\\"$ctrl.pref.cppSocialHxResDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Resolution Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</small><!-- end ngIf: pref.cppDisplaySocialHx -->\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tReminders\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-12\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-12\\\" id=\\\"radios-enc-12\\\" ng-model=\\\"$ctrl.pref.cppDisplayReminders\\\" ng-value=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t   type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-13\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-13\\\" id=\\\"radios-enc-13\\\" ng-model=\\\"$ctrl.pref.cppDisplayReminders\\\" ng-value=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t   type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<!-- ngIf: pref.cppDisplayReminders -->\\n\\t\\t\\t\\t<small ng-if=\\\"$ctrl.pref.cppDisplayReminders\\\" class=\\\"ng-scope\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-10\\\" id=\\\"check-enc-10\\\"\\n\\t\\t\\t\\t\\t\\t\\t   ng-model=\\\"pref.cppRemindersStartDate\\\" value=\\\"true\\\" class=\\\"$ctrl.ng-pristine ng-valid\\\"> Show\\n\\t\\t\\t\\t\\t\\tStart Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"check-enc-11\\\" id=\\\"check-enc-11\\\" ng-model=\\\"$ctrl.pref.cppRemindersResDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t   value=\\\"true\\\" class=\\\"ng-pristine ng-valid\\\"> Show Resolution Date\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</small><!-- end ngIf: pref.cppDisplayReminders -->\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr><!-- CPP Display -->\\n\\t<tr><!-- Summary Items -->\\n\\t\\t<td>\\n\\t\\t\\tPreventions\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-14\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-14\\\" id=\\\"radios-enc-14\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayPreventions\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-15\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-15\\\" id=\\\"radios-enc-15\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayPreventions\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tFamily History\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-32\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-32\\\" id=\\\"radios-enc-32\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayFamHx\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-33\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-33\\\" id=\\\"radios-enc-33\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayFamHx\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tRisk Factors\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-30\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-30\\\" id=\\\"radios-enc-30\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayRiskFactors\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-31\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-31\\\" id=\\\"radios-enc-31\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayRiskFactors\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tAllergies\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-28\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-28\\\" id=\\\"radios-enc-28\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayAllergies\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-29\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-29\\\" id=\\\"radios-enc-29\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayAllergies\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tMedications\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-16\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-16\\\" id=\\\"radios-enc-16\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayMeds\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-17\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-17\\\" id=\\\"radios-enc-17\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayMeds\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tOther Medications\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-18\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-18\\\" id=\\\"radios-enc-18\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayOtherMeds\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-19\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-19\\\" id=\\\"radios-enc-19\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayOtherMeds\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tAssessments\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-20\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-20\\\" id=\\\"radios-enc-20\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayAssessments\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-21\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-21\\\" id=\\\"radios-enc-21\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayAssessments\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<h4 class=\\\"ng-scope\\\">Summary Items - Right Side</h4>\\n<table class=\\\"table table-hover table-condensed ng-scope\\\">\\n\\t<tbody>\\n\\t<tr>\\n\\t\\t<td class=\\\"col-xs-4\\\">\\n\\t\\t\\tIncoming\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-24\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-24\\\" id=\\\"radios-enc-24\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayIncoming\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-25\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-25\\\" id=\\\"radios-enc-25\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayIncoming\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\tDecision Support\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-26\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-26\\\" id=\\\"radios-enc-26\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayDsSupport\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"true\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"true\\\">\\n\\t\\t\\t\\t\\tEnable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"radios-enc-27\\\">\\n\\t\\t\\t\\t\\t<input name=\\\"radios-enc-27\\\" id=\\\"radios-enc-27\\\" ng-model=\\\"$ctrl.pref.summaryItemDisplayDsSupport\\\"\\n\\t\\t\\t\\t\\t\\t   ng-value=\\\"false\\\" type=\\\"radio\\\" class=\\\"ng-pristine ng-valid\\\" value=\\\"false\\\">\\n\\t\\t\\t\\t\\tDisable\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t</tbody>\\n</table>\";","/*\n * \n * Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. *\n * This software is published under the GPL GNU General Public License. \n * This program is free software; you can redistribute it and/or \n * modify it under the terms of the GNU General Public License \n * as published by the Free Software Foundation; either version 2 \n * of the License, or (at your option) any later version. * \n * This program is distributed in the hope that it will be useful, \n * but WITHOUT ANY WARRANTY; without even the implied warranty of \n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License \n * along with this program; if not, write to the Free Software \n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * \n * \n * <OSCAR TEAM>\n * \n * This software was written for the \n * Department of Family Medicine \n * McMaster University \n * Hamilton \n * Ontario, Canada \n */\n\nfunction popup(height, width, url, windowName) {\n  return popup2(height, width, 0, 0, url, windowName);\n}\n\nfunction newWindow(url,windowName){\n    //this way the w&d works with older browsers as well\n    var w = document.getElementsByTagName('body')[0].clientWidth;//window.innerWidth;\n    var h = document.getElementsByTagName('body')[0].clientHeight;//window.innerHeight;\n    w = Math.max(w, window.innerWidth);\n    h = Math.max(h, window.innerHeight);\n    \n    return popup2(h, w, 0, 0, url, windowName);\n }\n\n\nfunction popup2(height, width, top, left, url, windowName){\n  if ( typeof popup2.winRefs == 'undefined' ) {\t  \n\t    popup2.winRefs = {};\n  }\n  if ( typeof popup2.winRefs[windowName] == 'undefined' || popup2.winRefs[windowName].closed ) {  \n\t  windowprops = \"height=\"+height+\",width=\"+width+\",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=\" + top + \",left=\" + left;\n\t  popup2.winRefs[windowName]=window.open(url, windowName, windowprops);\n  }\n  else {\n\t  popup2.winRefs[windowName].location.href = url;\n\t  popup2.winRefs[windowName].resizeTo(width,height);\n\t  popup2.winRefs[windowName].focus();\n  }\n  \n  return popup2.winRefs[windowName];  \n}\n\nfunction confirmNGo(url, message) {\n    if (confirm(message)) {\n        location.href = url;\n    }\n    return false;\n}\n\n\nfunction showHideItem(id){ \n    if(document.getElementById(id).style.display == 'none')\n        showItem(id);        \n    else\n        hideItem(id);        \n}\n\nfunction showItem(id){\n        document.getElementById(id).style.display = ''; \n}\n\nfunction hideItem(id){\n        document.getElementById(id).style.display = 'none'; \n}\n\n/*\noElm - Mandatory. This is element in whose children you will look for the attribute.\nstrTagName - Mandatory. This is the name of the HTML elements you want to look in. Use wildcard (*) if you want to look in all elements.\nstrAttributeName - Mandatory. The name of the attribute you’re looking for.\nstrAttributeValue - Optional. If you want the attribute you’re looking for to have a certain value as well. (don't specify it if you don't know it)\n*/\ndocument.getElementsByAttribute = function(oElm, strTagName, strAttributeName, strAttributeValue){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all : oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    var oAttributeValue = (typeof strAttributeValue != \"undefined\")? new RegExp(\"(^|\\\\s)\" + strAttributeValue + \"(\\\\s|$)\") : null;\n    var oCurrent;\n    var oAttribute;\n    for(var i=0; i<arrElements.length; i++){\n        oCurrent = arrElements[i];\n        oAttribute = oCurrent.getAttribute && oCurrent.getAttribute(strAttributeName);\n        if(typeof oAttribute == \"string\" && oAttribute.length > 0){\n            if(typeof strAttributeValue == \"undefined\" || (oAttributeValue && oAttributeValue.test(oAttribute))){\n                arrReturnElements.push(oCurrent);\n            }\n        }\n    }\n    return arrReturnElements;\n}\n\nfunction validDate(id) {\n   //checks if the <input type=\"text\"> has a valid date format yyyy/mm/dd\n   var completeRawDate = document.getElementById(id).value;\n   return validDateText(completeRawDate);\n}\n\nfunction validDateText(completeRawDate) {\n//Just another method that validates date in a string, useful if you want to make your own\n//date checking script.\n   var delimiter = '/';\n   if (completeRawDate.indexOf('/') == -1)\n       delimiter = '-';\n   var dateArray = completeRawDate.split(delimiter);\n   if (dateArray.length != 3) return false;\n   year = (dateArray[0] - 0);\n   month = (dateArray[1] - 1);\n   day = (dateArray[2] - 0);\n   //alert(\"year: \" + year + \", \" + month + \", \" + day);\n   dateObject = new Date(year,month,day);\n   return ((day==dateObject.getDate()) && (month==dateObject.getMonth()) && (year==dateObject.getFullYear()));\n}\n\nfunction validDateFieldsByClass(className, parentEle) {\n//Checks if the dates are valid, identifies date fields by class name; datefield preferrably type=\"text\"\n// parentEle is any object that encloses the fields, usually the form element\n   var datefields = document.getElementsByClassName(className, parentEle)\n   for (var i=0; i<datefields.length; i++) {\n      if (!validDateText(datefields[i].value)) {\n        datefields[i].focus();\n        return false;\n      }\n   }\n   return true;\n}\n\n//returns mouse coordinates\nfunction getMouseCoords(e) {\n        var array = new Array(2);\n\tvar posx = 0;\n\tvar posy = 0;\n\tif (!e) var e = window.event;\n\tif (e.pageX || e.pageY) \t{\n\t\tposx = e.pageX;\n\t\tposy = e.pageY;\n\t}\n\telse if (e.clientX || e.clientY) \t{\n        posx = e.clientX + document.body.scrollLeft\n\t\t\t+ document.documentElement.scrollLeft;\n\t\tposy = e.clientY + document.body.scrollTop\n\t\t\t+ document.documentElement.scrollTop;\n\t}\n        array[0] = posx;\n        array[1] = posy;\n        return array;\n}\n\n//example  <input type=\"checkbox\" onclick=\"checkAll(this, 'parentEle', 'checkclass')\">\nfunction checkAll(master, parentEle, className){\n   var val = master.checked;\n   var chkList = document.getElementsByClassName(className, parentEle);\n   for (i =0; i < chkList.length; i++){\n      chkList[i].checked = val;\n   }\n}\n\n//Calls firebugs console log if it's available.  A safer way to use the console because if firebug is not enabled the javascript will error on the console.log line.\nfunction oscarLog(str){\n    if(window.console){\n       console.log(str);\n    }\n    \n}\n\n\n//Can be use the enter key in a text box and call javacript function\n//example:  <itput type=\"text\" onkeypress=\"return grabEnter(event,'ReferralScriptAttach1()')\"/>\nfunction grabEnter(event,callb){\n  if( (window.event && window.event.keyCode == 13) || (event && event.which == 13) )  {\n     eval(callb);\n     return false;\n  }\n}\n\n\n\n//Checks to see if a String is numeric integer ie. No decimal aloud\nfunction isNumericInt(sText){\n   var validNumChars = \"0123456789\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n\n//Checks to see if a String is numeric\nfunction isNumeric(sText){\n   var validNumChars = \"0123456789.\";\n   var isNumber=true;\n   var chara;\n   for (i = 0; i < sText.length && isNumber == true; i++) {\n      chara = sText.charAt(i);\n      if (validNumChars.indexOf(chara) == -1) {\n         isNumber = false;\n      }\n   }\n   return isNumber;\n}\n//remove leading and trailing white space\nfunction trim(str){\n   str=str.replace(/^\\s+/g,\"\");\n   str=str.replace(/\\s+$/g,\"\");//trim str\n   return str;\n}","/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n*/\n'use strict';\n\nif (!window.Oscar)\n{\n\twindow.Oscar = {}\n}\nif (!Oscar.HealthCardParser)\n{\n\tOscar.HealthCardParser = {}\n}\n\nvar BC_STANDALONE = \"%B610043\";\nvar BC_PREFIX = \"%BC\";\nvar BC_COMBINED = \"?;636028\";\nvar ON_STANDALONE = \"%B610054\";\n\nOscar.HealthCardParser.isWhitelisted = function isWhitelisted(cardNo)\n{\n\tcardNo = cardNo.toUpperCase();\n\treturn (cardNo.startsWith(BC_STANDALONE) ||\n\t\t\tcardNo.startsWith(ON_STANDALONE) ||\n\t\t\t(cardNo.startsWith(BC_PREFIX) && cardNo.substring(cardNo.indexOf(\"?\")).startsWith(BC_COMBINED)));\n};\n\n/**\n * take in separated year, month, day values and ensure that their combination\n * produces a valid date\n * @param year\n * @param month\n * @param day\n */\nOscar.HealthCardParser.validateDate = function validateDate(year, month, day)\n{\n\tvar dateString = year + \"-\" + month + \"-\" + day;\n\treturn !(isNaN(Date.parse(dateString)));\n};\n\nOscar.HealthCardParser.getFieldValue = function getFieldValue(track, trackIndex, length)\n{\n\tvar fieldValue = \"\";\n\ttry\n\t{\n\t\t// fields where the value is shorter than the length use ^ as a terminator\n\t\tvar terminationIndex = track.indexOf(\"^\", trackIndex);\n\t\t//if no terminator OR terminator outside of field\n\t\tif (terminationIndex < 0 || terminationIndex > length)\n\t\t{\n\t\t\t// get the string using the index and length\n\t\t\tfieldValue = track.substring(trackIndex, trackIndex + length);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//get the string using the index and terminator\n\t\t\tfieldValue = track.substring(trackIndex, terminationIndex);\n\t\t}\n\t}\n\tcatch(e)\n\t{\n\t\tconsole.err(\"Error reading data field\", e);\n\t}\n\treturn fieldValue.trim();\n};\n\nOscar.HealthCardParser.parseBCCombined = function parseBCCombined(cardData,cardHash)\n{\n\tvar dataHash = cardHash.data;\n\tvar metaHash = cardHash.meta;\n\n\tvar track1Index=0;\n\tvar track2Index=cardData.indexOf(\"?\") + 1;\n\tvar track3Index=cardData.indexOf(\"?\", track2Index) + 1;\n\n\tvar track1 = cardData.substring(track1Index, track2Index);\n\tvar track2 = cardData.substring(track2Index, track3Index);\n\tvar track3 = cardData.substring(track3Index);\n\n\t//TRACK 1\n\t// length constants taken from specification\n\tvar index = 1; // skip % Constant\n\tdataHash.province = Oscar.HealthCardParser.getFieldValue(track1,index,2);\n\tindex += dataHash.province.length;\n\n\tdataHash.city = Oscar.HealthCardParser.getFieldValue(track1,index,13);\n\tindex += dataHash.city.length+1;\n\tvar names = Oscar.HealthCardParser.getFieldValue(track1,index,35);\n\tindex += names.length+1;\n\tvar fullAddress = Oscar.HealthCardParser.getFieldValue(track1,index,29);\n\n\tdataHash.lastName = names.substring(0, names.indexOf(\"$\")-1).toUpperCase();\n\tdataHash.firstName = names.substring(names.indexOf(\"$\")+1).toUpperCase();\n\tdataHash.address = (fullAddress.includes(\"$\"))? fullAddress.substring(0, fullAddress.indexOf(\"$\")) : fullAddress;\n\n\t//TRACK 2\n\tindex = 1; // skip track 2 constant ;\n\tmetaHash.isoiin = Oscar.HealthCardParser.getFieldValue(track2,index,6);\n\tindex += metaHash.isoiin.length;\n\tvar DL = track2.substring(index, track2.indexOf(\"=\"));\n\tindex += DL.length;\n\tif(DL.length === 7) {\n\t\tdataHash.driverLicenseNo = DL;\n\t}\n\telse\n\t{\n\t\tdataHash.clientNo = DL;\n\t}\n\n\tindex++; // skip constant '=' in field 4\n\tvar expire = Oscar.HealthCardParser.getFieldValue(track2,index,4); //YYMM\n\tindex += expire.length;\n\tif(\"0000\" !== expire) {\n\t\tdataHash.endYear = \"20\" + expire.substring(0, 2);\n\t\tdataHash.endMonth = expire.substring(2, 4);\n\t\tdataHash.endDay = \"01\";\n\t}\n\n\tvar dobCCYYMMDD = Oscar.HealthCardParser.getFieldValue(track2,index,8);\n\n\tdataHash.dobYear = dobCCYYMMDD.substring(0, 4);\n\tdataHash.dobMonth = dobCCYYMMDD.substring(4, 6);\n\tdataHash.dobDay = dobCCYYMMDD.substring(6, 8);\n\n\t//TRACK 3\n\n\tindex=1; // skip 1 character constant\n\tmetaHash.versionNo = Oscar.HealthCardParser.getFieldValue(track3,index,1);\n\tindex += 1;\n\tmetaHash.secVersionNo = Oscar.HealthCardParser.getFieldValue(track3,index,1);\n\tindex += 1;\n\n\tdataHash.postal = Oscar.HealthCardParser.getFieldValue(track3,index,11);\n\tindex += 11;\n\tdataHash.class = Oscar.HealthCardParser.getFieldValue(track3,index,2);\n\tindex += 2;\n\tdataHash.restrictions = Oscar.HealthCardParser.getFieldValue(track3,index,10);\n\tindex += 10;\n\tdataHash.endorsements = Oscar.HealthCardParser.getFieldValue(track3,index,4);\n\tindex += 4;\n\tdataHash.sex = Oscar.HealthCardParser.getFieldValue(track3,index,1);\n\tindex += 1;\n\tdataHash.height = Oscar.HealthCardParser.getFieldValue(track3,index,3);\n\tindex += 3;\n\tdataHash.weight = Oscar.HealthCardParser.getFieldValue(track3,index,3);\n\tindex += 3;\n\tdataHash.hairColour = Oscar.HealthCardParser.getFieldValue(track3,index,3);\n\tindex += 3;\n\tdataHash.eyeColour = Oscar.HealthCardParser.getFieldValue(track3,index,3);\n\tindex += 3;\n\tdataHash.hin = Oscar.HealthCardParser.getFieldValue(track3,index,10);\n\tindex += 10;\n\n\tmetaHash.fourteenA = Oscar.HealthCardParser.getFieldValue(track3,index,16);\n\tindex += 16;\n\tmetaHash.ecc = Oscar.HealthCardParser.getFieldValue(track3,index,6);\n\tindex += 6;\n\tmetaHash.securityFunction = Oscar.HealthCardParser.getFieldValue(track3,index,5);\n\n\tcardHash.meta = metaHash;\n\tcardHash.data = dataHash;\n\n\treturn cardHash;\n};\n\nOscar.HealthCardParser.parseBCStandalone = function parseBCStandalone(cardData,cardHash)\n{\n\tvar dataHash = cardHash.data;\n\tvar metaHash = cardHash.meta;\n\n\t// BC standalone photo card, non-photo card, or care card\n\t// https://www2.gov.bc.ca/assets/gov/health/practitioner-pro/medical-services-plan/teleplan-v4-4.pdf\n\t// begins p. 106\n\tdataHash.hin = cardData.substring(8, cardData.indexOf(\"0^\"));\n\tdataHash.lastName = cardData.substring(cardData.indexOf(\"^\")+1, cardData.indexOf(\"/\")).toUpperCase();\n\n\tvar subcard = cardData.substring(cardData.indexOf(\"/\")+1);\n\tdataHash.firstName = subcard.substring(0,subcard.indexOf(\"^\")).toUpperCase();\n\n\tsubcard = subcard.substring(subcard.indexOf(\"^\")+1);\n\tvar endYYMM = subcard.substring(0, 4);\n\tif(\"0000\" !== endYYMM) {\n\t\tdataHash.endYear = \"20\" + endYYMM.substring(0, 2);\n\t\tdataHash.endMonth = endYYMM.substring(2, 4);\n\t\tdataHash.endDay = \"01\";\n\t}\n\n\tvar issuerYYMM = subcard.substring(4, 8);\n\tif(\"0000\" !== issuerYYMM) {\n\t\tdataHash.effYear = \"20\" + issuerYYMM.substring(0, 2);\n\t\tdataHash.effMonth = issuerYYMM.substring(2, 4);\n\t\tdataHash.effDay = \"01\";\n\t}\n\n\tvar dobCCYYMMDD = subcard.substring(8, 16);\n\tdataHash.dobYear = dobCCYYMMDD.substring(0, 4);\n\tdataHash.dobMonth = dobCCYYMMDD.substring(4, 6);\n\tdataHash.dobDay = dobCCYYMMDD.substring(6, 8);\n\n\tdataHash.sex = 'M'; // this is not included in spec, default to Male\n\tdataHash.province = 'BC';\n\n\tcardHash.meta = metaHash;\n\tcardHash.data = dataHash;\n\n\treturn cardHash;\n};\n\nOscar.HealthCardParser.parseOntario = function parseOntario(cardData,cardHash)\n{\n\tvar dataHash = cardHash.data;\n\tvar metaHash = cardHash.meta;\n\n\tdataHash.hin = cardData.substring(8, cardData.indexOf(\"^\"));\n\tdataHash.lastName = cardData.substring(cardData.indexOf(\"^\") + 1, cardData.indexOf(\"/\")).toUpperCase();\n\n\tvar subcard = cardData.substring(cardData.indexOf(\"/\") + 1);\n\tdataHash.firstName = subcard.substring(0, subcard.indexOf(\"^\")).toUpperCase();\n\tdataHash.dobYear = subcard.substring(subcard.indexOf(\"^\") + 9, subcard.indexOf(\"^\") + 13);\n\tdataHash.dobMonth = subcard.substring(subcard.indexOf(\"^\") + 13, subcard.indexOf(\"^\") + 15);\n\tdataHash.dobDay = subcard.substring(subcard.indexOf(\"^\") + 15, subcard.indexOf(\"^\") + 17);\n\tdataHash.versionCode = subcard.substring(subcard.indexOf(\"^\") + 17, subcard.indexOf(\"^\") + 19);\n\tdataHash.versionCode = dataHash.versionCode.toUpperCase();\n\n\tvar monthInt = parseInt(subcard.substring(subcard.indexOf(\"^\") + 1, subcard.indexOf(\"^\") + 3));\n\tdataHash.endYear = (monthInt > 30 ? \"19\" : \"20\") + subcard.substring(subcard.indexOf(\"^\") + 1, subcard.indexOf(\"^\") + 3);\n\tdataHash.endMonth = subcard.substring(subcard.indexOf(\"^\") + 3, subcard.indexOf(\"^\") + 5);\n\tdataHash.endDay = dataHash.dobDay;\n\n\tmonthInt = parseInt(subcard.substring(subcard.indexOf(\"^\") + 24, subcard.indexOf(\"^\") + 26));\n\tdataHash.effYear = (monthInt > 30 ? \"19\" : \"20\") + subcard.substring(subcard.indexOf(\"^\") + 24, subcard.indexOf(\"^\") + 26);\n\tdataHash.effMonth = subcard.substring(subcard.indexOf(\"^\") + 26, subcard.indexOf(\"^\") + 28);\n\tdataHash.effDay = subcard.substring(subcard.indexOf(\"^\") + 28, subcard.indexOf(\"^\") + 30);\n\n\tvar sex = subcard.substring(subcard.indexOf(\"^\") + 8, subcard.indexOf(\"^\") + 9);\n\tif (sex === \"2\")\n\t{\n\t\tdataHash.sex = \"F\";\n\t}\n\telse\n\t{\n\t\tdataHash.sex = \"M\";\n\t}\n\tdataHash.province = 'ON';\n\n\tcardHash.meta = metaHash;\n\tcardHash.data = dataHash;\n\n\treturn cardHash;\n};\n\n\nOscar.HealthCardParser.parse = function parse(cardData)\n{\n\tvar cardHashOut = {\n\t\tmeta: {},\n\t\tdata: {}\n\t};\n\ttry\n\t{\n\t\tcardData = cardData.toUpperCase();\n\t\tconsole.info(cardData);\n\n\t\tif (cardData.startsWith(BC_STANDALONE))\n\t\t{\n\t\t\tcardHashOut = Oscar.HealthCardParser.parseBCStandalone(cardData, cardHashOut);\n\t\t}\n\t\telse if (cardData.startsWith(BC_PREFIX) && cardData.substring(cardData.indexOf(\"?\")).startsWith(BC_COMBINED))\n\t\t{\n\t\t\tcardHashOut = Oscar.HealthCardParser.parseBCCombined(cardData, cardHashOut);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Card may be unsupported, but as a temporary measure we're letting it through\n\t\t\tcardHashOut = Oscar.HealthCardParser.parseOntario(cardData, cardHashOut);\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\tconsole.error(\"Error parsing card data\", e);\n\t}\n\treturn cardHashOut;\n};\n\n\n","'use strict'\n\n\nwindow.Juno = window.Juno || {};\nwindow.Juno.Common = window.Juno.Common || {};\n\nwindow.Juno.Common.DisplayMessages = function DisplayMessages(messages_hash, options)\n{\n\tvar me = this;\n\n\t/*************************************************************/\n\t// Local Variables\n\t/*************************************************************/\n\n\tme.messages_hash = {};\n\tme.display_field_errors = true;\n\tme.field_errors_label_map = {};\n\tme.field_errors_label_map_key = null;\n\tme.extra_info = {};\n\tme.meta = {};\n\n\tme.saving_message = 'Saving...';\n\n\t/*************************************************************/\n\t// Initialize\n\t// @param {messages_hash} Error hash from Juno API\n\t// @param {options} Hash\n\t//\t\t- {display_field_errors} Boolean : Sets flag\n\t//\t\t- {field_errors_label_map} Hash : Can pass a hash in to get field\n\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t//\t\t- {field_errors_label_map_key} String : Allows for\n\t// \t\tfield => Hash[key] lookup for label.\n\t/*************************************************************/\n\n\tme.init = function init()\n\t{\n\t\tif (Juno.Common.Util.exists(messages_hash))\n\t\t{\n\t\t\tme.messages_hash = messages_hash;\n\t\t}\n\n\t\t// Datamapper field errors are inconsistent and can return either a\n\t\t// hash -> array or hash -> string\n\t\tme.force_field_error_arrays();\n\n\t\t// Parse options\n\t\tif (Juno.Common.Util.exists(options))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(options.display_field_errors) && options.display_field_errors === false)\n\t\t\t{\n\t\t\t\tme.display_field_errors = false;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map))\n\t\t\t{\n\t\t\t\tme.field_errors_label_map = options.field_errors_label_map;\n\t\t\t\tif (Juno.Common.Util.exists(options.field_errors_label_map_key))\n\t\t\t\t{\n\t\t\t\t\tme.field_errors_label_map_key = options.field_errors_label_map_key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// merge another display messages object into this one\n\tme.merge = function merge(display_messages)\n\t{\n\t\t// does not merge extra_info or meta - just messages\n\n\t\tme.messages_hash = angular.merge(me.messages_hash, display_messages.messages_hash);\n\t};\n\n\t/*************************************************************/\n\t// Alert Warnings\n\t/*************************************************************/\n\n\tme.has_alert_warnings = function has_alert_warnings()\n\t{\n\t\treturn me.alert_warnings().length > 0;\n\t};\n\n\tme.alert_warnings = function alert_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.alert_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.alert_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_alert_warning = function add_alert_warning(message)\n\t{\n\t\tif (!me.has_alert_warnings())\n\t\t{\n\t\t\tme.messages_hash.alert_warnings = [];\n\t\t}\n\t\tme.messages_hash.alert_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_validation_warnings = function has_validation_warnings()\n\t{\n\t\treturn me.validation_warnings().length > 0;\n\t};\n\n\tme.add_validation_warning = function add_validation_warning(message)\n\t{\n\t\tif (!me.has_validation_warnings())\n\t\t{\n\t\t\tme.messages_hash.validation_warnings = [];\n\t\t}\n\t\tme.messages_hash.validation_warnings.push(message);\n\t};\n\n\tme.validation_warnings = function validation_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.validation_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.validation_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Standard Errors\n\t// Generic errors not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_errors = function has_standard_errors()\n\t{\n\t\treturn me.standard_errors().length > 0;\n\t};\n\n\tme.standard_errors = function standard_errors()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_errors))\n\t\t{\n\t\t\treturn me.messages_hash.standard_errors;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_error = function add_standard_error(message)\n\t{\n\t\tif (!me.has_standard_errors())\n\t\t{\n\t\t\tme.messages_hash.standard_errors = [];\n\t\t}\n\t\tme.messages_hash.standard_errors.push(message);\n\t};\n\n\tme.add_generic_fatal_error = function add_generic_fatal_error()\n\t{\n\t\t// TODO: change this\n\t\tme.add_standard_error(\"Fatal Error\");\n\t\t//\t\tJuno.Context.Settings.interface_preferences.generic_fatal_error_message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Warnings\n\t// Generic warnings not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_warnings = function has_standard_warnings()\n\t{\n\t\treturn me.standard_warnings().length > 0;\n\t};\n\n\tme.standard_warnings = function standard_warnings()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_warnings))\n\t\t{\n\t\t\treturn me.messages_hash.standard_warnings;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_warning = function add_standard_warning(message)\n\t{\n\t\tif (!me.has_standard_warnings())\n\t\t{\n\t\t\tme.messages_hash.standard_warnings = [];\n\t\t}\n\t\tme.messages_hash.standard_warnings.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Info Message\n\t// Generic info message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_info = function has_standard_info()\n\t{\n\t\treturn me.standard_info().length > 0;\n\t};\n\n\tme.standard_info = function standard_info()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_info))\n\t\t{\n\t\t\treturn me.messages_hash.standard_info;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_info = function add_standard_info(message)\n\t{\n\t\tif (!me.has_standard_info())\n\t\t{\n\t\t\tme.messages_hash.standard_info = [];\n\t\t}\n\t\tme.messages_hash.standard_info.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Standard Success Message\n\t// Generic success message not tied to any specific element.\n\t/*************************************************************/\n\n\tme.has_standard_success = function has_standard_success()\n\t{\n\t\treturn me.standard_success().length > 0;\n\t};\n\n\tme.standard_success = function standard_success()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.standard_success))\n\t\t{\n\t\t\treturn me.messages_hash.standard_success;\n\t\t}\n\t\treturn [];\n\t};\n\n\tme.add_standard_success = function add_standard_success(message)\n\t{\n\t\tif (!me.has_standard_success())\n\t\t{\n\t\t\tme.messages_hash.standard_success = [];\n\t\t}\n\t\tme.messages_hash.standard_success.push(message);\n\t};\n\n\t/*************************************************************/\n\t// Field Errors\n\t// These errors are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field errors\n\tme.has_field_errors = function has_field_errors()\n\t{\n\t\treturn me.field_errors() && !angular.equals(me.field_errors(), {});\n\t};\n\n\t// Returns a hash of field errors\n\tme.field_errors = function field_errors(prepend_label)\n\t{\n\t\tvar field_errors = {};\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.field_errors))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_errors)\n\t\t\t\t{\n\t\t\t\t\tfield_errors[key] = me.prepend_label(\n\t\t\t\t\t\t\tkey, me.messages_hash.field_errors[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_errors = me.messages_hash.field_errors;\n\t\t\t}\n\t\t}\n\t\treturn field_errors;\n\t};\n\n\t// Returns true if there is a field error for any of the passed in keys\n\tme.has_one_of_field_error = function has_one_of_field_error(keys)\n\t{\n\t\tif (!angular.isArray(keys))\n\t\t{\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tfor (var i in keys)\n\t\t{\n\t\t\tif (me.has_field_error(keys[i]))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists and this error object has the matching index.\n\t// Used for invoice multi post which posts multiple invoices line items, and returns an index\n\t// corresponding to the line item with the error\n\tme.has_indexed_field_error = function has_indexed_field_error(key, index)\n\t{\n\t\tif(Juno.Common.Util.exists(me.extra_info) &&\n\t\t\t\tJuno.Common.Util.exists(me.extra_info.index) &&\n\t\t\t\tme.extra_info.index == index)\n\t\t{\n\t\t\treturn me.has_field_error(key);\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Returns true if this field error exists\n\tme.has_field_error = function has_field_error(key)\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tif (key in me.field_errors())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field errors to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-error as it doesn't accept a boolean value.\n\tme.field_error_string = function field_error_string(key, concat_string)\n\t{\n\t\tif (me.has_field_error(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_errors()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field error with the given message\n\tme.add_field_error = function add_field_error(key, message)\n\t{\n\t\tif (!me.has_field_errors())\n\t\t{\n\t\t\tme.messages_hash.field_errors = {};\n\t\t}\n\t\tif (!me.has_field_error(key))\n\t\t{\n\t\t\tme.messages_hash.field_errors[key] = [];\n\t\t}\n\t\tme.messages_hash.field_errors[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_error = function remove_field_error(key)\n\t{\n\t\tif(me.has_field_error(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_errors[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Error links\n\t// These are error messages that have an embeded link in them\n\t// Eg: This patient already exists. Press \"here\" to view patient.\n\t/*************************************************************/\n\n\tme.has_error_links = function has_error_links()\n\t{\n\t\treturn me.error_links().length > 0;\n\t};\n\n\tme.add_error_link = function add_error_link(message)\n\t{\n\t\tif (!me.has_error_links())\n\t\t{\n\t\t\tme.messages_hash.error_links = [];\n\t\t}\n\t\tme.messages_hash.error_links.push(message);\n\t};\n\n\tme.error_links = function error_links()\n\t{\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\t\tJuno.Common.Util.exists(me.messages_hash.error_links))\n\t\t{\n\t\t\treturn me.messages_hash.error_links;\n\t\t}\n\t\treturn [];\n\t};\n\n\t/*************************************************************/\n\t// Field Warnings\n\t// These warnings are directly related to form fields.\n\t/*************************************************************/\n\n\t// Returns true if there are any field warnings\n\tme.has_field_warnings = function has_field_warnings()\n\t{\n\t\treturn me.field_warnings() && !angular.equals(me.field_warnings(), {});\n\t};\n\n\t// Returns a hash of field warning\n\tme.field_warnings = function field_warnings(prepend_label)\n\t{\n\t\tvar field_warnings = {};\n\t\tif (Juno.Common.Util.exists(me.messages_hash) &&\n\t\t\tJuno.Common.Util.exists(me.messages_hash.field_warnings))\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(prepend_label) && prepend_label === true)\n\t\t\t{\n\t\t\t\tfor (var key in me.messages_hash.field_warnings)\n\t\t\t\t{\n\t\t\t\t\tfield_warnings[key] = me.prepend_label(\n\t\t\t\t\t\tkey, me.messages_hash.field_warnings[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfield_warnings = me.messages_hash.field_warnings;\n\t\t\t}\n\t\t}\n\t\treturn field_warnings;\n\t};\n\t// Returns true if this field warning exists\n\tme.has_field_warning = function has_field_warning(key)\n\t{\n\t\tif (me.has_field_warnings())\n\t\t{\n\t\t\tif (key in me.field_warnings())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// Converts all field warnings to strings. Concatinates arrays. Useful for our ca-field\n\t// directives that use ca-warning as it doesn't accept a boolean value.\n\tme.field_warning_string = function field_warning_string(key, concat_string)\n\t{\n\t\tif (me.has_field_warning(key))\n\t\t{\n\t\t\tif (!Juno.Common.Util.exists(concat_string))\n\t\t\t{\n\t\t\t\tconcat_string = \", \";\n\t\t\t}\n\t\t\treturn me.field_warnings()[key].join(concat_string);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t// Adds a new field warning with the given message\n\tme.add_field_warning = function add_field_warning(key, message)\n\t{\n\t\tif (!me.has_field_warnings())\n\t\t{\n\t\t\tme.messages_hash.field_warnings = {};\n\t\t}\n\t\tif (!me.has_field_warning(key))\n\t\t{\n\t\t\tme.messages_hash.field_warnings[key] = [];\n\t\t}\n\t\tme.messages_hash.field_warnings[key].push(message)\n\t};\n\n\t// Removes a field error.\n\tme.remove_field_warning = function remove_field_warning(key)\n\t{\n\t\tif(me.has_field_warning(key))\n\t\t{\n\t\t\tdelete me.messages_hash.field_warnings[key];\n\t\t}\n\t};\n\n\t/*************************************************************/\n\t// Helpers\n\t/*************************************************************/\n\n\tme.has_errors = function has_errors()\n\t{\n\t\tif (me.has_field_errors() ||\n\t\t\t\tme.has_standard_errors() ||\n\t\t\t\tme.has_error_links())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tme.clear = function clear()\n\t{\n\t\tme.messages_hash = {};\n\t};\n\n\t// Make sure each field error value is an array of messages even if there\n\t// is only one element.\n\tme.force_field_error_arrays = function force_field_error_arrays()\n\t{\n\t\tif (me.has_field_errors())\n\t\t{\n\t\t\tfor (var i in me.messages_hash.field_errors)\n\t\t\t{\n\t\t\t\tif (!angular.isArray(me.messages_hash.field_errors[i]))\n\t\t\t\t{\n\t\t\t\t\tme.messages_hash.field_errors[i] = [\n\t\t\t\t\t\tangular.copy(me.messages_hash.field_errors[i])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Prepend field label to all field error messages\n\tme.prepend_label = function prepend_label(field, field_errors)\n\t{\n\t\tvar label = \"\";\n\t\tvar out_field_errors = [];\n\t\tif (field in me.field_errors_label_map)\n\t\t{\n\t\t\t// Lookup label in basic key -> label map\n\t\t\tlabel = me.field_errors_label_map[field];\n\n\t\t\t// If label map is a hash of hashes, grab the label from the\n\t\t\t// provided label field\n\t\t\tif (Juno.Common.Util.exists(me.field_errors_label_map_key))\n\t\t\t{\n\t\t\t\tlabel = me.field_errors_label_map[field][\n\t\t\t\t\t\tme.field_errors_label_map_key];\n\t\t\t}\n\n\t\t\t// Append label\n\t\t\tfor (var i in field_errors)\n\t\t\t{\n\t\t\t\tvar error_message = [label, field_errors[i]].join(\" \").trim();\n\t\t\t\tout_field_errors.push(error_message);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout_field_errors = field_errors;\n\t\t}\n\t\treturn out_field_errors;\n\t};\n\n\tme.merge_messages = function merge_messages(merge_display_messages)\n\t{\n\t\tvar field_errors = merge_display_messages.field_errors();\n\t\tvar field_warnings = merge_display_messages.field_warnings();\n\t\tvar error_links = merge_display_messages.error_links();\n\t\tvar standard_infos = merge_display_messages.standard_info();\n\t\tvar standard_warnings = merge_display_messages.standard_warnings();\n\t\tvar standard_errors = merge_display_messages.standard_errors();\n\t\tvar alert_warnings = merge_display_messages.alert_warnings();\n\t\tvar validation_warnings = merge_display_messages.validation_warnings();\n\t\tvar standard_success = merge_display_messages.standard_success();\n\n\t\tfor(var i = 0; i < standard_success.length; i++)\n\t\t{\n\t\t\tme.add_standard_success(standard_success[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_infos.length; i++)\n\t\t{\n\t\t\tme.add_standard_info(standard_infos[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_warnings.length; i++)\n\t\t{\n\t\t\tme.add_standard_warning(standard_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < standard_errors.length; i++)\n\t\t{\n\t\t\tme.add_standard_error(standard_errors[i]);\n\t\t}\n\n\t\tfor(i = 0; i < alert_warnings.length; i++)\n\t\t{\n\t\t\tme.add_alert_warning(alert_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < validation_warnings.length; i++)\n\t\t{\n\t\t\tme.add_validation_warning(validation_warnings[i]);\n\t\t}\n\n\t\tfor(i = 0; i < error_links.length; i++)\n\t\t{\n\t\t\tme.add_error_link(error_links[i]);\n\t\t}\n\n\t\tfor(var key in field_errors)\n\t\t{\n\t\t\tif(field_errors.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_errors[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_error(key, field_errors[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(var key in field_warnings)\n\t\t{\n\t\t\tif(field_warnings.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tfor(i = 0; i < field_warnings[key].length; i++)\n\t\t\t\t{\n\t\t\t\t\tme.add_field_warning(key, field_warnings[key][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.init();\n};\n\n","'use strict';\n\nif (!window.Juno) window.Juno = {};\n\n\nif (!Juno.Common) Juno.Common = {};\n\nJuno.Common.Util = {};\n\nJuno.Common.Util.settings = {\n\tdatetime_format: \"YYYY-MM-DDTHH:mm:ssZ\",\n\tdatetime_no_timezone_format: \"YYYY-MM-DDTHH:mm:ss\",\n\ttime_format: \"h:mma\",\n\tdate_format: \"YYYY-MM-DD\",\n\tdayofweek_format: \"dddd\"\n};\n\nJuno.Common.Util.DisplaySettings = {\n\tdateFormat: \"yyyy-MM-dd\",\n\ttimeFormat: \"HH:mm a\",\n};\n\nJuno.Common.Util.exists = function exists(object) {\n\t// not undefined and not null\n\treturn angular.isDefined(object) && object !== null;\n};\n\nJuno.Common.Util.isBlank = function isBlank(object) {\n\t// undefined or null or empty string\n\treturn !Juno.Common.Util.exists(object) || object === \"\";\n};\n\n// convert a string in to a boolean\nJuno.Common.Util.parseBoolean = function (str)\n{\n\tlet trueValues = [\"on\", \"yes\", \"true\", \"enabled\"];\n\tlet falseValues = [\"off\", \"no\", \"false\", \"disabled\"];\n\n\tif (str !== null && trueValues.includes(str))\n\t{\n\t\treturn true\n\t}\n\telse if (str === null || falseValues.includes(str))\n\t{\n\t\treturn false\n\t}\n\telse\n\t{\n\t\tthrow \"Invalid Argument, [\" + str + \"] not one of, \" + trueValues + \", \" + falseValues;\n\t}\n};\n\nJuno.Common.Util.toArray = function toArray(obj) { //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n};\n\nJuno.Common.Util.pad0 = function pad0(n) {\n\tvar s = n.toString();\n\tif (s.length == 1) s = \"0\" + s;\n\treturn s;\n};\n\nJuno.Common.Util.toTrimmedString = function toTrimmedString(s) {\n\tif (s == null) s = \"\";\n\tif (s instanceof String) s = s.trim();\n\treturn s;\n};\n\nJuno.Common.Util.formatDate = function formatDate(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = d.getFullYear() + \"-\" + Juno.Common.Util.pad0(d.getMonth() + 1) + \"-\" + Juno.Common.Util.pad0(d.getDate());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatTime = function formatTime(d) {\n\td = Juno.Common.Util.toTrimmedString(d);\n\tif (d) {\n\t\tif (!(d instanceof Date)) d = new Date(d);\n\t\td = Juno.Common.Util.pad0(d.getHours()) + \":\" + Juno.Common.Util.pad0(d.getMinutes());\n\t}\n\treturn d;\n};\n\nJuno.Common.Util.formatMomentDate = function formatMomentDate(d, format)\n{\n\tif (!format)\n\t{\n\t\tformat = Juno.Common.Util.settings.date_format;\n\t}\n\treturn d.format(format);\n};\n\nJuno.Common.Util.formatMomentTime = function formatMomentTime(d, format) {\n\tif(!format) {\n\t\tformat = Juno.Common.Util.settings.time_format;\n\t}\n\treturn d.format(format);\n};\n\nJuno.Common.Util.formatMomentDateTimeNoTimezone = function formatMomentDateTimeNoTimezone(d) {\n\treturn d.format(Juno.Common.Util.settings.datetime_no_timezone_format);\n};\n\nJuno.Common.Util.getDateMoment = function getDateMoment(date_string)\n{\n\treturn moment.utc(date_string, Juno.Common.Util.settings.date_format, true);\n};\n\nJuno.Common.Util.getTimeMoment = function getTimeMoment(time_string)\n{\n\treturn moment.utc(time_string, Juno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDateMomentFromComponents = function getDateMomentFromComponents(year_string, month_string, day_string)\n{\n\treturn moment.utc({year: year_string, month: (Number(month_string)-1), day: day_string});\n};\n\nJuno.Common.Util.getDateAndTimeMoment = function getCombinedMoment(dateString, timeString)\n{\n\treturn moment.utc(dateString + \" \" + timeString,\n\t\tJuno.Common.Util.settings.date_format + \" \" +\n\t\tJuno.Common.Util.settings.time_format, true);\n};\n\nJuno.Common.Util.getDatetimeNoTimezoneMoment = function getDatetimeNoTimezoneMoment(datetime_string)\n{\n\treturn moment.utc(datetime_string,\n\t\tJuno.Common.Util.settings.datetime_no_timezone_format, true);\n};\n\nJuno.Common.Util.getUserISOTimezoneOffset = function ()\n{\n\tlet sign = \"-\";\n\tlet offsetRaw = (new Date()).getTimezoneOffset();\n\tif (offsetRaw < 0)\n\t{\n\t\tsign = \"+\";\n\t\toffsetRaw *= -1;\n\t}\n\tlet offsetHour = offsetRaw / 60;\n\tlet offsetMin = offsetRaw % 60;\n\treturn sign + offsetHour.toString().padStart(2,\"0\") + \":\" + offsetMin.toString().padStart(2, \"0\");\n};\n\nJuno.Common.Util.validateDateString = function validateDateString(\n\tdateString, displayErrors, field, fieldDisplayName, required)\n{\n\tif(Juno.Common.Util.exists(dateString))\n\t{\n\t\tvar moment = Juno.Common.Util.getDateMoment(dateString);\n\t\tif(!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + ' is invalid');\n\t\t}\n\t}\n\telse if(required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.validateTimeString = function validateTimeString(\n\ttimeString, displayErrors, field, fieldDisplayName, required)\n{\n\tif (Juno.Common.Util.exists(timeString))\n\t{\n\t\tvar moment = Juno.Common.Util.getTimeMoment(timeString);\n\t\tif (!moment.isValid())\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is invalid');\n\t\t}\n\t}\n\telse if (required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\nJuno.Common.Util.validateIntegerString = function validateInputString(\n\tinputString, displayErrors, field, fieldDisplayName, required, nonNegative, nonZero)\n{\n\tif (!Juno.Common.Util.isBlank(inputString))\n\t{\n\t\tif (!Juno.Common.Util.isIntegerString(inputString) ||\n\t\t\t(nonNegative && Number(inputString) < 0) ||\n\t\t\t(nonZero && Number(inputString) === 0))\n\t\t{\n\t\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is invalid');\n\t\t}\n\t}\n\telse if (required)\n\t{\n\t\tdisplayErrors.add_field_error(field, fieldDisplayName + 'is required');\n\t}\n};\n\nJuno.Common.Util.addNewLine = function addNewLine(line, mssg) {\n\tif (line == null || line.trim() == \"\") return mssg;\n\n\tif (mssg == null || mssg.trim() == \"\") mssg = line.trim();\n\telse mssg += \"\\n\" + line.trim();\n\n\treturn mssg;\n};\n\nJuno.Common.Util.calcAge = function calcAge(dobYear, dobMonth, dobDay)\n{\n\tlet dateOfBirth = moment({year: dobYear, month: dobMonth, day: dobDay});\n\tlet currDate = moment();\n\treturn currDate.diff(dateOfBirth, 'years');\n\n};\n\nJuno.Common.Util.isInArray = function isInArray(value, array) \n{\n\treturn array.indexOf(value) > -1;\n};\n\n/**\n * recursively merges two js hashes. the baseHash will be modified\n * @param baseHash\n * @param toMerge\n */\nJuno.Common.Util.mergeHash = function mergeHash(baseHash, toMerge)\n{\n\tif (toMerge === 'undefined') {\n\t\treturn false;\n\t}\n\t$.extend(true, baseHash, toMerge);\n\treturn true;\n};\n\nJuno.Common.Util.noNull = function noNull(val)\n{\n    if (typeof val === 'string')\n    {\n        val =  val.trim();\n    }\n    else if ( val === null)\n    {\n\t\tval = \"\";\n    }\n\n    return val;\n};\n\nJuno.Common.Util.isUndefinedOrNull = function isUndefinedOrNull(val)\n{\n\treturn angular.isUndefined(val) || val === null;\n};\n\nJuno.Common.Util.isDefinedAndNotNull = function isDefinedAndNotNull(val)\n{\n\treturn (angular.isDefined(val) && val !== null);\n};\n\nJuno.Common.Util.objectArrayIndexOf = function objectArrayIndexOf(array, searchTerm, property)\n{\n\tfor(var i = 0, len = array.length; i < len; i++) {\n\t\tif (array[i][property] === searchTerm) return i;\n\t}\n\treturn -1;\n};\n\nJuno.Common.Util.isIntegerString = function isIntegerString(string)\n{\n\tvar parsed_string = parseInt(string);\n\n\tif (/^-?\\d+$/.test(string.toString()))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n};\nJuno.Common.Util.isNumber = function isNumber(object)\n{\n\treturn typeof object === \"number\";\n};\n\nJuno.Common.Util.escapeHtml = function escapeHtml(str)\n{\n\tvar entityMap = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t'\"': '&quot;',\n\t\t\"'\": '&#39;',\n\t\t\"/\": '&#x2F;'\n\t};\n\n\treturn String(str).replace(/[&<>\"'\\/]/g, function (s)\n\t{\n\t\treturn entityMap[s];\n\t});\n};\n\nJuno.Common.Util.formatName = function formatName(firstName, lastName)\n{\n\tif(!lastName && !firstName)\n\t{\n\t\treturn null;\n\t}\n\telse if(!firstName)\n\t{\n\t\treturn lastName;\n\t}\n\telse if(!lastName)\n\t{\n\t\treturn firstName;\n\t}\n\n\treturn lastName + ', ' + firstName;\n};\n\nJuno.Common.Util.trimToLength = function trimToLength(string, maxLength)\n{\n\tvar shortString = string;\n\tif(shortString.length > maxLength)\n\t{\n\t\tshortString = shortString.substring(0, maxLength);\n\t}\n\treturn shortString;\n};\n\n// create a promise that resolves when the provided window is closed\nJuno.Common.Util.windowClosedPromise = function (popup)\n{\n\treturn new Promise(function (resolve, reject)\n\t{\n\t\tlet interId = window.setInterval(function()\n\t\t{\n\t\t\tif (popup.closed)\n\t\t\t{\n\t\t\t\tresolve(true);\n\t\t\t\twindow.clearInterval(interId);\n\t\t\t}\n\t\t}, 500);\n\t});\n};","'use strict';\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.ServiceHelper = {};\n\nJuno.Common.ServiceHelper.configHeaders = function configHeaders() {\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t}\n\t};\n};\n\nJuno.Common.ServiceHelper.configHeadersWithCache = function configHeadersWithCache()\n{\n\treturn {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Accept\": \"application/json\"\n\t\t},\n\t\tcache: true\n\t};\n};\n","'use strict';\n\nwindow.Juno = window.Juno ||\n{};\nJuno.Consults = Juno.Consults ||\n{};\n\nJuno.Consults.Common = {};\n\nJuno.Consults.Common.sortAttachmentDocs = function sortAttachmentDocs(arrayOfDocs)\n{\n\tarrayOfDocs.sort(function(doc1, doc2)\n\t{\n\t\tif (doc1.documentType < doc2.documentType) return -1;\n\t\telse if (doc1.documentType > doc2.documentType) return 1;\n\t\telse\n\t\t{\n\t\t\tif (doc1.displayName < doc2.displayName) return -1;\n\t\t\telse if (doc1.displayName > doc2.displayName) return 1;\n\t\t}\n\t\treturn 0;\n\t});\n};","\nrequire('jquery');\nrequire('jquery-ui/ui/widgets/draggable');\nrequire('jquery-ui/themes/base/draggable.css');\nrequire('jquery-ui/ui/widgets/resizable');\nrequire('jquery-ui/themes/base/resizable.css');\nrequire('moment');\nrequire('angular');\nrequire('angular-ui-bootstrap');\nrequire('angular-ui-router');\nrequire('angular-ui-router/release/stateEvents');\nrequire('fullcalendar-scheduler');\nrequire('fullcalendar/dist/fullcalendar.min.css');\nrequire('fullcalendar-scheduler/dist/scheduler.min.css');\nrequire('ng-table/bundles/ng-table');\nrequire('ng-table/bundles/ng-table.css');\nrequire('angular-resource');\nrequire('ng-infinite-scroll');\nrequire('angular-loading-bar');\nrequire('angular-loading-bar/build/loading-bar.min.css');\nrequire('bootstrap-datepicker');\nrequire('bootstrap-datepicker/dist/css/bootstrap-datepicker.css');\nrequire('bootstrap-timepicker');\nrequire('bootstrap-sass');\nrequire('ngstorage');\nrequire('pym.js');\nrequire('./scss/juno.scss');\nrequire('font-awesome/css/font-awesome.min.css');\nimport {FORM_CONTROLLER_STATES} from \"./src/record/forms/formsConstants\";\n\n\nvar oscarApp = angular.module('oscarProviderViewModule', [\n\t'ui.router',\n\t'infinite-scroll',\n\t'ui.router.state.events',\n\t'ngResource',\n\t'ui.bootstrap',\n\t'ui.calendar',\n\t'angular-loading-bar',\n\t'ngTable',\n\t'ngStorage',\n\t'Common',\n\t'Common.Services',\n\t'Common.Filters',\n\t'Common.Directives',\n\t'Common.Components',\n\t'Common.Util',\n\t'Layout',\n\t'Tickler',\n\t'Record',\n\t'Record.Summary',\n\t'Record.Tracker',\n\t'Record.Details',\n\t'Record.PHR',\n\t'Record.Forms',\n\t'Schedule',\n\t'Settings',\n\t'Report',\n\t'Patient',\n\t'Patient.Search',\n\t'Inbox',\n\t'Help',\n\t'Document',\n\t'Dashboard',\n\t'Consults',\n\t'Admin',\n\t'Admin.Integration',\n\t'Admin.Integration.Know2act',\n\t'Admin.Integration.Fax'\n]);\n\noscarApp.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', function($stateProvider, $urlRouterProvider, $httpProvider)\n{\n\t//\n\t// For any unmatched url, redirect to /state1\n\t$urlRouterProvider.otherwise(\"/dashboard\");\n\t//\n\t// Now set up the states\n\t$stateProvider\n\t\t.state('dashboardManager',\n\t\t{\n\t\t\turl: '/dashboard/admin',\n\t\t\ttemplateUrl: 'src/dashboard/admin/DashboardManager.jsp',\n\t\t\tcontroller: 'dashboardManagerController'\n\t\t})\n\t\t.state('dashboard',\n\t\t{\n\t\t\turl: '/dashboard',\n\t\t\ttemplateUrl: 'src/dashboard/dashboard.jsp',\n\t\t\tcontroller: 'Dashboard.DashboardController'\n\t\t})\n\t\t.state('inbox',\n\t\t{\n\t\t\turl: '/inbox',\n\t\t\ttemplateUrl: 'src/inbox/inbox_popup.jsp',\n\t\t\t// templateUrl: 'src/inbox/inbox.jsp',\n\t\t\tcontroller: 'Inbox.InboxController'\n\t\t})\n\t\t.state('consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('billing',\n\t\t{\n\t\t\turl: '/billing',\n\t\t\ttemplateUrl: 'src/billing/billing_popup.jsp',\n\t\t\tcontroller: 'BillingCtrl'\n\t\t})\n\t\t.state('schedule',\n\t\t{\n\t\t\turl: '/schedule',\n\t\t\ttemplateUrl: 'src/schedule/view.jsp',\n\t\t\tcontroller: 'Schedule.ScheduleController as scheduleController',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tloadedSettings: ['providerService', function (providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('admin',\n\t\t{\n\t\t\turl: '/admin',\n\t\t\ttemplateUrl: 'src/admin/admin.jsp',\n\t\t\tcontroller: 'Admin.AdminController as AdminCtrl'\n\t\t})\n\t\t.state('admin.frame',\n\t\t{\n\t\t\turl: '/frame?frameUrl&useCompat',\n\t\t\ttemplateUrl: 'src/admin/integration/frameContent/frameContent.jsp',\n\t\t\tcontroller: 'Admin.Integration.FrameContentController as FrameCtrl'\n\t\t})\n\t\t.state('admin.faxConfig',\n\t\t{\n\t\t\turl: '/faxConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationController as faxController'\n\t\t})\n\t\t.state('admin.faxSendReceive',\n\t\t{\n\t\t\turl: '/faxSendReceive',\n\t\t\ttemplateUrl: 'src/admin/integration/fax/faxSendReceive.jsp',\n\t\t\tcontroller: 'Admin.Integration.Fax.FaxSendReceiveController as faxSendReceiveController'\n\t\t})\n\t\t.state('admin.landingPage',\n\t\t{\n\t\t\turl: '/landingPage',\n\t\t\tcomponent: 'landingPage'\n\t\t})\n\t\t.state('admin.integrationModules',\n\t\t{\n\t\t\turl: '/integrationModules',\n\t\t\tcomponent: 'integrationModules'\n\t\t})\n\t\t.state('admin.panelManagement',\n\t\t{\n\t\t\turl: '/panelManagement',\n\t\t\tcomponent: 'panelManagementAdmin'\n\t\t})\n\t\t.state('admin.iceFall',\n\t\t{\n\t\t\turl: '/iceFall',\n\t\t\tcomponent: 'iceFallAdmin'\n\t\t})\n\t\t.state('admin.iceFall.settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\tcomponent: 'iceFallAdminSettings'\n\t\t})\n\t\t.state('admin.iceFall.activity',\n\t\t{\n\t\t\turl: '/activity',\n\t\t\tcomponent: 'iceFallAdminActivity'\n\t\t})\n\t\t.state('ticklers',\n\t\t{\n\t\t\turl: '/ticklers',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t}\n\t\t})\n\t\t.state('search',\n\t\t{\n\t\t\turl: '/search',\n\t\t\ttemplateUrl: 'src/patient/search/patientSearch.jsp',\n\t\t\tcontroller: 'Patient.Search.PatientSearchController as patientSearchCtrl',\n\t\t\tparams:\n\t\t\t{\n\t\t\t\tterm: null\n\t\t\t}\n\t\t})\n\t\t.state('reports',\n\t\t{\n\t\t\turl: '/reports',\n\t\t\ttemplateUrl: 'src/report/reports.jsp',\n\t\t\t//templateUrl: 'src/report/reports_classic.jsp',\n\t\t\tcontroller: 'Report.ReportsController as reportsCtrl',\n\t\t})\n\t\t.state('documents',\n\t\t{\n\t\t\turl: '/documents',\n\t\t\ttemplateUrl: 'src/document/documents_classic.jsp',\n\t\t\tcontroller: 'Document.DocumentsController'\n\t\t})\n\t\t.state('settings',\n\t\t{\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tbillingServiceTypes: ['billingService', function(billingService)\n\t\t\t\t{\n\t\t\t\t\treturn billingService.getUniqueServiceTypes();\n\t\t\t\t}],\n\t\t\t\tproviderList: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\t'active': true\n\t\t\t\t\t});\n\t\t\t\t}],\n\t\t\t\tloadedSettings: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getSettings();\n\t\t\t\t}],\n\t\t\t\tencounterForms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEncounterForms();\n\t\t\t\t}],\n\t\t\t\teforms: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getAllEForms();\n\t\t\t\t}],\n\t\t\t\tteams: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getActiveTeams();\n\t\t\t\t}],\n\t\t\t\tgroupNames: ['formService', function(formService)\n\t\t\t\t{\n\t\t\t\t\treturn formService.getGroupNames();\n\t\t\t\t}],\n\t\t\t\tloadedApps: ['appService', function(appService)\n\t\t\t\t{\n\t\t\t\t\treturn appService.getApps();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('settings.persona',\n\t\t\t{\n\t\t\t\turl: '/persona',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'persona'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.general',\n\t\t\t{\n\t\t\t\turl: '/general',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'general'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.schedule',\n\t\t\t{\n\t\t\t\turl: '/schedule',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'schedule'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.billing',\n\t\t\t{\n\t\t\t\turl: '/billing',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'billing'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.rx',\n\t\t\t{\n\t\t\t\turl: '/rx',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'rx'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.masterdemo',\n\t\t\t{\n\t\t\t\turl: '/masterdemo',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'masterdemo'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.consults',\n\t\t\t{\n\t\t\t\turl: '/consults',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'consults'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.documents',\n\t\t\t{\n\t\t\t\turl: '/documents',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'documents'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.summary',\n\t\t\t{\n\t\t\t\turl: '/summary',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'summary'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.eforms',\n\t\t\t{\n\t\t\t\turl: '/eforms',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'eforms'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.inbox',\n\t\t\t{\n\t\t\t\turl: '/inbox',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'inbox'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.programs',\n\t\t\t{\n\t\t\t\turl: '/programs',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'programs'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('settings.integration',\n\t\t\t{\n\t\t\t\turl: '/integration',\n\t\t\t\ttemplateUrl: 'src/settings/settings.jsp',\n\t\t\t\tcontroller: 'Settings.SettingsController as settingsCtrl',\n\t\t\t\tdata: {\n\t\t\t\t\ttab: 'integration'\n\t\t\t\t}\n\t\t\t})\n\t\t.state('support',\n\t\t{\n\t\t\turl: '/support',\n\t\t\ttemplateUrl: 'src/help/support.jsp',\n\t\t\tcontroller: 'Help.SupportController'\n\t\t})\n\t\t.state('help',\n\t\t{\n\t\t\turl: '/help',\n\t\t\ttemplateUrl: 'src/help/help.jsp',\n\t\t\tcontroller: 'Help.HelpController'\n\t\t})\n\t\t.state('record',\n\t\t{\n\t\t\turl: '/record/:demographicNo',\n\t\t\ttemplateUrl: 'src/record/record.jsp',\n\t\t\tcontroller: 'Record.RecordController as recordCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tdemo: ['$stateParams', 'demographicService', function($stateParams, demographicService)\n\t\t\t\t{\n\t\t\t\t\treturn demographicService.getDemographic($stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}],\n\t\t\t\tproperties: ['uxService', function(uxService)\n\t\t\t\t{\n\t\t\t\t\treturn uxService.getDisplayProperties();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.details',\n\t\t{\n\t\t\turl: '/details',\n\t\t\ttemplateUrl: 'src/record/details/details.jsp',\n\t\t\tcontroller: 'Record.Details.DetailsController as detailsCtrl'\n\t\t})\n\t\t.state('record.summary',\n\t\t{\n\t\t\turl: '/summary?appointmentNo&encType',\n\t\t\ttemplateUrl: 'src/record/summary/summary.jsp',\n\t\t\tcontroller: 'Record.Summary.SummaryController as summaryCtrl'\n\t\t})\n\t\t.state('record.forms',\n\t\t{\n\t\t\turl: '/forms',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tviewState: FORM_CONTROLLER_STATES.COMPLETED\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.add',\n\t\t\t{\n\t\t\t\turl: '/add',\n\t\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\t\tparams: {\n\t\t\t\t\tviewState: FORM_CONTROLLER_STATES.ADD\n\t\t\t\t}\n\t\t\t})\n\t\t.state('record.forms.completed',\n\t\t\t{\n\t\t\t\turl: '/completed',\n\t\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\t\tparams: {\n\t\t\t\t\tviewState: FORM_CONTROLLER_STATES.COMPLETED\n\t\t\t\t}\n\t\t\t})\n\t\t.state('record.forms.revisions',\n\t\t{\n\t\t\turl: '/revisions',\n\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\tparams: {\n\t\t\t\tviewState: FORM_CONTROLLER_STATES.REVISION\n\t\t\t}\n\t\t})\n\t\t.state('record.forms.deleted',\n\t\t\t{\n\t\t\t\turl: '/deleted',\n\t\t\t\ttemplateUrl: 'src/record/forms/forms.jsp',\n\t\t\t\tcontroller: 'Record.Forms.FormController as formCtrl',\n\t\t\t\tparams: {\n\t\t\t\t\tviewState: FORM_CONTROLLER_STATES.DELETED\n\t\t\t\t}\n\t\t\t})\n\t\t.state('record.consultRequests',\n\t\t{\n\t\t\turl: '/consults',\n\t\t\ttemplateUrl: 'src/consults/consultRequestList.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestListController as consultRequestListCtrl'\n\t\t})\n\t\t.state('record.consultResponses',\n\t\t{\n\t\t\turl: '/consultResponses',\n\t\t\ttemplateUrl: 'src/consults/consultResponseList.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseListController as consultResponseListCtrl'\n\t\t})\n\t\t.state('record.consultRequest',\n\t\t{\n\t\t\turl: '/consult/:requestId',\n\t\t\ttemplateUrl: 'src/consults/consultRequest.jsp',\n\t\t\tcontroller: 'Consults.ConsultRequestController as consultRequestCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\tif($stateParams.requestId === \"new\") {\n\t\t\t\t\t\treturn consultService.getNewRequest($stateParams.demographicNo);\n\t\t\t\t\t}\n\t\t\t\t\treturn consultService.getRequest($stateParams.requestId);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.consultResponse',\n\t\t{\n\t\t\turl: '/consultResponse/:responseId',\n\t\t\ttemplateUrl: 'src/consults/consultResponse.jsp',\n\t\t\tcontroller: 'Consults.ConsultResponseController as consultResponseCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tconsult: ['$stateParams', 'consultService', function($stateParams, consultService)\n\t\t\t\t{\n\t\t\t\t\treturn consultService.getResponse($stateParams.responseId, $stateParams.demographicNo);\n\t\t\t\t}],\n\t\t\t\tuser: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t\t.state('record.tickler',\n\t\t{\n\t\t\turl: '/tickler',\n\t\t\ttemplateUrl: 'src/tickler/ticklerList.jsp',\n\t\t\tcontroller: 'Tickler.TicklerListController as ticklerListCtrl',\n\t\t\tresolve:\n\t\t\t{\n\t\t\t\tproviders: ['providerService', function(providerService)\n\t\t\t\t{\n\t\t\t\t\treturn providerService.searchProviders(\n\t\t\t\t\t{\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t});\n\t\t\t\t}]\n\t\t\t}\n\t\t}).state('record.tracker',\n\t\t{\n\t\t\turl: '/tracker',\n\t\t\ttemplateUrl: 'src/record/tracker/tracker.jsp',\n\t\t\tcontroller: 'Record.Tracker.TrackerController as trackerCtrl'\n\t\t})\n\t\t.state('record.phr',\n\t\t{\n\t\t\turl: '/phr',\n\t\t\ttemplateUrl: 'src/record/phr/phr.jsp',\n\t\t\tcontroller: 'Record.PHR.PHRController as phrCtrl'\n\t\t})\n\t\t// .state('admin.integration',\n\t\t.state('k2aConfig',\n\t\t\t{\n\t\t\t// url: '/admin/integration',\n\t\t\turl:'/k2aConfig',\n\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actConfiguration.jsp',\n\t\t\tcontroller: 'Admin.Integration.Know2act.k2aConfigController as k2aConfigCtrl'\n\t\t})\n\t\t.state('k2aTemplate',\n\t\t\t{\n\t\t\t\t// url: '/admin/integration',\n\t\t\t\turl:'/k2aTemplate',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actTemplate.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aTemplateController as k2aTemplateCtrl'\n\t\t\t})\n\t\t.state('k2aNotification',\n\t\t\t{\n\t\t\t\turl: '/k2aNotification',\n\t\t\t\ttemplateUrl: 'src/admin/integration/know2act/Know2actNotifications.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Know2act.k2aNotificationController as k2aNoteCtrl'\n\t\t\t})\n\t\t.state('faxConfig',\n\t\t\t{\n\t\t\t\turl: '/faxConfig',\n\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfiguration.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationController as faxController'\n\t\t\t})\n\t\t.state('faxSendReceive',\n\t\t\t{\n\t\t\t\turl: '/faxSendReceive',\n\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxSendReceive.jsp',\n\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxSendReceiveController as faxSendReceiveController'\n\t\t\t});\n\n\t// redirect to login page on 401 error.\n\t$httpProvider.interceptors.push(['$q', function($q) {\n\t\treturn {\n\t\t\t'responseError': function(rejection) {\n\t\t\t\tif (rejection.status === 401 && rejection.data === \"<error>Not authorized</error>\")\n\t\t\t\t{ // reload will cause server to redirect\n\t\t\t\t\tlocation.reload();\n\t\t\t\t}\n\t\t\t\treturn $q.reject(rejection);\n\t\t\t}\n\t\t};\n\t}]);\n}]);\n\n\n// For debugging purposes\n/*\noscarApp.run( function($rootScope, $location) {\n\n$rootScope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeStart to '+toState.to+'- fired when the transition begins. toState,toParams : \\n',toState, toParams);\n\t});\n\t$rootScope.$on('$stateChangeError',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeError - fired when an error occurs during transition.');\n\t  console.log(arguments);\n\t});\n\t$rootScope.$on('$stateChangeSuccess',function(event, toState, toParams, fromState, fromParams){\n\t  console.log('$stateChangeSuccess to '+toState.name+'- fired once the state transition is complete.');\n\t});\n\t// $rootScope.$on('$viewContentLoading',function(event, viewConfig){\n\t//   // runs on individual scopes, so putting it in \"run\" doesn't work.\n\t//   console.log('$viewContentLoading - view begins loading - dom not rendered',viewConfig);\n\t// });\n\t$rootScope.$on('$viewContentLoaded',function(event){\n\t  console.log('$viewContentLoaded - fired after dom rendered',event);\n\t});\n\t$rootScope.$on('$stateNotFound',function(event, unfoundState, fromState, fromParams){\n\t  console.log('$stateNotFound '+unfoundState.to+'  - fired when a state cannot be found by its name.');\n\t  console.log(unfoundState, fromState, fromParams);\n\t});\n\n});\n*/\n\n\n\n/*\n\n user: function($stateParams, UserService) {\n\t  return UserService.find($stateParams.id);\n\t},\noscarApp.config(['$routeProvider',\n\t\t\t\t\tfunction($routeProvider) {\n\n\t\t\t\t\t\twhen('/settings', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/settings-classic.jsp',\n\t\t\t\t\t\t\tcontroller: 'Settings.SettingsController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/support', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/support.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.SupportController'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/help', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/help.jsp',\n\t\t\t\t\t\t\tcontroller: 'Help.HelpController'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t\twhen('/messenger', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/messenger.jsp',\n\t\t\t\t\t\t\tcontroller: 'MessengerCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFullCtrl'\n\t\t\t\t\t\t}).\n\t\t\t\t\t\twhen('/eform2', {\n\t\t\t\t\t\t\ttemplateUrl: 'src/partials/eform2.jsp',\n\t\t\t\t\t\t\tcontroller: 'EformFull2Ctrl'\n\t\t\t\t\t\t}).\n\n\t\t\t\t\t}\n]);\n*/\n\n\n\n//for dev - just to keep the cache clear\n/*\noscarApp.run(function($rootScope, $templateCache) {\n\t$rootScope.$on('$viewContentLoaded', function() {\n\t\t$templateCache.removeAll();\n\t\tconsole.log(\"onclick of tab\");\n\t});\n});\n\n\n//reset the left nav back\noscarApp.run( function($rootScope, $location) {\n\t$rootScope.$on( \"$routeChangeStart\", function(event, next, current) {\n\t\t$(\"#left_pane\").addClass(\"col-md-2\");\n\t\t$(\"#left_pane\").show();\n\t\t$(\"#right_pane\").removeClass(\"col-md-12\");\n\t\t$(\"#right_pane\").addClass(\"col-md-10\");\n\t});\n});\n\n*/\n\n//this is for the patient list control. Tells us which template to load\n/*angular.module('oscarProviderViewModule').factory('Navigation', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n});*/\nangular.module('oscarProviderViewModule').factory('Navigation', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\tlocation: '',\n\n\t\t\tload: function(msg)\n\t\t\t{\n\t\t\t\tthis.location = msg;\n\t\t\t}\n\t\t};\n\t}\n]);\n\n/*\n\nangular.module('oscarProviderViewModule').directive('oscarSecurityShow', function ($animate, securityService) {\n\t  return function(scope, element, attr) {\n\t\t\tscope.$watch(attr.oscarSecurityShow, function ngShowWatchAction(value){\n\t\t\t\t//console.log('valuee='+value.toSource());\n\n\t\t\t\tif(value.objectName != null && value.privilege != null) {\n\t\t\t\t\t//securityService.hasHigh(value.objectName,value.privilege,null);\n\t\t\t\t\tconsole.log('gtg');\n\t\t\t\t}\n\n\t\t\t  //set value to true to show, or else hide\n\t\t\t  $animate[value ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t\t\t});\n\t  };\n});\n*/\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Util', []);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Util\").service(\"angularUtil\", [\n\t'$window',\n\n\tfunction($window)\n\t{\n\t\tvar service = {};\n\n\t\t// Set to true if we are in a mobile view (<768px), false if otherwise\n\t\tservice.inMobileView = function inMobileView()\n\t\t{\n\t\t\treturn $window.innerWidth < 768;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\nangular.module('Common.Util').service(\"junoHttp\", [\n        '$http',\n        '$window',\n        '$q',\n\n        function (\n            $http,\n            $window,\n            $q\n        )\n        {\n            // This service wraps the methods in $http so that authentication can be added.\n            var http_util = {};\n\n            http_util.request =  function request(request_hash)\n            {\n                var deferred = $q.defer();\n\n                $http(request_hash).then(\n                    function success(response)\n                    {\n                        http_util.success_function(response, request_hash, deferred);\n                    }, function error(errors)\n                    {\n                        http_util.errors_function(errors, request_hash, deferred);\n                    }, function notify(progress)\n                    {\n                        deferred.notify(progress);\n                    });\n\n                return deferred.promise;\n            };\n\n            http_util.success_function = function success_function(response, request_hash, deferred)\n            {\n                var request_result = response;\n                try {\n                    if (request_result.data.status === 'SUCCESS') {\n                        var results = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.body)\n                        };\n                        deferred.resolve(results);\n                    }\n                    else if (request_result.data.status === 'ERROR'){\n                        var errors = {\n                            meta: angular.copy(request_result.data.headers),\n                            data: angular.copy(request_result.data.error.message)\n                        };\n                        deferred.reject(errors);\n                    }\n                    else {\n                        throw \"Invalid Response Status\";\n                    }\n                }\n                catch(e) {\n                    var errors = {\n                        meta: {},\n                        data: \"An Error has occurred. please contact technical support\"\n                    };\n                    deferred.reject(errors);\n                }\n            };\n\n            http_util.errors_function = function errors_function(errors, request_hash, deferred)\n            {\n                deferred.reject(errors);\n            };\n\n            http_util.call = function call(method, url, data)\n            {\n                var request_hash = {\n                    method: method,\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.get = function get(url, config)\n            {\n                var request_hash = {\n                    method: 'GET',\n                    url: url\n                };\n                Juno.Common.Util.mergeHash(request_hash, config);\n                return http_util.request(request_hash);\n            };\n\n            http_util.post = function post(url,data)\n            {\n                var request_hash = {\n                    method: 'POST',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            http_util.put = function put(url,data)\n            {\n                var request_hash = {\n                    method: 'PUT',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            // 'delete' is a reserved keyword -- leave me alone\n            http_util.del = function del(url,data)\n            {\n                var request_hash = {\n                    method: 'DELETE',\n                    url: url,\n                    data: data\n                };\n                return http_util.request(request_hash);\n            };\n\n            return http_util;\n        }\n    ]\n);\n","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nwindow.Juno = window.Juno || {};\nJuno.Common = Juno.Common || {};\n\nJuno.Common.SearchListHelper = function SearchListHelper(defaultParams, searchParams)\n{\n\tvar me = this;\n\n\tme.searchParams = searchParams || {};\n\tme.defaults = {\n\t\tpage: 1,\n\t\tperPage: 10,\n\t};\n\n\tme.initSearchParameters = function initSearchParameters()\n\t{\n\t\tvar fieldName;\n\n\t\t// Merge default params\n\t\tif(Juno.Common.Util.exists(defaultParams))\n\t\t{\n\t\t\tfor(fieldName in defaultParams)\n\t\t\t{\n\t\t\t\tif(defaultParams.hasOwnProperty(fieldName))\n\t\t\t\t{\n\t\t\t\t\tme.defaults[fieldName] = defaultParams[fieldName];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tme.getParams = function getParams()\n\t{\n\t\tvar outParams = {};\n\t\tfor(var fieldName in me.searchParams)\n\t\t{\n\t\t\tif(me.searchParams.hasOwnProperty(fieldName))\n\t\t\t{\n\t\t\t\toutParams[fieldName] = me.searchParams[fieldName];\n\t\t\t}\n\t\t}\n\t\tfor(var fieldName in me.defaults)\n\t\t{\n\t\t\tif(!outParams.hasOwnProperty(fieldName))\n\t\t\t{\n\t\t\t\toutParams[fieldName] = me.defaults[fieldName];\n\t\t\t}\n\t\t}\n\t\treturn outParams;\n\t};\n\n\tme.initSearchParameters();\n};\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Services', ['Common.Util']);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"appService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/app';\n\n\t\tservice.getApps = function getApps()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getApps',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"appServices::getApps error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting app content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"autoCompleteService\", [\n\t\"$q\",\n\t\"demographicService\",\n\tfunction(\n\t\t$q,\n\t\tdemographicService\n\t)\n\t{\n\t\tvar service = {};\n\n\t\tservice.init_autocomplete_values = function init_autocomplete_values(patient, autocomplete_values){\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tdemographicService.getDemographic(patient.patient).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\tresult.dob = moment([result.dobYear, result.dobMonth, result.dobDay]);\n\n\t\t\t\tdeferred.resolve({\n\t\t\t\t\tdata:{\n\t\t\t\t\t\tpatient:{\n\t\t\t\t\t\t\tdata: service.formatDemographic(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.formatDemographic = function formatDemographic(result)\n\t\t{\n\t\t\treturn {\n\t\t\t\tuuid: result.demographicNo,\n\t\t\t\tfull_name: result.lastName + ',' + result.firstName,\n\t\t\t\tbirth_date: Juno.Common.Util.formatMomentDate(result.dob),\n\t\t\t\thealth_number: result.hin,\n\t\t\t\tphone_number_primary: result.phone\n\t\t\t};\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"billingService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getUniqueServiceTypes = function getUniqueServiceTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/uniqueServiceTypes',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getUniqueServiceTypes error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching billing service types\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBillingRegion = function getBillingRegion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/billingRegion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getBillingRegion error\", errorsz);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting billingRegion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDefaultView = function getDefaultView()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'billing/defaultView',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"billingService::getDefaultView error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting defaultView\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"consultService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/consults/';\n\n\t\tservice.searchRequests = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\t\n\t\t\tjunoHttp.get(service.apiPath + 'searchRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTotalRequests = function getTotalRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\n\t\t\tjunoHttp.get(service.apiPath + 'getTotalRequests', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getTotalRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting total number of consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequest = function getRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequest/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getNewRequest = function getRequest(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdemographicNo: demographicNo\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getNewRequest', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getNewRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting new consult request\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRequestAttachments = function getRequestAttachments(\n\t\t\trequestId, demographicId, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t'demographicId': encodeURIComponent(demographicId),\n\t\t\t\t'attached': encodeURIComponent(attached)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + 'getRequestAttachments/' + encodeURIComponent(requestId), config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getRequestAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting consult attachments (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveRequest = function saveRequest(request)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + 'saveRequest', request).then(\n\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveRequest error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult request after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.eSendRequest = function eSendRequest(requestId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + 'eSendRequest/' + encodeURIComponent(requestId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::eSendRequest error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while e-sending consult request (requestId=\" + requestId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchResponses = function searchRequests(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = search;\n\t\t\tjunoHttp.get(service.apiPath + 'searchResponses', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::searchRequests error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while searching consult requests\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponse = function getResponse(responseId, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (responseId === \"new\")\n\t\t\t{\n\t\t\t\tresponseId = 0;\n\t\t\t}\n\n\t\t\t$http.get(service.apiPath + 'getResponse',\n\t\t\t{\n\t\t\t\tparams:\n\t\t\t\t{\n\t\t\t\t\tresponseId: responseId,\n\t\t\t\t\tdemographicNo: demographicNo\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\n\t\t\t\t\tif(results.data.responseDate) results.data.responseDate = moment(results.data.responseDate).toDate();\n\t\t\t\t\tif(results.data.referralDate) results.data.referralDate = moment(results.data.referralDate).toDate();\n\t\t\t\t\tif(results.data.appointmentDate) results.data.appointmentDate = moment(results.data.appointmentDate).toDate();\n\t\t\t\t\tif(results.data.followUpDate) results.data.followUpDate = moment(results.data.followUpDate).toDate();\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response (responseId=\" + responseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getResponseAttachments = function getResponseAttachments(\n\t\t\tresponseId, demographicNo, attached)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(\n\t\t\t\tservice.apiPath + 'getResponseAttachments?responseId=' + encodeURIComponent(responseId) +\n\t\t\t\t'&demographicNo=' + encodeURIComponent(demographicNo) +\n\t\t\t\t'&attached=' + encodeURIComponent(attached)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getResponseAttachments error\", errors);\n\t\t\t\t\tdeferred.reject(\n\t\t\t\t\t\t\"An error occurred while getting consult response attachments (responseId=\" +\n\t\t\t\t\t\tresponseId + \")\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveResponse = function saveResponse(response)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + 'saveResponse', response).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::saveResponse error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching consult response after save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReferralPathwaysByService = function getReferralPathwaysByService(serviceName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + 'getReferralPathwaysByService?serviceName=' +\n\t\t\t\tencodeURIComponent(serviceName)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getReferralPathwaysByService error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching referral pathways\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getLetterheadList = function getLetterheadList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + 'getLetterheadList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"consultService::getLetterheadList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching letterheads\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicService\", [\n    '$q',\n    'junoHttp',\n    function($q, junoHttp)\n    {\n        var service = {};\n\n        service.apiPath = '../ws/rs/demographic';\n\n        service.getDemographic = function getDemographic(demographicNo)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo),\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    if(results.data.effDate) results.data.effDate = moment(results.data.effDate).toDate();\n\t                if(results.data.hcRenewDate)results.data.hcRenewDate = moment(results.data.hcRenewDate).toDate();\n\t                if(results.data.endDate)results.data.endDate = moment(results.data.endDate).toDate();\n\t                if(results.data.patientStatusDate)results.data.patientStatusDate = moment(results.data.patientStatusDate).toDate();\n\t                if(results.data.onWaitingListSinceDate)results.data.onWaitingListSinceDate = moment(results.data.onWaitingListSinceDate).toDate();\n\t                if(results.data.scrPaperChartArchivedDate)results.data.scrPaperChartArchivedDate = moment(results.data.scrPaperChartArchivedDate).toDate();\n\t                if(results.data.dateJoined)results.data.dateJoined = moment(results.data.dateJoined).toDate();\n\t                if(results.data.rosterTerminationDate)results.data.rosterTerminationDate = moment(results.data.rosterTerminationDate).toDate();\n\t                if(results.data.rosterDate)results.data.rosterDate = moment(results.data.rosterDate).toDate();\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::getDemographic error\", errors);\n                    deferred.reject(\"An error occurred while fetching demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n\t    service.getDemographicContacts = function getDemographicContacts(demographicNo,contactCategory)\n\t    {\n\t\t    var deferred = $q.defer();\n\n\t\t    var config = Juno.Common.ServiceHelper.configHeaders();\n\t\t    config.params = {\n\t\t\t    category: contactCategory\n\t\t    };\n\n\t\t    junoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + \"/contacts\", config).then(\n\t\t\t    function success(results)\n\t\t\t    {\n\t\t\t\t    deferred.resolve(results.data);\n\t\t\t    },\n\t\t\t    function error(errors)\n\t\t\t    {\n\t\t\t\t    console.log(\"demographicServices::getDemographicContacts error\", errors);\n\t\t\t\t    deferred.reject(\"An error occurred while fetching demographic contacts\");\n\t\t\t    });\n\n\t\t    return deferred.promise;\n\t    };\n\n        service.saveDemographic = function saveDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.post(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::saveDemographic error\", errors);\n                    deferred.reject(errors.data.error.message);\n                });\n\n            return deferred.promise;\n        };\n\n        service.updateDemographic = function updateDemographic(demographic)\n        {\n            var deferred = $q.defer();\n\n\t        junoHttp.put(service.apiPath, demographic).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"demographicServices::updateDemographic error\", errors);\n                    deferred.reject(\"An error occurred while updating demographic\");\n                });\n\n            return deferred.promise;\n        };\n\n        return service;\n    }\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"demographicsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/demographics';\n\n\t\tservice.SEARCH_MODE = Object.freeze(\n\t\t\t{\n\t\t\t\tName: \"search_name\",\n\t\t\t\tDOB: \"search_dob\",\n\t\t\t\tPhone: \"search_phone\",\n\t\t\t\tHin: \"search_hin\",\n\t\t\t\tAddress: \"search_address\",\n\t\t\t\tEmail: \"search_email\",\n\t\t\t\tChartNo: \"search_chart_no\",\n\t\t\t\tDemographicNo: \"search_demographic_no\"\n\t\t\t});\n\n\t\tservice.STATUS_MODE = Object.freeze(\n\t\t\t{\n\t\t\t\tALL: \"all\",\n\t\t\t\tACTIVE: \"active\",\n\t\t\t\tINACTIVE: \"inactive\"\n\t\t\t});\n\n\t\tservice.quickSearch = function quickSearch(search)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tquery: search\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/quickSearch', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::quickSearch error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(search, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIntegrator = function searchIntegrator(search, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tjsonData: search,\n\t\t\t\titemsToReturn: itemsToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/searchIntegrator', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::searchIntegrator error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getStatusList = function getStatusList(listType)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: listType\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/statusList', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"demographicsService::getStatusList error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting status list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"diseaseRegistryService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\n\tfunction(\n\t\t$http,\n\t\t$q,\n\t\tjunoHttp\n        )\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/dxRegisty/';\n\n\t\tservice.getQuickLists = function getQuickLists()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + 'quickLists/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::getQuickLists error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching quick lists\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n        service.getIssueQuickLists = function getIssueQuickLists()\n        {\n            var deferred = $q.defer();\n            junoHttp.get(service.apiPath + 'issueQuickLists/',\n                Juno.Common.ServiceHelper.configHeadersWithCache()).then(\n                function success(results)\n                {\n                    deferred.resolve(results.data);\n                },\n                function error(errors)\n                {\n                    console.log(\"diseaseRegistryService::getIssueQuickLists error\", errors);\n                    deferred.reject(\"An error occurred while fetching quick lists\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\tservice.addToDxRegistry = function addToDxRegistry(demographicNo, disease)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar issueToSend = {};\n\t\t\tissueToSend.id = disease.id;\n\t\t\tissueToSend.type = disease.type;\n\t\t\tissueToSend.code = disease.code;\n\t\t\tissueToSend.description = disease.description;\n\n\t\t\t$http.post(service.apiPath + encodeURIComponent(demographicNo) + '/add', issueToSend).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::addToDxRegistry error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while adding to dx registry\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.findDxIssue = function findDxIssue(code, codingSystem)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeadersWithCache();\n\t\t\tconfig.params = {\n\t\t\t\tcodingSystem: codingSystem,\n\t\t\t\tcode: code\n            };\n\n            junoHttp.get(service.apiPath + 'findDxIssue', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"diseaseRegistryService::findDxIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving a dx issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict'\n\n\nangular.module('Common.Services').factory(\n\t'errorsService',\n\n\t[\n\n\t\tfunction()\n\t\t{\n\t\t\tvar messages = {};\n\n\t\t\t/*************************************************************/\n\t\t\t// Factory\n\t\t\t// @param {errorsHash} Error hash from Clinicaid API\n\t\t\t// @param {options} Hash\n\t\t\t//\t\t- {displayFieldErrors} Boolean : Sets flag\n\t\t\t//\t\t- {fieldErrorsLabelMap} Hash : Can pass a hash in to get field\n\t\t\t// \t\tlabels for displaying field errors. Assumed to be field => label\n\t\t\t//\t\t- {fieldErrorsLabelMapKey} String : Allows for\n\t\t\t// \t\tfield => Hash[key] lookup for label.\n\t\t\t/*************************************************************/\n\t\t\tmessages.factory = function factory(errorsHash, options)\n\t\t\t{\n\t\t\t\treturn new Juno.Common.DisplayMessages(errorsHash, options);\n\t\t\t};\n\n\t\t\treturn messages;\n\t\t}]\n);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"eFormService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/eform';\n\n\t\t//TODO this file is not used anywhere and requires testing\n\t\tservice.saveEForm = function saveEForm()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.put(service.apiPath + '/',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::saveEForm error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving an EForm\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.updateEForm = function updateEForm(formId)\n        {\n            var deferred = $q.defer();\n\t        junoHttp.post(service.apiPath + '/' + formId,\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    deferred.resolve(results);\n                },\n                function error(errors)\n                {\n                    console.log(\"formService::updateEForm error\", errors);\n                    deferred.reject(\"An error occurred while updating an EForm\");\n                });\n\n            return deferred.promise;\n        };\n\t\tservice.loadEForm = function loadEForm(formId)\n        {\n            var deferred = $q.defer();\n\t        junoHttp.get(service.apiPath + '/' + formId,\n                Juno.Common.ServiceHelper.configHeaders()).then(\n                function success(results)\n                {\n                    deferred.resolve(results);\n                },\n                function error(errors)\n                {\n                    console.log(\"formService::loadEForm error\", errors);\n                    deferred.reject(\"An error occurred while loading an EForm\");\n                });\n\n            return deferred.promise;\n        };\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxAccountService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxAccount';\n\n\t\tservice.listAccounts = function listAccounts(page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/search', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::listAccounts error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isEnabled = function isEnabled(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + id + '/enabled', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::isEnabled error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getAccountSettings = function getAccountSettings(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + id, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"faxService::getAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.addAccountSettings = function addAccountSettings(transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateAccountSettings = function updateAccountSettings(id, transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setAccountSettings error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating fax account data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.testConnection = function testConnection(transfer)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tlet id = transfer.id;\n\t\t\tlet url = service.apiPath + '/testConnection';\n\n\t\t\tif(id && id != null && id !== '')\n\t\t\t{\n\t\t\t\turl = service.apiPath + '/' + transfer.id + '/testConnection'\n\t\t\t}\n\n\t\t\tjunoHttp.post(url, transfer).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::validateLogin error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while testing connection\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getInbox = function getInbox(accountId, searchListHelper)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = searchListHelper.getParams();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + accountId + '/inbox', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getInbox error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving inbox data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOutbox = function getOutbox(accountId, searchListHelper)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = searchListHelper.getParams();\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + accountId + '/outbox', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getOutbox error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while retrieving outbox data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxInboundService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxInbound';\n\n\t\tservice.getNextPullTime = function getNextPullTime()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getNextPullTime', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getNextPullTime error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting scheduled pull time\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"faxOutboundService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/faxOutbound';\n\n\t\tservice.resendOutboundFax = function resendFax(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id + '/resend').then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::resendFax error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while resending a fax\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\tservice.getNextPushTime = function getNextPushTime()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getNextPushTime', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::getNextPushTime error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting scheduled push time\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t/* provide the endpoint url for downloading the faxed pdf document */\n\t\tservice.getDownloadUrl = function(id)\n\t\t{\n\t\t\treturn service.apiPath + '/' + id + '/download';\n\t\t};\n\n\t\tservice.setNotificationStatus = function setNotificationStatus(id, status)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id + '/notificationStatus', status).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::setNotificationStatus error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while acknowledging a fax\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.archive = function archive(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + id + '/archive').then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"faxService::archive error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while archiveing a fax\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\nangular.module('Common.Services').factory(\n\t'fieldHelperService',\n\t[\n\t\t'$timeout',\n\n\t\tfunction(\n\t\t\t$timeout\n\t\t)\n\t\t{\n\t\t\tvar helper = {};\n\n\t\t\thelper.default_scope = {\n\n\t\t\t\tform_group_class: '@caFormGroupClass',\n\t\t\t\tlabel_size: '@caLabelSize',\n\t\t\t\tinput_size: '@caInputSize',\n\t\t\t\ttext_length: '@caTextLength',\n\t\t\t\ttext_placeholder: '@caTextPlaceholder',\n\t\t\t\thide_label_colon: '@caTitleNoColon',\n\t\t\t\ttemplate: '@caTemplate',\n\n\t\t\t\tname: '@caName',\n\n\t\t\t\ttitle: '@caTitle',\n\t\t\t\thint: '@caHint',\n\n\t\t\t\ttab_index: '@caTabindex',\n\n\t\t\t\terror_message: '@caError',\n\t\t\t\twarning_message: '@caWarning',\n\n\t\t\t\tdepends_on_field: '@caDependsOnField',\n\t\t\t\tdepends_on_value: '@caDependsOnValue',\n\n\t\t\t\tmodel: '=caModel',\n\t\t\t\tdisabled: '=caDisabled',\n\t\t\t\thide: '=caHide',\n\t\t\t\tfocus_field: '=caFocusField',\n\t\t\t\trequiredField: '@caRequiredField',\n\n\t\t\t\ton_focus_fn: '&caFocus',\n\t\t\t\tchange_fn: '&caChange',\n\t\t\t\tblur_fn: '&caBlur',\n\n\t\t\t\tkeypress_enter_fn: '&caKeypressEnter',\n\t\t\t};\n\n\t\t\thelper.resolve_template = function(attributes, base_default_template)\n\t\t\t{\n\t\t\t\t// if tag has a ca-template on it, add it to the template path\n\t\t\t\tif(Juno.Common.Util.exists(attributes['caTemplate']))\n\t\t\t\t{\n\t\t\t\t\treturn base_default_template + '_' + attributes['caTemplate'] + '.jsp';\n\t\t\t\t}\n\t\t\t\treturn base_default_template + '.jsp';\n\t\t\t};\n\n\t\t\thelper.merge_title_messages = function merge_title_messages($scope)\n\t\t\t{\n\t\t\t\t// Merge error and warning records so they both can be displayed in the hover over\n\t\t\t\t$scope.title_array = [];\n\t\t\t\tif(Juno.Common.Util.exists($scope.error_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.error_message);\n\t\t\t\t}\n\t\t\t\tif(Juno.Common.Util.exists($scope.warning_message))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.warning_message);\n\t\t\t\t}\n\n\t\t\t\tif($scope.title_array.length == 0 && Juno.Common.Util.exists($scope.hint))\n\t\t\t\t{\n\t\t\t\t\t$scope.title_array.push($scope.hint);\n\t\t\t\t}\n\t\t\t\t$scope.title_string = $scope.title_array.join('|');\n\t\t\t};\n\n\t\t\thelper.default_link_function = function default_link_function(\n\t\t\t\t$scope, element, attribute, controller)\n\t\t\t{\n\t\t\t\thelper.merge_title_messages($scope);\n\t\t\t\t$scope.focus_fn = function on_focus()\n\t\t\t\t{\n\t\t\t\t\tif(angular.isFunction($scope.on_focus_fn))\n\t\t\t\t\t{\n\t\t\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif(($(element).is(\"input:enabled, select:enabled, textarea:enabled\") &&\n\t\t\t\t\t\t\t\t$(element).is(':focus')) ||\n\t\t\t\t\t\t\t\t$(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.on_focus_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// watch the focus field: when it matches the name, focus the element\n\t\t\t\t$scope.$watch('focus_field', function()\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) &&\n\t\t\t\t\t\t$scope.focus_field == $scope.name)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus and select the input element\n\t\t\t\t\t\t$timeout(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t\t{\n\t\t\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($(element).is(\"input:enabled, select:enabled, textarea:enabled\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(element).find(\n\t\t\t\t\t\t\t\t\"input:enabled, select:enabled, textarea:enabled\").first().focus().select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(angular.isFunction($scope.keypress_enter_fn))\n\t\t\t\t{\n\t\t\t\t\telement.bind(\"keydown keypress\", function(event)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(event.which === 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.$apply(function ()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.$eval($scope.keypress_enter_fn);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\thelper.default_controller = ['$scope', '$element', '$attrs', function default_controller($scope, $element, $attrs)\n\t\t\t{\n\t\t\t\t// These field directives have a built-in handling of the focus field,\n\t\t\t\t// so this tells the caFocusField directive to ignore them.\n\t\t\t\tthis.ignore_focus_field = function ignore_focus_field()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\t// common setup for input text fields\n\t\t\thelper.textInputDirective = function(forceHidePassword)\n\t\t\t{\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\n\t\t\t\tscope.rows = '@caRows';\n\t\t\t\tscope.hideText = '@caHideText';\n\t\t\t\tscope.max_characters = '@caMaxCharacters';\n\t\t\t\tscope.no_label = '@caNoLabel';\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_text');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\tif (forceHidePassword)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.hideText = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!$scope.model)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.model = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.model) && $scope.model.length > $scope.max_characters)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.error_message = \"Character limit exceeded. Max allowed: \" + $scope.max_characters;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\t\t\t};\n\n\t\t\treturn helper;\n\t\t}]);\n","'use strict';\n\nangular.module('Common.Services').factory(\n\t'focusService',\n\n\t[\n\t\t'$timeout',\n\t\t'$window',\n\n\t\tfunction (\n\t\t\t$timeout, $window\n\t\t)\n\t\t{\n\t\t\tvar focus = {};\n\n\t\t\t// focuses element\n\t\t\tfocus.element = function element(selector)\n\t\t\t{\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector).focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first visible and enabled form input\n\t\t\t// if selector is provided, only looks within that selector\n\t\t\tfocus.first_form_input = function first_form_element(selector)\n\t\t\t{\n\t\t\t\tif(!selector)\n\t\t\t\t{\n\t\t\t\t\tselector = \"form:visible:first\";\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" input:enabled, \" +\n\t\t\t\t\t\tselector + \" select:enabled, \" +\n\t\t\t\t\t\tselector + \" textarea:enabled \").first().focus();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// focuses first 'has-error' form input and scrolls to alert\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, used in first_alert\n\t\t\tfocus.first_error_input = function first_error_input(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\t$(selector + \" .has-error:first input:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first select:enabled, \" +\n\t\t\t\t\t\tselector + \" .has-error:first textarea:enabled \").first().focus();\n\t\t\t\t\tfocus.first_alert(opts);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// scrolls to the first visible alert (not actually a focus)\n\t\t\t// if modal is open, will just scroll to top of modal\n\t\t\t// if opts['selector'] is provided, only looks within that selector\n\t\t\t// if opts['scroll_offset'] is provided, scrolls to that offset above alert\n\t\t\tfocus.first_alert = function first_alert(opts)\n\t\t\t{\n\t\t\t\tif(!angular.isObject(opts))\n\t\t\t\t{\n\t\t\t\t\topts = {};\n\t\t\t\t}\n\t\t\t\tvar selector = opts['selector'] || '';\n\t\t\t\tvar scroll_offset = opts['scroll_offset'];\n\n\t\t\t\tif(!scroll_offset || scroll_offset < 0)\n\t\t\t\t{\n\t\t\t\t\tscroll_offset = 10;\n\t\t\t\t}\n\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif($('body').hasClass('modal-open'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// there's a modal open - scroll to the top\n\t\t\t\t\t\t$('.modal').animate({ scrollTop: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// no modal open - scroll to just above the first alert\n\t\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\t\tscrollTop: $(selector + \" .alert:visible:first\").offset().top - scroll_offset\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn focus;\n\n\t\t}]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"formService\", [\n\t'$http', '$q', 'junoHttp', 'providerService',\n\tfunction($http, $q, junoHttp, providerService)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/forms';\n\t\tservice.popupOptions = 'left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,directories=no';\n\t\t// load users preferred form popup size\n\t\tproviderService.getSettings().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tservice.popupOptions = \"height=\" + results.eformPopupHeight + \",width=\" + results.eformPopupWidth + \",\" + service.popupOptions\n\t\t\t\t},\n\t\t\t\tfunction error(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"Failed to load provider settings with error: \" + results);\n\t\t\t\t}\n\t\t);\n\n\t\tservice.getAllFormsByHeading = function getAllFormsByHeading(demographicNo, heading)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/all?heading=' + encodeURIComponent(heading),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.genericFormGet = function genericFormGet(url)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(url,\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllFormsByHeading error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllEncounterForms = function getAllEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSelectedEncounterForms = function getSelectedEncounterForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/selectedEncounterForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getSelectedEncounterForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching selected encounter forms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// get all completed form instances for the given demographic\n\t\tservice.getCompletedEncounterForms = function getCompletedEncounterForms(demographicNo)\n\t\t{\n\t\t\treturn service.genericFormGet(service.apiPath + \"/\" + encodeURIComponent(demographicNo) + \"/all/completed\")\n\t\t};\n\n\t\t// get all forms that can be added to the given demographic\n\t\tservice.getAddForms = function getAddForms(demographicNo)\n\t\t{\n\t\t\treturn service.genericFormGet(service.apiPath + \"/allForms\")\n\t\t};\n\n\t\t// get all form revisions for the given demographic\n\t\tservice.getRevisionForms = function (demographicNo)\n\t\t{\n\t\t\treturn service.genericFormGet(service.apiPath + \"/\" + encodeURIComponent(demographicNo) + \"/all/revisions\")\n\t\t};\n\n\t\tservice.getDeletedForms = function (demographicNo)\n\t\t{\n\t\t\treturn service.genericFormGet(service.apiPath + \"/\" + encodeURIComponent(demographicNo) + \"/all/deleted\")\n\t\t};\n\n\t\tservice.getAllEForms = function getAllEForms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/allEForms',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getAllEForms error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching eforms\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// delete a form\n\t\tservice.deleteForm = function deleteForm(id, type)\n\t\t{\n\t\t\tlet deferred = $q.defer();\n\t\t\t$http.put(service.apiPath + \"/delete/\" + encodeURIComponent(id) + \"?type=\" + encodeURIComponent(type),\n\t\t\t\tnull, Juno.Common.ServiceHelper.configHeaders()).then (\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(result)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"Error deleting form: \" + id);\n\t\t\t\t\tdeferred.reject(\"Error deleting form: \" + id);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// restore a form (un delete)\n\t\tservice.restoreForm = function restoreForm(id, type)\n\t\t{\n\t\t\tlet deferred = $q.defer();\n\t\t\t$http.put(service.apiPath + \"/restore/\" + encodeURIComponent(id) + \"?type=\" + encodeURIComponent(type),\n\t\t\t\tnull, Juno.Common.ServiceHelper.configHeaders()).then (\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(result)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"Error restoring form: \" + id);\n\t\t\t\t\tdeferred.reject(\"Error restoring form: \" + id);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getGroupNames = function getGroupNames()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/groupNames',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getGroupNames error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching group names\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormGroups = function getFormGroups()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFormGroups',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormGroups error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFavouriteFormGroup = function getFavouriteFormGroup()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/getFavouriteFormGroup',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFavouriteFormGroup error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching favourite form groups\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFormOptions = function getFormOptions(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/formOptions',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"formService::getFormOptions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching form options\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// open a popup window for the specified eform. returns a promise that is resolved when the popup is closed\n\t\tservice.openEFormPopup = function (demographicNo, id)\n\t\t{\n\t\t\tlet url = '../eform/efmformadd_data.jsp?fid=' + id + '&demographic_no=' + demographicNo + '&appointment=null';\n\t\t\treturn Juno.Common.Util.windowClosedPromise(window.open(url,'popUpWindow', service.popupOptions));\n\t\t};\n\n\t\t// open a popup window for the specified eform instance. returns a promise that is resolved when the popup is closed\n\t\tservice.openEFormInstancePopup = function (demographicNo, fdid)\n\t\t{\n\t\t\tlet url = '../eform/efmshowform_data.jsp?fdid=' + fdid + '&demographic_no=' + demographicNo + '&appointment=null';\n\t\t\treturn Juno.Common.Util.windowClosedPromise(window.open(url,'popUpWindow', service.popupOptions));\n\t\t};\n\n\t\t// open a popup window for the specified form. returns a promise that is resolved when the popup is closed\n\t\tservice.openFormPopup = function (providerNo, demographicNo, appointmentNo, url)\n\t\t{\n\t\t\tif (appointmentNo === undefined)\n\t\t\t{\n\t\t\t\tappointmentNo = \"\";\n\t\t\t}\n\n\t\t\turl = url + encodeURIComponent(demographicNo) + \"&formId=0&provNo=\" + encodeURIComponent(providerNo) + \"&parentAjaxId=forms&appointmentNo=\" + encodeURIComponent(appointmentNo);\n\t\t\treturn Juno.Common.Util.windowClosedPromise(window.open(url, 'popUpWindow', service.popupOptions));\n\t\t};\n\n\t\t// open a popup window for the specified form instance. returns a promise that is resolved when the popup is closed\n\t\tservice.openFormInstancePopup = function(formName, demographicNo, appointmentNo, id)\n\t\t{\n\t\t\tif (appointmentNo === undefined || appointmentNo === null)\n\t\t\t{\n\t\t\t\tappointmentNo = \"\";\n\t\t\t}\n\n\t\t\tlet url = \"../form/forwardshortcutname.jsp?formname=\" + encodeURIComponent(formName) + \"&demographic_no=\" + encodeURIComponent(demographicNo) +\n\t\t\t\t\"&appointmentNo=\" + encodeURIComponent(appointmentNo) + \"&formId=\" + encodeURIComponent(id);\n\t\t\treturn Juno.Common.Util.windowClosedPromise(window.open(url, 'popUpWindow', service.popupOptions));\n\t\t};\n\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\nangular.module(\"Common.Services\").service(\"globalStateService\", [\n\tfunction()\n\t{\n\t\tvar service = {\n\t\t\t\tglobal_settings: {\n\t\t\t\t\tinterface_preferences: {\n\t\t\t\t\t\tscheduler_license_key: \"\"\n\t\t\t\t\t},\n\t\t\t\t\tschedule: {\n\t\t\t\t\t\tdate_selected: null,\n\t\t\t\t\t\tview_selected: null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"inboxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/inbox';\n\n\t\tservice.getDashboardItems = function getDashboardItems(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine?limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getDashboardItems error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/mine/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tservice.getInboxCountByStatus = function getInboxCountByStatus(providerId, statusCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t\t{\n\t\t\t\t\turl: service.apiPath + '/' +encodeURIComponent(providerId)+ '/' +encodeURIComponent(statusCode)+ '/count',\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"inboxService::getUnAckLabDocCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting inbox content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"k2aService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.getK2aFeed = function getK2aFeed(startPoint, numberOfRows)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tkey:'k2a',\n\t\t\t\tstartPoint:encodeURIComponent(startPoint),\n\t\t\t\tnumberOfRows:encodeURIComponent(numberOfRows)\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/rssproxy/rss', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"k2aService::getK2aFeed error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/app/K2AActive', config).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::isK2AInit error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.initK2A = function initK2A(clinicName)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar transferObj = {\n\t\t\t\tname: clinicName\n\t\t\t};\n\n\t\t\tjunoHttp.post(service.apiPath + '/app/K2AInit', transferObj).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::initK2A error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to initialize k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.postK2AComment = function postK2AComment(post)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar commentItem = {\n\t\t\t\tpost:post\n\t\t\t};\n\t\t\tjunoHttp.post(service.apiPath + '/app/comment', commentItem).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::postK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to post a comment to k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeK2AComment = function removeK2AComment(commentId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.del(service.apiPath + '/app/comment/' + encodeURIComponent(commentId)).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::removeK2AComment error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.preventionRulesList = function preventionRulesList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/resources/preventionRulesList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::preventionRulesList error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to remove a comment from k2a\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.loadPreventionRuleById = function loadPreventionRuleById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/loadPreventionRulesById/' +\n\t\t\t\tencodeURIComponent(id.id), id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::loadPreventionRuleById error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to loadPreventionRulesById\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentPreventionRulesVersion = function getCurrentPreventionRulesVersion()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/currentPreventionRulesVersion',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getCurrentPreventionRulesVersion error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getCurrentPreventionRulesVersion\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNotifications = function getNotifications()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.get(service.apiPath + '/resources/notifications',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getNotifications error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to getNotifications\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMoreNotification = function getMoreNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/readmore',\n\t\t\t\tid, Juno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::getMoreNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/readmore\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.ackNotification = function ackNotification(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tjunoHttp.post(service.apiPath + '/resources/notifications/' + id + '/ack',\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"k2aService::ackNotification error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occured while trying to /resources/notifications/ack\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"messageService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/messaging';\n\n\t\tservice.getUnread = function getUnread(limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/unread?startIndex=0&limit=' + encodeURIComponent(limit),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnread error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getUnreadCount = function getUnreadCount()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/count',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"messageService::getUnreadCount error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting messages\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"noteService\", [\n\t'$http',\n\t'$httpParamSerializer',\n\t'$q',\n\t'junoHttp',\n\tfunction(\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$q,\n\t\tjunoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/notes';\n\n\t\tservice.getNotesFrom = function getNotesFrom(demographicNo, offset, numberToReturn, noteConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\t// noteConfig: noteConfig,\n\t\t\t\t'offset': offset,\n\t\t\t\t'numToReturn': numberToReturn\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + encodeURIComponent(demographicNo) + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNotesFrom error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching notes\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveNote = function saveNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/save', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveIssueNote = function saveIssueNote(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/saveIssueNote', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getCurrentNote = function getCurrentNote(demographicNo, config)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getCurrentNote', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getCurrentNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching current note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.tmpSave = function tmpSave(demographicNo, note)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/' +\n\t\t\t\tencodeURIComponent(demographicNo) + '/tmpSave', note).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::tmpSave error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while posting tmp save\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNoteExt = function getNoteExt(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getGroupNoteExt/' + encodeURIComponent(noteId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getNoteExt error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching note ext\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueNote = function getIssueNote(noteId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getIssueNote/' + encodeURIComponent(noteId),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssueId = function getIssueId(issueCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/getIssueId/' + encodeURIComponent(issueCode)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssueId error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue id\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTicklerNote = function getTicklerNote(ticklerId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/ticklerGetNote/' + encodeURIComponent(ticklerId),\n\t\t\t{\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.saveTicklerNote = function saveTicklerNote(ticklerNote)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/ticklerSaveNote',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(ticklerNote),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::saveTicklerNote error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler note\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchIssues = function searchIssues(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchIssues?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::searchIssues error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching issues\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getIssue = function getIssue(issueId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/getIssueById/' + encodeURIComponent(issueId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::getIssue error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching issue\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setEditingNoteFlag = function setEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/setEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::setEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.checkEditNoteNew = function checkEditNoteNew(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/checkEditNoteNew?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::checkEditNoteNew error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking edit note new\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.removeEditingNoteFlag = function removeEditingNoteFlag(noteUUID, userId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/removeEditingNoteFlag?noteUUID=' +\n\t\t\t\tencodeURIComponent(noteUUID) + \"&userId=\" +\n\t\t\t\tencodeURIComponent(userId)).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"noteService::removeEditingNoteFlag error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while removing editing note flag\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"patientDetailStatusService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/patientDetailStatusService';\n\n\t\tservice.getStatus = function getStatus(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/getStatus?demographicNo=\" + encodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::getStatus error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.validateHC = function validateHC(healthCardNo, versionCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/validateHC?hin=\" + encodeURIComponent(healthCardNo) +\n\t\t\t\t\"&ver=\" + encodeURIComponent(versionCode),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::validateHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching health card validation info\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isUniqueHC = function isUniqueHC(healthCardNo, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + \"/isUniqueHC?hin=\" +\n\t\t\t\tencodeURIComponent(healthCardNo) + \"&demographicNo=\" +\n\t\t\t\tencodeURIComponent(demographicNo),\n\t\t\t\tJuno.Common.ServiceHelper.configHeaders()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"patientDetailStatusService::isUniqueHC error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while checking health card uniqueness\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// check the patients eligibility, returning a descriptive message about the result\n\t\tservice.getEligibilityInfo = function (demographicNo)\n\t\t{\n\t\t\tlet deferred = $q.defer();\n\t\t\t$http.get(\"../billing/CA/BC/ManageTeleplan.do?demographic=\" + demographicNo + \"&method=checkElig&rand=\" + Math.random()).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to perform eligibility check on demographic, \" + demographicNo + \" With error: \" + result);\n\t\t\t\t\t\tdeferred.reject(\"Failed to perform eligibility check on demographic, \" + demographicNo + \" With error: \" + result);\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"personaService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/persona';\n\n\t\tservice.getDashboardMenu = function getDashboardMenu()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/dashboardMenu',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardMenu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting the dashboard menu from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getNavBar = function getNavBar()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/navbar',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getNavBar error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting navbar from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAdminNav = function()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http(\n\t\t\t\t{\n\t\t\t\t\turl: service.apiPath + '/adminNav',\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.data.status === \"SUCCESS\")\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"personaService::getAdminNav error\", results.data.error);\n\t\t\t\t\t\tdeferred.reject(\"An error occured while getting admin nav from persona\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"personaService::getAdminNav error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting admin nav from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getPatientListConfig = function getPatientListConfig()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting getPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPatientListConfig = function setPatientListConfig(patientListConfig)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/patientList/config',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: patientListConfig,\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setPatientListConfig error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting setPatientListConfig from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setCurrentProgram = function setCurrentProgram(programId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath +\n\t\t\t\t\t'/setDefaultProgramInDomain?programId=' +\n\t\t\t\t\tencodeURIComponent(programId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::setCurrentProgram error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while setting current\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDashboardPreferences = function getDashboardPreferences()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/preferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata:\n\t\t\t\t{\n\t\t\t\t\ttype: 'dashboard'\n\t\t\t\t},\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::getDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting preferences from persona\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.updateDashboardPreferences = function updateDashboardPreferences(prefs)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/updatePreferences',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(prefs),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"personaService::updateDashboardPreferences error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while updating preferences\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"programService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.getPrograms = function getPrograms()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + 'program/programList',\n\t\t\t\tJuno.Common.ServiceHelper.configHeadersWithCache()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"error fetching program list:\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching program list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providerService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http, $q, junoHttp)\n\t{\n\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providerService';\n\n\t\tservice.getMe = function getMe()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/me', service.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getMe error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getProvider = function getProvider(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/provider/' + encodeURIComponent(id),\n\t\t\t\tservice.configHeaders).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getProvider error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while getting user data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchProviders = function searchProviders(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/providers/search',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::searchProviders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider list\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t//TODO move to its own service\n\t\tservice.getSettings = function getSettings()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/providerSettings/get',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content[0]);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t//TODO move to its own service\n\t\tservice.saveSettings = function saveSettings(providerNo, settings)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: '../ws/rs/providerSettings/' + providerNo + '/save',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(settings),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::saveSettings error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while saving settings\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getActiveTeams = function getActiveTeams()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/getActiveTeams',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.content);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providerService::getActiveTeams error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching provider teams\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRecentPatientList = function getRecentPatientList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/getRecentDemographicsViewed', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting RecentDemographicsViewed: \" + error);\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"providersService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/providers';\n\n\t\tservice.search = function search(searchText, searchMode, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchText: searchText,\n\t\t\t\tsearchMode: searchMode,\n\t\t\t\tpage: page,\n\t\t\t\tperPage: perPage\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getBySecurityRole = function getBySecurityRole(role)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\trole: role\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/bySecurityRole', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getBySecurityRole error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getByType = function getByProviderType(type)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\ttype: type\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/byType', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getByType error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAll = function getAll()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + '/all', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"providersService::getAll error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting providers data\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportingService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/reporting/';\n\n\t\tservice.getDemographicSetList = function getDemographicSetList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\n\t\t\tjunoHttp.get(service.apiPath + 'demographicSets/list', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportingService::demographicSets error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching demographicSets\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"resultsService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\t/*************************************************************/\n\t\t// Factory\n\t\t// @param {results_hash} Result hash from Clinicaid API\n\t\t// @param {meta_hash} Meta info hash from Clinicaid API\n\t\t/*************************************************************/\n\t\tservice.factory = function factory(results_hash, meta_hash)\n\t\t{\n\n\t\t\t/*************************************************************/\n\t\t\t// Initialize\n\t\t\t/*************************************************************/\n\t\t\tvar results_object = {\n\t\t\t\tdata: {},\n\t\t\t\tmeta: {},\n\t\t\t\thas_results: false,\n\t\t\t\terror_type: null\n\t\t\t};\n\n\t\t\tif(util.exists(results_hash) && !angular.equals(results_hash, {}))\n\t\t\t{\n\t\t\t\tresults_object.data = results_hash;\n\t\t\t\tif(!angular.equals(results_hash, {}) && !angular.equals(results_hash, []))\n\t\t\t\t{\n\t\t\t\t\tresults_object.has_results = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(util.exists(meta_hash))\n\t\t\t{\n\t\t\t\tresults_object.meta = meta_hash;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresults_object.meta = {};\n\t\t\t\tresults_object.meta.pagination = {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tper_page: 10,\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\ttotal_pages: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn results_object;\n\t\t};\n\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"securityService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/';\n\n\t\tservice.user = null;\n\n\t\tservice.getUser = function getUser()\n\t\t{\n\t\t\treturn service.user;\n\t\t};\n\n\t\tservice.setUser = function setUser(u)\n\t\t{\n\t\t\tservice.user = u;\n\t\t};\n\n\t\tservice.hasRight = function hasRight(objectName, privilege, demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar url = service.apiPath + 'persona/hasRight?objectName=' +\n\t\t\t\tencodeURIComponent(objectName) +\n\t\t\t\t'&privilege=' +\n\t\t\t\tencodeURIComponent(privilege) +\n\t\t\t\t'&demographicNo=' +\n\t\t\t\tencodeURIComponent(demographicNo);\n\n\t\t\t$http.get(url, service.configHeadersWithCache).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data.success);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRight error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access right\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasRights = function hasRights(listOfItems)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/hasRights',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(listOfItems),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::hasRights error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isAllowedAccessToPatientRecord = function isAllowedAccessToPatientRecord(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + 'persona/isAllowedAccessToPatientRecord',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"demographicNo\": demographicNo\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"securityService::isAllowedAccessToPatientRecord error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occured while fetching access rights\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.hasOneOfPermissions = function hasOneOfPermissions(permission_array)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\tservice.hasPermission = function hasPermission(permission)\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"staticDataService\", [\n\tfunction()\n\t{\n\t\tvar service = {};\n\n\t\tservice.getGenders = function getGenders()\n\t\t{\n\t\t\tvar genders = [];\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"M\",\n\t\t\t\t\"label\": \"Male\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"F\",\n\t\t\t\t\"label\": \"Female\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"T\",\n\t\t\t\t\"label\": \"Transgender\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"O\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\tgenders.push(\n\t\t\t{\n\t\t\t\t\"value\": \"U\",\n\t\t\t\t\"label\": \"Undefined\"\n\t\t\t});\n\t\t\treturn genders;\n\t\t};\n\n\t\tservice.getTitles = function getTitles()\n\t\t{\n\t\t\tvar titles = [];\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MISS\",\n\t\t\t\t\"label\": \"MISS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MRS\",\n\t\t\t\t\"label\": \"MRS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MS\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MSSR\",\n\t\t\t\t\"label\": \"MSSR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DR\",\n\t\t\t\t\"label\": \"DR\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PROF\",\n\t\t\t\t\"label\": \"PROF\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REEVE\",\n\t\t\t\t\"label\": \"REEVE\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"REV\",\n\t\t\t\t\"label\": \"REV\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RT_HON\",\n\t\t\t\t\"label\": \"RT_HON\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SEN\",\n\t\t\t\t\"label\": \"SEN\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SGT\",\n\t\t\t\t\"label\": \"SGT\"\n\t\t\t});\n\t\t\ttitles.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SR\"\n\t\t\t});\n\t\t\treturn titles;\n\t\t};\n\n\t\tservice.getCanadaProvinces = function getCanadaProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getProvinces = function getProvinces()\n\t\t{\n\t\t\tvar provinces = [];\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AB\",\n\t\t\t\t\"label\": \"AB-Alberta\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BC\",\n\t\t\t\t\"label\": \"BC-British Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MB\",\n\t\t\t\t\"label\": \"MB-Manitoba\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NB\",\n\t\t\t\t\"label\": \"NB-New Brunswick\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NL-Newfoundland Labrador\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NT\",\n\t\t\t\t\"label\": \"NT-Northwest Territory\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NS\",\n\t\t\t\t\"label\": \"NS-Nova Scotia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ON\",\n\t\t\t\t\"label\": \"ON-Ontario\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PE-Prince Edward Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QC\",\n\t\t\t\t\"label\": \"QC-Quebec\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SK-Saskatchewan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"YT-Yukon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"US resident\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AK\",\n\t\t\t\t\"label\": \"US-AK-Alaska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AL\",\n\t\t\t\t\"label\": \"US-AL-Alabama\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AR\",\n\t\t\t\t\"label\": \"US-AR-Arkansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-AZ\",\n\t\t\t\t\"label\": \"US-AZ-Arizona\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CA\",\n\t\t\t\t\"label\": \"US-CA-California\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CO\",\n\t\t\t\t\"label\": \"US-CO-Colorado\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CT\",\n\t\t\t\t\"label\": \"US-CT-Connecticut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-CZ\",\n\t\t\t\t\"label\": \"US-CZ-Canal Zone\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DC\",\n\t\t\t\t\"label\": \"US-DC-District Of Columbia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-DE\",\n\t\t\t\t\"label\": \"US-DE-Delaware\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-FL\",\n\t\t\t\t\"label\": \"US-FL-Florida\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GA\",\n\t\t\t\t\"label\": \"US-GA-Georgia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-GU\",\n\t\t\t\t\"label\": \"US-GU-Guam\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-HI\",\n\t\t\t\t\"label\": \"US-HI-Hawaii\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IA\",\n\t\t\t\t\"label\": \"US-IA-Iowa\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ID\",\n\t\t\t\t\"label\": \"US-ID-Idaho\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IL\",\n\t\t\t\t\"label\": \"US-IL-Illinois\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-IN\",\n\t\t\t\t\"label\": \"US-IN-Indiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KS\",\n\t\t\t\t\"label\": \"US-KS-Kansas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-KY\",\n\t\t\t\t\"label\": \"US-KY-Kentucky\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-LA\",\n\t\t\t\t\"label\": \"US-LA-Louisiana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MA\",\n\t\t\t\t\"label\": \"US-MA-Massachusetts\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MD\",\n\t\t\t\t\"label\": \"US-MD-Maryland\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ME\",\n\t\t\t\t\"label\": \"US-ME-Maine\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MI\",\n\t\t\t\t\"label\": \"US-MI-Michigan\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MN\",\n\t\t\t\t\"label\": \"US-MN-Minnesota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MO\",\n\t\t\t\t\"label\": \"US-MO-Missouri\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MS\",\n\t\t\t\t\"label\": \"US-MS-Mississippi\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-MT\",\n\t\t\t\t\"label\": \"US-MT-Montana\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NC\",\n\t\t\t\t\"label\": \"US-NC-North Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-ND\",\n\t\t\t\t\"label\": \"US-ND-North Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NE\",\n\t\t\t\t\"label\": \"US-NE-Nebraska\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NH\",\n\t\t\t\t\"label\": \"US-NH-New Hampshire\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NJ\",\n\t\t\t\t\"label\": \"US-NJ-New Jersey\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NM\",\n\t\t\t\t\"label\": \"US-NM-New Mexico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NU\",\n\t\t\t\t\"label\": \"US-NU-Nunavut\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NV\",\n\t\t\t\t\"label\": \"US-NV-Nevada\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-NY\",\n\t\t\t\t\"label\": \"US-NY-New York\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OH\",\n\t\t\t\t\"label\": \"US-OH-Ohio\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OK\",\n\t\t\t\t\"label\": \"US-OK-Oklahoma\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-OR\",\n\t\t\t\t\"label\": \"US-OR-Oregon\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PA\",\n\t\t\t\t\"label\": \"US-PA-Pennsylvania\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-PR\",\n\t\t\t\t\"label\": \"US-PR-Puerto Rico\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-RI\",\n\t\t\t\t\"label\": \"US-RI-Rhode Island\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SC\",\n\t\t\t\t\"label\": \"US-SC-South Carolina\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-SD\",\n\t\t\t\t\"label\": \"US-SD-South Dakota\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TN\",\n\t\t\t\t\"label\": \"US-TN-Tennessee\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-TX\",\n\t\t\t\t\"label\": \"US-TX-Texas\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-UT\",\n\t\t\t\t\"label\": \"US-UT-Utah\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VA\",\n\t\t\t\t\"label\": \"US-VA-Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VI\",\n\t\t\t\t\"label\": \"US-VI-Virgin Islands\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-VT\",\n\t\t\t\t\"label\": \"US-VT-Vermont\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WA\",\n\t\t\t\t\"label\": \"US-WA-Washington\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WI\",\n\t\t\t\t\"label\": \"US-WI-Wisconsin\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WV\",\n\t\t\t\t\"label\": \"US-WV-West Virginia\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US-WY\",\n\t\t\t\t\"label\": \"US-WY-Wyoming\"\n\t\t\t});\n\t\t\tprovinces.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OT\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn provinces;\n\t\t};\n\n\t\tservice.getCountries = function getCountries()\n\t\t{\n\t\t\tvar countries = [];\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AF\",\n\t\t\t\t\"label\": \"AFGHANISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AX\",\n\t\t\t\t\"label\": \"ALAND ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AL\",\n\t\t\t\t\"label\": \"ALBANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DZ\",\n\t\t\t\t\"label\": \"ALGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AS\",\n\t\t\t\t\"label\": \"AMERICAN SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AD\",\n\t\t\t\t\"label\": \"ANDORRA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AO\",\n\t\t\t\t\"label\": \"ANGOLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AI\",\n\t\t\t\t\"label\": \"ANGUILLA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AQ\",\n\t\t\t\t\"label\": \"ANTARCTICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AG\",\n\t\t\t\t\"label\": \"ANTIGUA AND BARBUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AR\",\n\t\t\t\t\"label\": \"ARGENTINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AM\",\n\t\t\t\t\"label\": \"ARMENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AW\",\n\t\t\t\t\"label\": \"ARUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AU\",\n\t\t\t\t\"label\": \"AUSTRALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AT\",\n\t\t\t\t\"label\": \"AUSTRIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AZ\",\n\t\t\t\t\"label\": \"AZERBAIJAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BS\",\n\t\t\t\t\"label\": \"BAHAMAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BH\",\n\t\t\t\t\"label\": \"BAHRAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BD\",\n\t\t\t\t\"label\": \"BANGLADESH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BB\",\n\t\t\t\t\"label\": \"BARBADOS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BY\",\n\t\t\t\t\"label\": \"BELARUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BE\",\n\t\t\t\t\"label\": \"BELGIUM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BZ\",\n\t\t\t\t\"label\": \"BELIZE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BJ\",\n\t\t\t\t\"label\": \"BENIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BM\",\n\t\t\t\t\"label\": \"BERMUDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BT\",\n\t\t\t\t\"label\": \"BHUTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BO\",\n\t\t\t\t\"label\": \"BOLIVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BA\",\n\t\t\t\t\"label\": \"BOSNIA AND HERZEGOVINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BW\",\n\t\t\t\t\"label\": \"BOTSWANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BV\",\n\t\t\t\t\"label\": \"BOUVET ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BR\",\n\t\t\t\t\"label\": \"BRAZIL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IO\",\n\t\t\t\t\"label\": \"BRITISH INDIAN OCEAN TERRITORY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BN\",\n\t\t\t\t\"label\": \"BRUNEI DARUSSALAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BG\",\n\t\t\t\t\"label\": \"BULGARIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BF\",\n\t\t\t\t\"label\": \"BURKINA FASO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BI\",\n\t\t\t\t\"label\": \"BURUNDI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KH\",\n\t\t\t\t\"label\": \"CAMBODIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CM\",\n\t\t\t\t\"label\": \"CAMEROON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CA\",\n\t\t\t\t\"label\": \"CANADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CV\",\n\t\t\t\t\"label\": \"CAPE VERDE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KY\",\n\t\t\t\t\"label\": \"CAYMAN ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CF\",\n\t\t\t\t\"label\": \"CENTRAL AFRICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TD\",\n\t\t\t\t\"label\": \"CHAD\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CL\",\n\t\t\t\t\"label\": \"CHILE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CN\",\n\t\t\t\t\"label\": \"CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CX\",\n\t\t\t\t\"label\": \"CHRISTMAS ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CC\",\n\t\t\t\t\"label\": \"COCOS (KEELING) ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CO\",\n\t\t\t\t\"label\": \"COLOMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KM\",\n\t\t\t\t\"label\": \"COMOROS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CG\",\n\t\t\t\t\"label\": \"CONGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CD\",\n\t\t\t\t\"label\": \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CK\",\n\t\t\t\t\"label\": \"COOK ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CR\",\n\t\t\t\t\"label\": \"COSTA RICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CI\",\n\t\t\t\t\"label\": \"CÃ¯TE D IVOIRE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HR\",\n\t\t\t\t\"label\": \"CROATIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CU\",\n\t\t\t\t\"label\": \"CUBA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CY\",\n\t\t\t\t\"label\": \"CYPRUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CZ\",\n\t\t\t\t\"label\": \"CZECH REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DK\",\n\t\t\t\t\"label\": \"DENMARK\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DJ\",\n\t\t\t\t\"label\": \"DJIBOUTI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DM\",\n\t\t\t\t\"label\": \"DOMINICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DO\",\n\t\t\t\t\"label\": \"DOMINICAN REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EC\",\n\t\t\t\t\"label\": \"ECUADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EG\",\n\t\t\t\t\"label\": \"EGYPT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SV\",\n\t\t\t\t\"label\": \"EL SALVADOR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GQ\",\n\t\t\t\t\"label\": \"EQUATORIAL GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ER\",\n\t\t\t\t\"label\": \"ERITREA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EE\",\n\t\t\t\t\"label\": \"ESTONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ET\",\n\t\t\t\t\"label\": \"ETHIOPIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FK\",\n\t\t\t\t\"label\": \"FALKLAND ISLANDS (MALVINAS)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FO\",\n\t\t\t\t\"label\": \"FAROE ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FJ\",\n\t\t\t\t\"label\": \"FIJI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\"label\": \"FINLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FR\",\n\t\t\t\t\"label\": \"FRANCE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GF\",\n\t\t\t\t\"label\": \"FRENCH GUIANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PF\",\n\t\t\t\t\"label\": \"FRENCH POLYNESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TF\",\n\t\t\t\t\"label\": \"FRENCH SOUTHERN TERRITORIES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GA\",\n\t\t\t\t\"label\": \"GABON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GM\",\n\t\t\t\t\"label\": \"GAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GE\",\n\t\t\t\t\"label\": \"GEORGIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\"label\": \"GERMANY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GH\",\n\t\t\t\t\"label\": \"GHANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GI\",\n\t\t\t\t\"label\": \"GIBRALTAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GR\",\n\t\t\t\t\"label\": \"GREECE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GL\",\n\t\t\t\t\"label\": \"GREENLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GD\",\n\t\t\t\t\"label\": \"GRENADA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GP\",\n\t\t\t\t\"label\": \"GUADELOUPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GU\",\n\t\t\t\t\"label\": \"GUAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GT\",\n\t\t\t\t\"label\": \"GUATEMALA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GG\",\n\t\t\t\t\"label\": \"GUERNSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GN\",\n\t\t\t\t\"label\": \"GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GW\",\n\t\t\t\t\"label\": \"GUINEA-BISSAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GY\",\n\t\t\t\t\"label\": \"GUYANA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HT\",\n\t\t\t\t\"label\": \"HAITI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HM\",\n\t\t\t\t\"label\": \"HEARD ISLAND AND MCDONALD ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"HOLY SEE (VATICAN CITY STATE)\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HN\",\n\t\t\t\t\"label\": \"HONDURAS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HK\",\n\t\t\t\t\"label\": \"HONG KONG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"HU\",\n\t\t\t\t\"label\": \"HUNGARY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IS\",\n\t\t\t\t\"label\": \"ICELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\"label\": \"INDIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ID\",\n\t\t\t\t\"label\": \"INDONESIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IR\",\n\t\t\t\t\"label\": \"IRAN, ISLAMIC REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IQ\",\n\t\t\t\t\"label\": \"IRAQ\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IE\",\n\t\t\t\t\"label\": \"IRELAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IM\",\n\t\t\t\t\"label\": \"ISLE OF MAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IL\",\n\t\t\t\t\"label\": \"ISRAEL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"IT\",\n\t\t\t\t\"label\": \"ITALY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JM\",\n\t\t\t\t\"label\": \"JAMAICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JP\",\n\t\t\t\t\"label\": \"JAPAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JE\",\n\t\t\t\t\"label\": \"JERSEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"JO\",\n\t\t\t\t\"label\": \"JORDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KZ\",\n\t\t\t\t\"label\": \"KAZAKHSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KE\",\n\t\t\t\t\"label\": \"KENYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KI\",\n\t\t\t\t\"label\": \"KIRIBATI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KP\",\n\t\t\t\t\"label\": \"KOREA, DEMOCRATIC PEOPLES REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KR\",\n\t\t\t\t\"label\": \"KOREA, REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KW\",\n\t\t\t\t\"label\": \"KUWAIT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KG\",\n\t\t\t\t\"label\": \"KYRGYZSTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LA\",\n\t\t\t\t\"label\": \"LAO PEOPLES DEMOCRATIC REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LV\",\n\t\t\t\t\"label\": \"LATVIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LB\",\n\t\t\t\t\"label\": \"LEBANON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LS\",\n\t\t\t\t\"label\": \"LESOTHO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LR\",\n\t\t\t\t\"label\": \"LIBERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LY\",\n\t\t\t\t\"label\": \"LIBYAN ARAB JAMAHIRIYA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LI\",\n\t\t\t\t\"label\": \"LIECHTENSTEIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LT\",\n\t\t\t\t\"label\": \"LITHUANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LU\",\n\t\t\t\t\"label\": \"LUXEMBOURG\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\"label\": \"MACAO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MK\",\n\t\t\t\t\"label\": \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MG\",\n\t\t\t\t\"label\": \"MADAGASCAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MW\",\n\t\t\t\t\"label\": \"MALAWI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MY\",\n\t\t\t\t\"label\": \"MALAYSIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MV\",\n\t\t\t\t\"label\": \"MALDIVES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ML\",\n\t\t\t\t\"label\": \"MALI\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MT\",\n\t\t\t\t\"label\": \"MALTA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MH\",\n\t\t\t\t\"label\": \"MARSHALL ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MQ\",\n\t\t\t\t\"label\": \"MARTINIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MR\",\n\t\t\t\t\"label\": \"MAURITANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MU\",\n\t\t\t\t\"label\": \"MAURITIUS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YT\",\n\t\t\t\t\"label\": \"MAYOTTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MX\",\n\t\t\t\t\"label\": \"MEXICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"FM\",\n\t\t\t\t\"label\": \"MICRONESIA, FEDERATED STATES OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MD\",\n\t\t\t\t\"label\": \"MOLDOVA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MC\",\n\t\t\t\t\"label\": \"MONACO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MN\",\n\t\t\t\t\"label\": \"MONGOLIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ME\",\n\t\t\t\t\"label\": \"MONTENEGRO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MS\",\n\t\t\t\t\"label\": \"MONTSERRAT\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MA\",\n\t\t\t\t\"label\": \"MOROCCO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MZ\",\n\t\t\t\t\"label\": \"MOZAMBIQUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MM\",\n\t\t\t\t\"label\": \"MYANMAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NA\",\n\t\t\t\t\"label\": \"NAMIBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\"label\": \"NAURU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NP\",\n\t\t\t\t\"label\": \"NEPAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NL\",\n\t\t\t\t\"label\": \"NETHERLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AN\",\n\t\t\t\t\"label\": \"NETHERLANDS ANTILLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NC\",\n\t\t\t\t\"label\": \"NEW CALEDONIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NZ\",\n\t\t\t\t\"label\": \"NEW ZEALAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NI\",\n\t\t\t\t\"label\": \"NICARAGUA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NE\",\n\t\t\t\t\"label\": \"NIGER\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NG\",\n\t\t\t\t\"label\": \"NIGERIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NU\",\n\t\t\t\t\"label\": \"NIUE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NF\",\n\t\t\t\t\"label\": \"NORFOLK ISLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MP\",\n\t\t\t\t\"label\": \"NORTHERN MARIANA ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"NO\",\n\t\t\t\t\"label\": \"NORWAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"OM\",\n\t\t\t\t\"label\": \"OMAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PK\",\n\t\t\t\t\"label\": \"PAKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PW\",\n\t\t\t\t\"label\": \"PALAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PS\",\n\t\t\t\t\"label\": \"PALESTINIAN TERRITORY, OCCUPIED\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PA\",\n\t\t\t\t\"label\": \"PANAMA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PG\",\n\t\t\t\t\"label\": \"PAPUA NEW GUINEA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PY\",\n\t\t\t\t\"label\": \"PARAGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PE\",\n\t\t\t\t\"label\": \"PERU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PH\",\n\t\t\t\t\"label\": \"PHILIPPINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PN\",\n\t\t\t\t\"label\": \"PITCAIRN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PL\",\n\t\t\t\t\"label\": \"POLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PT\",\n\t\t\t\t\"label\": \"PORTUGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PR\",\n\t\t\t\t\"label\": \"PUERTO RICO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"QA\",\n\t\t\t\t\"label\": \"QATAR\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RE\",\n\t\t\t\t\"label\": \"RÆUNION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\"label\": \"ROMANIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RU\",\n\t\t\t\t\"label\": \"RUSSIAN FEDERATION\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RW\",\n\t\t\t\t\"label\": \"RWANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"BL\",\n\t\t\t\t\"label\": \"SAINT BARTHÆLEMY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SH\",\n\t\t\t\t\"label\": \"SAINT HELENA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"KN\",\n\t\t\t\t\"label\": \"SAINT KITTS AND NEVIS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LC\",\n\t\t\t\t\"label\": \"SAINT LUCIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"MF\",\n\t\t\t\t\"label\": \"SAINT MARTIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"PM\",\n\t\t\t\t\"label\": \"SAINT PIERRE AND MIQUELON\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VC\",\n\t\t\t\t\"label\": \"SAINT VINCENT AND THE GRENADINES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WS\",\n\t\t\t\t\"label\": \"SAMOA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SM\",\n\t\t\t\t\"label\": \"SAN MARINO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ST\",\n\t\t\t\t\"label\": \"SAO TOME AND PRINCIPE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SA\",\n\t\t\t\t\"label\": \"SAUDI ARABIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SN\",\n\t\t\t\t\"label\": \"SENEGAL\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"RS\",\n\t\t\t\t\"label\": \"SERBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SC\",\n\t\t\t\t\"label\": \"SEYCHELLES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SL\",\n\t\t\t\t\"label\": \"SIERRA LEONE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SG\",\n\t\t\t\t\"label\": \"SINGAPORE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SK\",\n\t\t\t\t\"label\": \"SLOVAKIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SI\",\n\t\t\t\t\"label\": \"SLOVENIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SB\",\n\t\t\t\t\"label\": \"SOLOMON ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SO\",\n\t\t\t\t\"label\": \"SOMALIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZA\",\n\t\t\t\t\"label\": \"SOUTH AFRICA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GS\",\n\t\t\t\t\"label\": \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ES\",\n\t\t\t\t\"label\": \"SPAIN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"LK\",\n\t\t\t\t\"label\": \"SRI LANKA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SD\",\n\t\t\t\t\"label\": \"SUDAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SR\",\n\t\t\t\t\"label\": \"SURINAME\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SJ\",\n\t\t\t\t\"label\": \"SVALBARD AND JAN MAYEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SZ\",\n\t\t\t\t\"label\": \"SWAZILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SE\",\n\t\t\t\t\"label\": \"SWEDEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"CH\",\n\t\t\t\t\"label\": \"SWITZERLAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"SY\",\n\t\t\t\t\"label\": \"SYRIAN ARAB REPUBLIC\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TW\",\n\t\t\t\t\"label\": \"TAIWAN, PROVINCE OF CHINA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TJ\",\n\t\t\t\t\"label\": \"TAJIKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TZ\",\n\t\t\t\t\"label\": \"TANZANIA, UNITED REPUBLIC OF\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TH\",\n\t\t\t\t\"label\": \"THAILAND\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TL\",\n\t\t\t\t\"label\": \"TIMOR-LESTE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TG\",\n\t\t\t\t\"label\": \"TOGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TK\",\n\t\t\t\t\"label\": \"TOKELAU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TO\",\n\t\t\t\t\"label\": \"TONGA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TT\",\n\t\t\t\t\"label\": \"TRINIDAD AND TOBAGO\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TN\",\n\t\t\t\t\"label\": \"TUNISIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TR\",\n\t\t\t\t\"label\": \"TURKEY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TM\",\n\t\t\t\t\"label\": \"TURKMENISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TC\",\n\t\t\t\t\"label\": \"TURKS AND CAICOS ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"TV\",\n\t\t\t\t\"label\": \"TUVALU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UG\",\n\t\t\t\t\"label\": \"UGANDA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UA\",\n\t\t\t\t\"label\": \"UKRAINE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"AE\",\n\t\t\t\t\"label\": \"UNITED ARAB EMIRATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"GB\",\n\t\t\t\t\"label\": \"UNITED KINGDOM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"US\",\n\t\t\t\t\"label\": \"UNITED STATES\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UM\",\n\t\t\t\t\"label\": \"UNITED STATES MINOR OUTLYING ISLANDS\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UY\",\n\t\t\t\t\"label\": \"URUGUAY\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"UZ\",\n\t\t\t\t\"label\": \"UZBEKISTAN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VU\",\n\t\t\t\t\"label\": \"VANUATU\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VA\",\n\t\t\t\t\"label\": \"VATICAN CITY STATE\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VE\",\n\t\t\t\t\"label\": \"VENEZUELA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VN\",\n\t\t\t\t\"label\": \"VIET NAM\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VG\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, BRITISH\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"VI\",\n\t\t\t\t\"label\": \"VIRGIN ISLANDS, U.S.\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"WF\",\n\t\t\t\t\"label\": \"WALLIS AND FUTUNA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"EH\",\n\t\t\t\t\"label\": \"WESTERN SAHARA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"YE\",\n\t\t\t\t\"label\": \"YEMEN\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZM\",\n\t\t\t\t\"label\": \"ZAMBIA\"\n\t\t\t});\n\t\t\tcountries.push(\n\t\t\t{\n\t\t\t\t\"value\": \"ZW\",\n\t\t\t\t\"label\": \"ZIMBABWE\"\n\t\t\t});\n\t\t\treturn countries;\n\t\t};\n\n\t\tservice.getEngFre = function getEngFre()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Other\",\n\t\t\t\t\"label\": \"Other\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getSpokenLanguages = function getSpokenLanguages()\n\t\t{\n\t\t\tvar langs = [];\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"English\",\n\t\t\t\t\"label\": \"English\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"French\",\n\t\t\t\t\"label\": \"French\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Abkhazian\",\n\t\t\t\t\"label\": \"Abkhazian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Achinese\",\n\t\t\t\t\"label\": \"Achinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Acoli\",\n\t\t\t\t\"label\": \"Acoli\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adangme\",\n\t\t\t\t\"label\": \"Adangme\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Adyghe\",\n\t\t\t\t\"label\": \"Adyghe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afar\",\n\t\t\t\t\"label\": \"Afar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrihili\",\n\t\t\t\t\"label\": \"Afrihili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afrikaans\",\n\t\t\t\t\"label\": \"Afrikaans\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Afro-Asiatic (Other)\",\n\t\t\t\t\"label\": \"Afro-Asiatic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ainu\",\n\t\t\t\t\"label\": \"Ainu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akan\",\n\t\t\t\t\"label\": \"Akan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Akkadian\",\n\t\t\t\t\"label\": \"Akkadian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Albanian\",\n\t\t\t\t\"label\": \"Albanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aleut\",\n\t\t\t\t\"label\": \"Aleut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Algonquian Languages\",\n\t\t\t\t\"label\": \"Algonquian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Altaic (Other)\",\n\t\t\t\t\"label\": \"Altaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Amharic\",\n\t\t\t\t\"label\": \"Amharic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Angika\",\n\t\t\t\t\"label\": \"Angika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Apache Languages\",\n\t\t\t\t\"label\": \"Apache Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arabic\",\n\t\t\t\t\"label\": \"Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aramaic\",\n\t\t\t\t\"label\": \"Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arapaho\",\n\t\t\t\t\"label\": \"Arapaho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Araucanian\",\n\t\t\t\t\"label\": \"Araucanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Arawak\",\n\t\t\t\t\"label\": \"Arawak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Argonese\",\n\t\t\t\t\"label\": \"Argonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Armenian\",\n\t\t\t\t\"label\": \"Armenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aromanian\",\n\t\t\t\t\"label\": \"Aromanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Artificial (Other)\",\n\t\t\t\t\"label\": \"Artificial\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Assamese\",\n\t\t\t\t\"label\": \"Assamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Asturian\",\n\t\t\t\t\"label\": \"Asturian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Athapascan Languages\",\n\t\t\t\t\"label\": \"Athapascan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Australian Languages\",\n\t\t\t\t\"label\": \"Australian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Austronesian (Other)\",\n\t\t\t\t\"label\": \"Austronesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avaric\",\n\t\t\t\t\"label\": \"Avaric\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Avestan\",\n\t\t\t\t\"label\": \"Avestan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Awadhi\",\n\t\t\t\t\"label\": \"Awadhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Aymara\",\n\t\t\t\t\"label\": \"Aymara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Azerbaijani\",\n\t\t\t\t\"label\": \"Azerbaijani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Balinese\",\n\t\t\t\t\"label\": \"Balinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baltic (Other)\",\n\t\t\t\t\"label\": \"Baltic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Baluchi\",\n\t\t\t\t\"label\": \"Baluchi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bambara\",\n\t\t\t\t\"label\": \"Bambara\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bamileke Languages\",\n\t\t\t\t\"label\": \"Bamileke Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Banda\",\n\t\t\t\t\"label\": \"Banda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bantu (Other)\",\n\t\t\t\t\"label\": \"Bantu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basa\",\n\t\t\t\t\"label\": \"Basa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bashkir\",\n\t\t\t\t\"label\": \"Bashkir\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Basque\",\n\t\t\t\t\"label\": \"Basque\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Batak (Indonesia)\",\n\t\t\t\t\"label\": \"Batak (Indonesia)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Beja\",\n\t\t\t\t\"label\": \"Beja\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Belarusian\",\n\t\t\t\t\"label\": \"Belarusian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bemba\",\n\t\t\t\t\"label\": \"Bemba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bengali\",\n\t\t\t\t\"label\": \"Bengali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Berber (Other)\",\n\t\t\t\t\"label\": \"Berber\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bhojpuri\",\n\t\t\t\t\"label\": \"Bhojpuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bihari\",\n\t\t\t\t\"label\": \"Bihari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bikol\",\n\t\t\t\t\"label\": \"Bikol\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bini\",\n\t\t\t\t\"label\": \"Bini\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bislama\",\n\t\t\t\t\"label\": \"Bislama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Blin\",\n\t\t\t\t\"label\": \"Blin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bokmal, Norwegian\",\n\t\t\t\t\"label\": \"Bokmal, Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bosnian\",\n\t\t\t\t\"label\": \"Bosnian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Braj\",\n\t\t\t\t\"label\": \"Braj\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Breton\",\n\t\t\t\t\"label\": \"Breton\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buginese\",\n\t\t\t\t\"label\": \"Buginese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Bulgarian\",\n\t\t\t\t\"label\": \"Bulgarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Buriat\",\n\t\t\t\t\"label\": \"Buriat\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Burmese\",\n\t\t\t\t\"label\": \"Burmese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caddo\",\n\t\t\t\t\"label\": \"Caddo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cantonese\",\n\t\t\t\t\"label\": \"Cantonese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Carib\",\n\t\t\t\t\"label\": \"Carib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Catalan\",\n\t\t\t\t\"label\": \"Catalan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Caucasian (Other)\",\n\t\t\t\t\"label\": \"Caucasian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cebuano\",\n\t\t\t\t\"label\": \"Cebuano\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Celtic (Other)\",\n\t\t\t\t\"label\": \"Celtic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Central American Indian (Other)\",\n\t\t\t\t\"label\": \"Central American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chagatai\",\n\t\t\t\t\"label\": \"Chagatai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamic Languages\",\n\t\t\t\t\"label\": \"Chamic Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chamorro\",\n\t\t\t\t\"label\": \"Chamorro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chechen\",\n\t\t\t\t\"label\": \"Chechen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cherokee\",\n\t\t\t\t\"label\": \"Cherokee\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cheyenne\",\n\t\t\t\t\"label\": \"Cheyenne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chibcha\",\n\t\t\t\t\"label\": \"Chibcha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chichewa\",\n\t\t\t\t\"label\": \"Chichewa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinese\",\n\t\t\t\t\"label\": \"Chinese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chinook Jargon\",\n\t\t\t\t\"label\": \"Chinook Jargon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chipewyan\",\n\t\t\t\t\"label\": \"Chipewyan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Choctaw\",\n\t\t\t\t\"label\": \"Choctaw\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuukese\",\n\t\t\t\t\"label\": \"Chuukese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Chuvash\",\n\t\t\t\t\"label\": \"Chuvash\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Classical Nepal Bhasa\",\n\t\t\t\t\"label\": \"Classical Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Coptic\",\n\t\t\t\t\"label\": \"Coptic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cornish\",\n\t\t\t\t\"label\": \"Cornish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Corsican\",\n\t\t\t\t\"label\": \"Corsican\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cree\",\n\t\t\t\t\"label\": \"Cree\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creek\",\n\t\t\t\t\"label\": \"Creek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, English-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, ENG-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, French-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, FRE-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Creoles And Pidgins, Portuguese-Based (Other)\",\n\t\t\t\t\"label\": \"Creoles & Pidgins, POR-Based\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Crimean Tatar\",\n\t\t\t\t\"label\": \"Crimean Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Croatian\",\n\t\t\t\t\"label\": \"Croatian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Cushitic (Other)\",\n\t\t\t\t\"label\": \"Cushitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Czech\",\n\t\t\t\t\"label\": \"Czech\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dakota\",\n\t\t\t\t\"label\": \"Dakota\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Danish\",\n\t\t\t\t\"label\": \"Danish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dargwa\",\n\t\t\t\t\"label\": \"Dargwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dayak\",\n\t\t\t\t\"label\": \"Dayak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Delaware\",\n\t\t\t\t\"label\": \"Delaware\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dhivehi\",\n\t\t\t\t\"label\": \"Dhivehi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dinka\",\n\t\t\t\t\"label\": \"Dinka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogri\",\n\t\t\t\t\"label\": \"Dogri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dogrib\",\n\t\t\t\t\"label\": \"Dogrib\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dravidian (Other)\",\n\t\t\t\t\"label\": \"Dravidian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Duala\",\n\t\t\t\t\"label\": \"Duala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dutch\",\n\t\t\t\t\"label\": \"Dutch\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dyula\",\n\t\t\t\t\"label\": \"Dyula\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Dzongkha\",\n\t\t\t\t\"label\": \"Dzongkha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Eastern Frisian\",\n\t\t\t\t\"label\": \"Eastern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Efik\",\n\t\t\t\t\"label\": \"Efik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Egyptian (Ancient)\",\n\t\t\t\t\"label\": \"Egyptian (Ancient)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ekajuk\",\n\t\t\t\t\"label\": \"Ekajuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Elamite\",\n\t\t\t\t\"label\": \"Elamite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Erzya\",\n\t\t\t\t\"label\": \"Erzya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Esperanto\",\n\t\t\t\t\"label\": \"Esperanto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Estonian\",\n\t\t\t\t\"label\": \"Estonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewe\",\n\t\t\t\t\"label\": \"Ewe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ewondo\",\n\t\t\t\t\"label\": \"Ewondo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fang\",\n\t\t\t\t\"label\": \"Fang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fanti\",\n\t\t\t\t\"label\": \"Fanti\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Faroese\",\n\t\t\t\t\"label\": \"Faroese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fijian\",\n\t\t\t\t\"label\": \"Fijian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Filipino; Pilipino\",\n\t\t\t\t\"label\": \"Filipino; Pilipino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finnish\",\n\t\t\t\t\"label\": \"Finnish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Finno-Ugrian (Other)\",\n\t\t\t\t\"label\": \"Finno-Ugrian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fon\",\n\t\t\t\t\"label\": \"Fon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Friulian\",\n\t\t\t\t\"label\": \"Friulian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Fulah\",\n\t\t\t\t\"label\": \"Fulah\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ga\",\n\t\t\t\t\"label\": \"Ga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gaelic\",\n\t\t\t\t\"label\": \"Gaelic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gallegan\",\n\t\t\t\t\"label\": \"Gallegan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ganda\",\n\t\t\t\t\"label\": \"Ganda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gayo\",\n\t\t\t\t\"label\": \"Gayo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gbaya\",\n\t\t\t\t\"label\": \"Gbaya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Geez\",\n\t\t\t\t\"label\": \"Geez\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Georgian\",\n\t\t\t\t\"label\": \"Georgian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"German\",\n\t\t\t\t\"label\": \"German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Germanic (Other)\",\n\t\t\t\t\"label\": \"Germanic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gikuyu\",\n\t\t\t\t\"label\": \"Gikuyu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gilbertese\",\n\t\t\t\t\"label\": \"Gilbertese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gondi\",\n\t\t\t\t\"label\": \"Gondi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gorontalo\",\n\t\t\t\t\"label\": \"Gorontalo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gothic\",\n\t\t\t\t\"label\": \"Gothic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Grebo\",\n\t\t\t\t\"label\": \"Grebo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Greek, Modern (1453-)\",\n\t\t\t\t\"label\": \"Greek, Modern (1453-)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Guarani\",\n\t\t\t\t\"label\": \"Guarani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gujarati\",\n\t\t\t\t\"label\": \"Gujarati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Gwich'in\",\n\t\t\t\t\"label\": \"Gwich'in\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haida\",\n\t\t\t\t\"label\": \"Haida\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Haitian Creole\",\n\t\t\t\t\"label\": \"Haitian Creole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hausa\",\n\t\t\t\t\"label\": \"Hausa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hawaiian\",\n\t\t\t\t\"label\": \"Hawaiian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hebrew\",\n\t\t\t\t\"label\": \"Hebrew\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Herero\",\n\t\t\t\t\"label\": \"Herero\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiligaynon\",\n\t\t\t\t\"label\": \"Hiligaynon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Himachali\",\n\t\t\t\t\"label\": \"Himachali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hindi\",\n\t\t\t\t\"label\": \"Hindi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hiri Motu\",\n\t\t\t\t\"label\": \"Hiri Motu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hittite\",\n\t\t\t\t\"label\": \"Hittite\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hmong\",\n\t\t\t\t\"label\": \"Hmong\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hungarian\",\n\t\t\t\t\"label\": \"Hungarian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Hupa\",\n\t\t\t\t\"label\": \"Hupa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iban\",\n\t\t\t\t\"label\": \"Iban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Icelandic\",\n\t\t\t\t\"label\": \"Icelandic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ido\",\n\t\t\t\t\"label\": \"Ido\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Igbo\",\n\t\t\t\t\"label\": \"Igbo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ijo\",\n\t\t\t\t\"label\": \"Ijo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iloko\",\n\t\t\t\t\"label\": \"Iloko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inari Sami\",\n\t\t\t\t\"label\": \"Inari Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indic (Other)\",\n\t\t\t\t\"label\": \"Indic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indo-European (Other)\",\n\t\t\t\t\"label\": \"Indo-European\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Indonesian\",\n\t\t\t\t\"label\": \"Indonesian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ingush\",\n\t\t\t\t\"label\": \"Ingush\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingua (International Auxiliary Lang. Assoc.)\",\n\t\t\t\t\"label\": \"Interlingua (IALA)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Interlingue\",\n\t\t\t\t\"label\": \"Interlingue\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inuktitut\",\n\t\t\t\t\"label\": \"Inuktitut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Inupiaq\",\n\t\t\t\t\"label\": \"Inupiaq\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iranian (Other)\",\n\t\t\t\t\"label\": \"Iranian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Irish\",\n\t\t\t\t\"label\": \"Irish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Iroquoian Languages\",\n\t\t\t\t\"label\": \"Iroquoian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Italian\",\n\t\t\t\t\"label\": \"Italian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Japanese\",\n\t\t\t\t\"label\": \"Japanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Javanese\",\n\t\t\t\t\"label\": \"Javanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Arabic\",\n\t\t\t\t\"label\": \"Judeo-Arabic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Judeo-Persian\",\n\t\t\t\t\"label\": \"Judeo-Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabardian\",\n\t\t\t\t\"label\": \"Kabardian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kabyle\",\n\t\t\t\t\"label\": \"Kabyle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kachin\",\n\t\t\t\t\"label\": \"Kachin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalaallisut\",\n\t\t\t\t\"label\": \"Kalaallisut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kalmyk\",\n\t\t\t\t\"label\": \"Kalmyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kamba\",\n\t\t\t\t\"label\": \"Kamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kannada\",\n\t\t\t\t\"label\": \"Kannada\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kanuri\",\n\t\t\t\t\"label\": \"Kanuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kara-Kalpak\",\n\t\t\t\t\"label\": \"Kara-Kalpak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karachay-Balkar\",\n\t\t\t\t\"label\": \"Karachay-Balkar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karelian\",\n\t\t\t\t\"label\": \"Karelian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Karen\",\n\t\t\t\t\"label\": \"Karen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashmiri\",\n\t\t\t\t\"label\": \"Kashmiri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kashubian\",\n\t\t\t\t\"label\": \"Kashubian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kawi\",\n\t\t\t\t\"label\": \"Kawi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kazakh\",\n\t\t\t\t\"label\": \"Kazakh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khasi\",\n\t\t\t\t\"label\": \"Khasi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khmer\",\n\t\t\t\t\"label\": \"Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khoisan (Other)\",\n\t\t\t\t\"label\": \"Khoisan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Khotanese\",\n\t\t\t\t\"label\": \"Khotanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kimbundu\",\n\t\t\t\t\"label\": \"Kimbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kinyarwanda\",\n\t\t\t\t\"label\": \"Kinyarwanda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kirghiz\",\n\t\t\t\t\"label\": \"Kirghiz\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Klingon\",\n\t\t\t\t\"label\": \"Klingon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Komi\",\n\t\t\t\t\"label\": \"Komi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kongo\",\n\t\t\t\t\"label\": \"Kongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Konkani\",\n\t\t\t\t\"label\": \"Konkani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Korean\",\n\t\t\t\t\"label\": \"Korean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kosraean\",\n\t\t\t\t\"label\": \"Kosraean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kpelle\",\n\t\t\t\t\"label\": \"Kpelle\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kru\",\n\t\t\t\t\"label\": \"Kru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kumyk\",\n\t\t\t\t\"label\": \"Kumyk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurdish\",\n\t\t\t\t\"label\": \"Kurdish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kurukh\",\n\t\t\t\t\"label\": \"Kurukh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kutenai\",\n\t\t\t\t\"label\": \"Kutenai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Kwanyama\",\n\t\t\t\t\"label\": \"Kwanyama\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ladino\",\n\t\t\t\t\"label\": \"Ladino\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lahnda\",\n\t\t\t\t\"label\": \"Lahnda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lamba\",\n\t\t\t\t\"label\": \"Lamba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lao\",\n\t\t\t\t\"label\": \"Lao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latin\",\n\t\t\t\t\"label\": \"Latin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Latvian\",\n\t\t\t\t\"label\": \"Latvian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lezghian\",\n\t\t\t\t\"label\": \"Lezghian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Limburgish\",\n\t\t\t\t\"label\": \"Limburgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lingala\",\n\t\t\t\t\"label\": \"Lingala\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lithuanian\",\n\t\t\t\t\"label\": \"Lithuanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lojban\",\n\t\t\t\t\"label\": \"Lojban\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Low German\",\n\t\t\t\t\"label\": \"Low German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lower Sorbian\",\n\t\t\t\t\"label\": \"Lower Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lozi\",\n\t\t\t\t\"label\": \"Lozi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Katanga\",\n\t\t\t\t\"label\": \"Luba-Katanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luba-Lulua\",\n\t\t\t\t\"label\": \"Luba-Lulua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luiseno\",\n\t\t\t\t\"label\": \"Luiseno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lule Sami\",\n\t\t\t\t\"label\": \"Lule Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lunda\",\n\t\t\t\t\"label\": \"Lunda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luo (Kenya And Tanzania)\",\n\t\t\t\t\"label\": \"Luo (Kenya & Tanzania)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Lushai\",\n\t\t\t\t\"label\": \"Lushai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Luxembourgish\",\n\t\t\t\t\"label\": \"Luxembourgish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Macedonian\",\n\t\t\t\t\"label\": \"Macedonian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Madurese\",\n\t\t\t\t\"label\": \"Madurese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Magahi\",\n\t\t\t\t\"label\": \"Magahi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maithili\",\n\t\t\t\t\"label\": \"Maithili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Makasar\",\n\t\t\t\t\"label\": \"Makasar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malagasy\",\n\t\t\t\t\"label\": \"Malagasy\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malay\",\n\t\t\t\t\"label\": \"Malay\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Malayalam\",\n\t\t\t\t\"label\": \"Malayalam\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maltese\",\n\t\t\t\t\"label\": \"Maltese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manchu\",\n\t\t\t\t\"label\": \"Manchu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandar\",\n\t\t\t\t\"label\": \"Mandar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandarin\",\n\t\t\t\t\"label\": \"Mandarin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mandingo\",\n\t\t\t\t\"label\": \"Mandingo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manipuri\",\n\t\t\t\t\"label\": \"Manipuri\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manobo Languages\",\n\t\t\t\t\"label\": \"Manobo Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Manx\",\n\t\t\t\t\"label\": \"Manx\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Maori\",\n\t\t\t\t\"label\": \"Maori\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marathi\",\n\t\t\t\t\"label\": \"Marathi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mari\",\n\t\t\t\t\"label\": \"Mari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marshall\",\n\t\t\t\t\"label\": \"Marshall\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Marwari\",\n\t\t\t\t\"label\": \"Marwari\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Masai\",\n\t\t\t\t\"label\": \"Masai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mayan Languages\",\n\t\t\t\t\"label\": \"Mayan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mende\",\n\t\t\t\t\"label\": \"Mende\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Micmac\",\n\t\t\t\t\"label\": \"Micmac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Minangkabau\",\n\t\t\t\t\"label\": \"Minangkabau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mirandese\",\n\t\t\t\t\"label\": \"Mirandese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Miscellaneous Languages\",\n\t\t\t\t\"label\": \"Miscellaneous Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mohawk\",\n\t\t\t\t\"label\": \"Mohawk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moksha\",\n\t\t\t\t\"label\": \"Moksha\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Moldavian\",\n\t\t\t\t\"label\": \"Moldavian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mon-Khmer (Other)\",\n\t\t\t\t\"label\": \"Mon-Khmer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongo\",\n\t\t\t\t\"label\": \"Mongo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mongolian\",\n\t\t\t\t\"label\": \"Mongolian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Mossi\",\n\t\t\t\t\"label\": \"Mossi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Multiple Languages\",\n\t\t\t\t\"label\": \"Multiple Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Munda Languages\",\n\t\t\t\t\"label\": \"Munda Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"N'Ko\",\n\t\t\t\t\"label\": \"N'Ko\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nahuatl\",\n\t\t\t\t\"label\": \"Nahuatl\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nauru\",\n\t\t\t\t\"label\": \"Nauru\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Navajo\",\n\t\t\t\t\"label\": \"Navajo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ndonga\",\n\t\t\t\t\"label\": \"Ndonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Neapolitan\",\n\t\t\t\t\"label\": \"Neapolitan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepal Bhasa\",\n\t\t\t\t\"label\": \"Nepal Bhasa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nepali\",\n\t\t\t\t\"label\": \"Nepali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nias\",\n\t\t\t\t\"label\": \"Nias\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niger-Kordofanian (Other)\",\n\t\t\t\t\"label\": \"Niger-Kordofanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nilo-Saharan (Other)\",\n\t\t\t\t\"label\": \"Nilo-Saharan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Niuean\",\n\t\t\t\t\"label\": \"Niuean\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nogai\",\n\t\t\t\t\"label\": \"Nogai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norse, Old\",\n\t\t\t\t\"label\": \"Norse, Old\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North American Indian (Other)\",\n\t\t\t\t\"label\": \"North American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"North Ndebele\",\n\t\t\t\t\"label\": \"North Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Frisian\",\n\t\t\t\t\"label\": \"Northern Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sami\",\n\t\t\t\t\"label\": \"Northern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Northern Sotho\",\n\t\t\t\t\"label\": \"Northern Sotho\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian\",\n\t\t\t\t\"label\": \"Norwegian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Norwegian Nynorsk\",\n\t\t\t\t\"label\": \"Norwegian Nynorsk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nubian Languages\",\n\t\t\t\t\"label\": \"Nubian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyamwezi\",\n\t\t\t\t\"label\": \"Nyamwezi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyankole\",\n\t\t\t\t\"label\": \"Nyankole\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nyoro\",\n\t\t\t\t\"label\": \"Nyoro\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Nzima\",\n\t\t\t\t\"label\": \"Nzima\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Occitan (Post 1500)\",\n\t\t\t\t\"label\": \"Occitan (Post 1500)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ojibwa\",\n\t\t\t\t\"label\": \"Ojibwa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Old Church Slavonic\",\n\t\t\t\t\"label\": \"Old Church Slavonic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oriya\",\n\t\t\t\t\"label\": \"Oriya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Oromo\",\n\t\t\t\t\"label\": \"Oromo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Osage\",\n\t\t\t\t\"label\": \"Osage\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ossetic\",\n\t\t\t\t\"label\": \"Ossetic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Otomian Languages\",\n\t\t\t\t\"label\": \"Otomian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pahlavi\",\n\t\t\t\t\"label\": \"Pahlavi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Palauan\",\n\t\t\t\t\"label\": \"Palauan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pali\",\n\t\t\t\t\"label\": \"Pali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pampanga\",\n\t\t\t\t\"label\": \"Pampanga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pangasinan\",\n\t\t\t\t\"label\": \"Pangasinan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papiamento\",\n\t\t\t\t\"label\": \"Papiamento\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Papuan (Other)\",\n\t\t\t\t\"label\": \"Papuan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Persian\",\n\t\t\t\t\"label\": \"Persian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Philippine (Other)\",\n\t\t\t\t\"label\": \"Philippine\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Phoenician\",\n\t\t\t\t\"label\": \"Phoenician\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pohnpeian\",\n\t\t\t\t\"label\": \"Pohnpeian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Polish\",\n\t\t\t\t\"label\": \"Polish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Portuguese\",\n\t\t\t\t\"label\": \"Portuguese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Prakrit Languages\",\n\t\t\t\t\"label\": \"Prakrit Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Punjabi\",\n\t\t\t\t\"label\": \"Punjabi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Pushto\",\n\t\t\t\t\"label\": \"Pushto\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Quechua\",\n\t\t\t\t\"label\": \"Quechua\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Raeto-Romance\",\n\t\t\t\t\"label\": \"Raeto-Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rajasthani\",\n\t\t\t\t\"label\": \"Rajasthani\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rapanui\",\n\t\t\t\t\"label\": \"Rapanui\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rarotongan\",\n\t\t\t\t\"label\": \"Rarotongan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romance (Other)\",\n\t\t\t\t\"label\": \"Romance\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romanian\",\n\t\t\t\t\"label\": \"Romanian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Romany\",\n\t\t\t\t\"label\": \"Romany\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Rundi\",\n\t\t\t\t\"label\": \"Rundi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Russian\",\n\t\t\t\t\"label\": \"Russian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Salishan Languages\",\n\t\t\t\t\"label\": \"Salishan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samaritan Aramaic\",\n\t\t\t\t\"label\": \"Samaritan Aramaic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sami Languages\",\n\t\t\t\t\"label\": \"Sami Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Samoan\",\n\t\t\t\t\"label\": \"Samoan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sandawe\",\n\t\t\t\t\"label\": \"Sandawe\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sango\",\n\t\t\t\t\"label\": \"Sango\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sanskrit\",\n\t\t\t\t\"label\": \"Sanskrit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Santali\",\n\t\t\t\t\"label\": \"Santali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sardinian\",\n\t\t\t\t\"label\": \"Sardinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sasak\",\n\t\t\t\t\"label\": \"Sasak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Scots\",\n\t\t\t\t\"label\": \"Scots\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Selkup\",\n\t\t\t\t\"label\": \"Selkup\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Semitic (Other)\",\n\t\t\t\t\"label\": \"Semitic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serbian\",\n\t\t\t\t\"label\": \"Serbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Serer\",\n\t\t\t\t\"label\": \"Serer\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shan\",\n\t\t\t\t\"label\": \"Shan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Shona\",\n\t\t\t\t\"label\": \"Shona\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sichuan Yi\",\n\t\t\t\t\"label\": \"Sichuan Yi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sicilian\",\n\t\t\t\t\"label\": \"Sicilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sidamo\",\n\t\t\t\t\"label\": \"Sidamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sign Languages\",\n\t\t\t\t\"label\": \"Sign Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siksika\",\n\t\t\t\t\"label\": \"Siksika\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sindhi\",\n\t\t\t\t\"label\": \"Sindhi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sinhalese\",\n\t\t\t\t\"label\": \"Sinhalese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sino-Tibetan (Other)\",\n\t\t\t\t\"label\": \"Sino-Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Siouan Languages\",\n\t\t\t\t\"label\": \"Siouan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Skolt Sami\",\n\t\t\t\t\"label\": \"Skolt Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slave (Athapascan)\",\n\t\t\t\t\"label\": \"Slave (Athapascan)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slavic (Other)\",\n\t\t\t\t\"label\": \"Slavic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovak\",\n\t\t\t\t\"label\": \"Slovak\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Slovenian\",\n\t\t\t\t\"label\": \"Slovenian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sogdian\",\n\t\t\t\t\"label\": \"Sogdian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Somali\",\n\t\t\t\t\"label\": \"Somali\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Songhai\",\n\t\t\t\t\"label\": \"Songhai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Soninke\",\n\t\t\t\t\"label\": \"Soninke\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sorbian Languages\",\n\t\t\t\t\"label\": \"Sorbian Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sotho, Southern\",\n\t\t\t\t\"label\": \"Sotho, Southern\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South American Indian (Other)\",\n\t\t\t\t\"label\": \"South American Indian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"South Ndebele\",\n\t\t\t\t\"label\": \"South Ndebele\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Altai\",\n\t\t\t\t\"label\": \"Southern Altai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Southern Sami\",\n\t\t\t\t\"label\": \"Southern Sami\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Spanish; Castilian\",\n\t\t\t\t\"label\": \"Spanish; Castilian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sranan Togo\",\n\t\t\t\t\"label\": \"Sranan Togo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sukuma\",\n\t\t\t\t\"label\": \"Sukuma\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sumerian\",\n\t\t\t\t\"label\": \"Sumerian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Sundanese\",\n\t\t\t\t\"label\": \"Sundanese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Susu\",\n\t\t\t\t\"label\": \"Susu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swahili\",\n\t\t\t\t\"label\": \"Swahili\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swati\",\n\t\t\t\t\"label\": \"Swati\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swedish\",\n\t\t\t\t\"label\": \"Swedish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Swiss German\",\n\t\t\t\t\"label\": \"Swiss German\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Syriac\",\n\t\t\t\t\"label\": \"Syriac\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tagalog\",\n\t\t\t\t\"label\": \"Tagalog\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tahitian\",\n\t\t\t\t\"label\": \"Tahitian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tai (Other)\",\n\t\t\t\t\"label\": \"Tai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tajik\",\n\t\t\t\t\"label\": \"Tajik\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamashek\",\n\t\t\t\t\"label\": \"Tamashek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tamil\",\n\t\t\t\t\"label\": \"Tamil\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tatar\",\n\t\t\t\t\"label\": \"Tatar\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Telugu\",\n\t\t\t\t\"label\": \"Telugu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tereno\",\n\t\t\t\t\"label\": \"Tereno\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tetum\",\n\t\t\t\t\"label\": \"Tetum\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Thai\",\n\t\t\t\t\"label\": \"Thai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tibetan\",\n\t\t\t\t\"label\": \"Tibetan\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigre\",\n\t\t\t\t\"label\": \"Tigre\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tigrinya\",\n\t\t\t\t\"label\": \"Tigrinya\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Timne\",\n\t\t\t\t\"label\": \"Timne\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tiv\",\n\t\t\t\t\"label\": \"Tiv\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tlingit\",\n\t\t\t\t\"label\": \"Tlingit\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tok Pisin\",\n\t\t\t\t\"label\": \"Tok Pisin\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tokelau\",\n\t\t\t\t\"label\": \"Tokelau\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Nyasa)\",\n\t\t\t\t\"label\": \"Tonga (Nyasa)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tonga (Tonga Islands)\",\n\t\t\t\t\"label\": \"Tonga (Tonga Islands)\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsimshian\",\n\t\t\t\t\"label\": \"Tsimshian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tsonga\",\n\t\t\t\t\"label\": \"Tsonga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tswana\",\n\t\t\t\t\"label\": \"Tswana\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tumbuka\",\n\t\t\t\t\"label\": \"Tumbuka\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tupi Languages\",\n\t\t\t\t\"label\": \"Tupi Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkish\",\n\t\t\t\t\"label\": \"Turkish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Turkmen\",\n\t\t\t\t\"label\": \"Turkmen\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvalu\",\n\t\t\t\t\"label\": \"Tuvalu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Tuvinian\",\n\t\t\t\t\"label\": \"Tuvinian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Twi\",\n\t\t\t\t\"label\": \"Twi\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Udmurt\",\n\t\t\t\t\"label\": \"Udmurt\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ugaritic\",\n\t\t\t\t\"label\": \"Ugaritic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Ukrainian\",\n\t\t\t\t\"label\": \"Ukrainian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Umbundu\",\n\t\t\t\t\"label\": \"Umbundu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Undetermined\",\n\t\t\t\t\"label\": \"Undetermined\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Upper Sorbian\",\n\t\t\t\t\"label\": \"Upper Sorbian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Urdu\",\n\t\t\t\t\"label\": \"Urdu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uyghur\",\n\t\t\t\t\"label\": \"Uyghur\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Uzbek\",\n\t\t\t\t\"label\": \"Uzbek\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vai\",\n\t\t\t\t\"label\": \"Vai\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Venda\",\n\t\t\t\t\"label\": \"Venda\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Vietnamese\",\n\t\t\t\t\"label\": \"Vietnamese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Volapuk\",\n\t\t\t\t\"label\": \"Volapuk\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Votic\",\n\t\t\t\t\"label\": \"Votic\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wakashan Languages\",\n\t\t\t\t\"label\": \"Wakashan Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walamo\",\n\t\t\t\t\"label\": \"Walamo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Walloon\",\n\t\t\t\t\"label\": \"Walloon\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Waray\",\n\t\t\t\t\"label\": \"Waray\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Washo\",\n\t\t\t\t\"label\": \"Washo\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Welsh\",\n\t\t\t\t\"label\": \"Welsh\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Western Frisian\",\n\t\t\t\t\"label\": \"Western Frisian\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Wolof\",\n\t\t\t\t\"label\": \"Wolof\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Xhosa\",\n\t\t\t\t\"label\": \"Xhosa\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yakut\",\n\t\t\t\t\"label\": \"Yakut\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yao\",\n\t\t\t\t\"label\": \"Yao\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yapese\",\n\t\t\t\t\"label\": \"Yapese\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yiddish\",\n\t\t\t\t\"label\": \"Yiddish\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yoruba\",\n\t\t\t\t\"label\": \"Yoruba\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Yupik Languages\",\n\t\t\t\t\"label\": \"Yupik Languages\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zande\",\n\t\t\t\t\"label\": \"Zande\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zapotec\",\n\t\t\t\t\"label\": \"Zapotec\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zazaki\",\n\t\t\t\t\"label\": \"Zazaki\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zenaga\",\n\t\t\t\t\"label\": \"Zenaga\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zhuang\",\n\t\t\t\t\"label\": \"Zhuang\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zulu\",\n\t\t\t\t\"label\": \"Zulu\"\n\t\t\t});\n\t\t\tlangs.push(\n\t\t\t{\n\t\t\t\t\"value\": \"Zuni\",\n\t\t\t\t\"label\": \"Zuni\"\n\t\t\t});\n\t\t\treturn langs;\n\t\t};\n\n\t\tservice.getRosterTerminationReasons = function getRosterTerminationReasons()\n\t\t{\n\t\t\tvar reasons = [];\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"39\",\n\t\t\t\t\"label\": \"Assigned member status ended; roster transferred per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"59\",\n\t\t\t\t\"label\": \"Enrolment ended; patient out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"57\",\n\t\t\t\t\"label\": \"Enrolment terminated by patient\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"12\",\n\t\t\t\t\"label\": \"Health Number error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"38\",\n\t\t\t\t\"label\": \"Long Term Care enrolment ended; patient has left Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"82\",\n\t\t\t\t\"label\": \"Ministry has not received enrolment/ Consent form\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"60\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"73\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"74\",\n\t\t\t\t\"label\": \"No current eligibility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"37\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now enrolled as Long Term Care\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"36\",\n\t\t\t\t\"label\": \"Original enrolment ended; patient now re-enroled\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"24\",\n\t\t\t\t\"label\": \"Patient added to roster in error\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"14\",\n\t\t\t\t\"label\": \"Patient identified as deceased on ministry database\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"51\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"41\",\n\t\t\t\t\"label\": \"Patient no longer meets selection criteria for your roster - assigned to another physician\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"61\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride applied\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"62\",\n\t\t\t\t\"label\": \"Patient out of geographic area; address over-ride removed\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"35\",\n\t\t\t\t\"label\": \"Patient transferred from roster per physician request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"42\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient entered Long Term Care facility\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"54\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient left province\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"53\",\n\t\t\t\t\"label\": \"Physician ended enrolment; patient moved out of geographic area\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"56\",\n\t\t\t\t\"label\": \"Physician ended enrolment; per patient request\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"44\",\n\t\t\t\t\"label\": \"Physician ended patient enrolment\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"40\",\n\t\t\t\t\"label\": \"Physician reported member as deceased\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"32\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with photo health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"30\",\n\t\t\t\t\"label\": \"Pre-member/ Assigned member ended; now enrolled or registered with red and white health card\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"33\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"84\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"90\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treasons.push(\n\t\t\t{\n\t\t\t\t\"value\": \"91\",\n\t\t\t\t\"label\": \"Termination reason cannot be released (due to patient confidentiality)\"\n\t\t\t});\n\t\t\treturn reasons;\n\t\t};\n\n\t\tservice.getSecurityQuestions = function getSecurityQuestions()\n\t\t{\n\t\t\tvar questions = [];\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What was the name of your high school?\",\n\t\t\t\t\"label\": \"What was the name of your high school?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your spouse's maiden name?\",\n\t\t\t\t\"label\": \"What is your spouse's maiden name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the name of the street you grew up on?\",\n\t\t\t\t\"label\": \"What is the name of the street you grew up on?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"In what city were you born?\",\n\t\t\t\t\"label\": \"In what city were you born?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is the middle name of your oldest child?\",\n\t\t\t\t\"label\": \"What is the middle name of your oldest child?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your oldest cousin's first name?\",\n\t\t\t\t\"label\": \"What is your oldest cousin's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your mother's middle name?\",\n\t\t\t\t\"label\": \"What is your mother's middle name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What is your grandmother's first name?\",\n\t\t\t\t\"label\": \"What is your grandmother's first name?\"\n\t\t\t});\n\t\t\tquestions.push(\n\t\t\t{\n\t\t\t\t\"value\": \"What year did you graduate from high school?\",\n\t\t\t\t\"label\": \"What year did you graduate from high school?\"\n\t\t\t});\n\t\t\treturn questions;\n\t\t};\n\n\t\tservice.getConsultUrgencies = function getConsultUrgencies()\n\t\t{\n\t\t\tvar urgencies = [];\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Non-Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Urgent\"\n\t\t\t});\n\t\t\turgencies.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Return\"\n\t\t\t});\n\t\t\treturn urgencies;\n\t\t};\n\n\t\tservice.getConsultRequestStatuses = function getConsultRequestStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"1\",\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"2\",\n\t\t\t\tname: \"Preliminary Pending Specialist\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"3\",\n\t\t\t\tname: \"Pending Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"4\",\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"5\",\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"6\",\n\t\t\t\tname: \"Appointment Booked\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: \"7\",\n\t\t\t\tname: \"Deleted\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getConsultResponseStatuses = function getConsultResponseStatuses()\n\t\t{\n\t\t\tvar statuses = [];\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Not Complete\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Pending Referring Doctor Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"Pending Patient Callback\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"Completed\"\n\t\t\t});\n\t\t\tstatuses.push(\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tname: \"Cancelled\"\n\t\t\t});\n\t\t\treturn statuses;\n\t\t};\n\n\t\tservice.getHours = function getHours()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n\t\t\t\t\"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getMinutes = function getMinutes()\n\t\t{\n\t\t\treturn [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\n\t\t\t\t\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n\t\t\t\t\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n\t\t\t\t\"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n\t\t\t\t\"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n\t\t\t\t\"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\n\t\t\t];\n\t\t};\n\n\t\tservice.getRxInteractionLevels = function getRxInteractionLevels()\n\t\t{\n\t\t\tvar levels = [];\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tname: \"Not Specified\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tname: \"Low\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tname: \"Medium\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 3,\n\t\t\t\tname: \"High\"\n\t\t\t});\n\t\t\tlevels.push(\n\t\t\t{\n\t\t\t\tvalue: 4,\n\t\t\t\tname: \"None\"\n\t\t\t});\n\t\t\treturn levels;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"summaryService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.getSummaryHeaders = function(demographicNo, key)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/summary/' + key).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSummaryHeaders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching summary headers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFullSummary = function(demographicNo, summaryCode)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/fullSummary/' + summaryCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFullSummary error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching full summary\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getFamilyHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getFamilyHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getFamilyHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching family history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getMedicalHistory = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getMedicalHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getMedicalHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching medical history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getSocialHistory = function getSocialHistory(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getSocialHistory').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getSocialHistory error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching social history\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOngoingConcerns = function(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOngoingConcerns').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOngoingConcerns error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching ongoing concerns\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getOtherMeds = function getOtherMeds(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getOtherMeds').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getOtherMeds error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching other meds\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getReminders = function getReminders(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getReminders').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getReminders error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching reminders\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getRiskFactors = function getRiskFactors(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/getRiskFactors').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"summaryService::getRiskFactors error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching risk factors\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n    Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for\n    CloudPractice Inc.\n    Victoria, British Columbia\n    Canada\n\n */\n\nangular.module(\"Common.Services\").service(\"systemPreferenceService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q, junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/systemPreference';\n\n\t\tservice.getPreference = function getPreference(key, defaultValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdefault: defaultValue\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + key, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::getPreference error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting system preference data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setPreference = function setPreference(key, value)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tjunoHttp.put(service.apiPath + '/' + key, value).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::setPreference error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting system preference data\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.isPreferenceEnabled = function isPreferenceEnabled(key, defaultValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tdefault: defaultValue\n\t\t\t};\n\n\t\t\tjunoHttp.get(service.apiPath + '/' + key + '/enabled', config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"systemPreferenceService::isPreferenceEnabled error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting system preference enabled status\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"ticklerService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/tickler';\n\n\t\tservice.setCompleted = function setCompleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/complete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setCompleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to completed status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.setDeleted = function setDeleted(ticklerIds)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/delete',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t\"ticklers\": ticklerIds\n\t\t\t\t}),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::setDeleted error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while setting ticklers to deleted status\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.search = function search(filter, startIndex, limit)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/search?startIndex=' +\n\t\t\t\t\tencodeURIComponent(startIndex) +\n\t\t\t\t\t'&limit=' +\n\t\t\t\t\tencodeURIComponent(limit),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(filter),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::search error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ticklers\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.update = function update(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/update',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::update error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while updating tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTextSuggestions = function getTextSuggestions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/textSuggestions',\n\t\t\t\tmethod: \"GET\"\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::getTextSuggestions error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while getting tickler text suggestions\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.add = function add(tickler)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/add',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: JSON.stringify(tickler),\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"ticklerService::add error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while saving tickler\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"reportByTemplateService\", [\n\t'$http',\n\t'$q',\n\t'junoHttp',\n\tfunction($http,\n\t         $q,\n\t         junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs';\n\n\t\tservice.isK2AInit = function isK2AInit()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/K2AActive',\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::isK2AInit error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a content\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllK2AReports = function getAllK2AReports()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/allReports', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getAllK2AReports error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a reports\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AReportById = function getK2AReportById(id)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http(\n\t\t\t{\n\t\t\t\turl: service.apiPath + '/reportByTemplate/getReportById/' + encodeURIComponent(id),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: Juno.Common.ServiceHelper.configHeaders()\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AReportById error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a report\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getK2AUrl = function getK2AUrl()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tjunoHttp.get(service.apiPath + '/reportByTemplate/K2AUrl/', config).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"reportByTemplateService::getK2AUrl error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching k2a url\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"uxService\", [\n\t'$http', '$q',\n\tfunction($http, $q)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/recordUX';\n\n\t\tservice.menu = function menu(demographicNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.get(service.apiPath + '/' + encodeURIComponent(demographicNo) +\n\t\t\t\t'/recordMenu').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::menu error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching menu\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.searchTemplates = function searchTemplates(search, startIndex, itemsToReturn)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$http.post(service.apiPath + '/searchTemplates?startIndex=' +\n\t\t\t\tencodeURIComponent(startIndex) + \"&itemsToReturn=\" +\n\t\t\t\tencodeURIComponent(itemsToReturn), search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::searchTemplates error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching templates\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getTemplate = function getTemplate(name)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(service.apiPath + '/template', name).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService::getTemplate error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching template\");\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getDisplayProperties = function getDisplayProperties()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/properties').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(results.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"uxService:getDisplayProperties error\", errors);\n\t\t\t\t\tdeferred.reject(\"An error occurred while fetching display properties.\")\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tservice.getAllDashboards = function ()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(service.apiPath + '/dashboards').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"uxService:getAllDashboards error\", errors);\n\t\t\t\t\t\tdeferred.reject(\"An error occurred while fetching dashboard list.\")\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"specialistsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/specialists/';\n\n\t\tservice.searchSpecialists = function searchSpecialists(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tconsole.log(\"params\", config.params);\n\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"SpecialistsService::searchSpecialists error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching Specialists\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Services\").service(\"referralDoctorsService\", [\n\t'$q',\n\t'junoHttp',\n\tfunction($q,junoHttp)\n\t{\n\t\tvar service = {};\n\n\t\tservice.apiPath = '../ws/rs/referralDoctors/';\n\n\t\tservice.searchReferralDoctors = function searchReferralDoctors(searchName, searchRefNo, page, perPage)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar config = Juno.Common.ServiceHelper.configHeaders();\n\t\t\tconfig.params = {\n\t\t\t\tsearchName: searchName,\n\t\t\t\tsearchRefNo:searchRefNo,\n\t\t\t\tpage:page,\n\t\t\t\tperPage:perPage\n\t\t\t};\n\t\t\tjunoHttp.get(service.apiPath, config).then(\n\t\t\t\tfunction success(response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t},\n\t\t\t\tfunction error(error) {\n\t\t\t\t\tconsole.log(\"ReferralDoctorsService::searchReferralDoctors error\", error);\n\t\t\t\t\tdeferred.reject(\"An error occurred while searching ReferralDoctors\");\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\treturn service;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters', []);\n\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('age', [\n\tfunction()\n\t{\n\t\treturn function(input)\n\t\t{\n\t\t\tif (input !== null && input.years !== null)\n\t\t\t{\n\t\t\t\tif (input.years < 1 && input.months < 1)\n\t\t\t\t{\n\t\t\t\t\treturn input.days + \"d\";\n\t\t\t\t}\n\n\t\t\t\tif (input.years < 2)\n\t\t\t\t{\n\t\t\t\t\treturn input.months + \"m\";\n\t\t\t\t}\n\n\t\t\t\treturn input.years + \" y\";\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('cut', [\n\tfunction()\n\t{\n\t\treturn function(value, wordwise, max, tail)\n\t\t{\n\t\t\tif (!value) return '';\n\n\t\t\tmax = parseInt(max, 10);\n\t\t\tif (!max) return value;\n\t\t\tif (value.length <= max) return value;\n\n\t\t\tvalue = value.substr(0, max);\n\t\t\tif (wordwise)\n\t\t\t{\n\t\t\t\tvar lastspace = value.lastIndexOf(' ');\n\t\t\t\tif (lastspace !== -1)\n\t\t\t\t{\n\t\t\t\t\tvalue = value.substr(0, lastspace);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value + (tail || ' …');\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('offset', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tif (input === null)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tstart = parseInt(start, 10);\n\t\t\treturn input.slice(start);\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Filters').filter('startFrom', [\n\tfunction()\n\t{\n\t\treturn function(input, start)\n\t\t{\n\t\t\tstart = +start; //parse to int\n\t\t\t// return input.slice(start);\n\t\t\treturn input;\n\t\t};\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives', [ 'Common.Services' ]);\n\n","angular.module('Common').directive(\n\t'junoConfirmClick',\n\t[\n\tfunction(\n\t)\n\t{\n\t\tvar scope = {\n\t\t\tonConfirm:'&junoConfirmClick',\n\t\t\tonCancel: '&junoConfirmCancel',\n\t\t};\n\n\t\tvar linkFunction = function linkFunction($scope, element, attribute, controller)\n\t\t{\n\t\t\tvar message = attribute.junoConfirmMessage || \"Are you sure?\";\n\t\t\telement.bind('click', function (event)\n\t\t\t{\n\t\t\t\tif (window.confirm(message))\n\t\t\t\t{\n\t\t\t\t\t$scope.onConfirm();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$scope.onCancel();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\treturn {\n\t\t\tscope: scope,\n\t\t\trestrict: 'A',\n\t\t\tlink: linkFunction,\n\t\t}\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module(\"Common.Directives\").service(\"typeaheadHelper\", [\n\t'$timeout',\n\tfunction($timeout)\n\t{\n\t\tvar helper = {};\n\n\t\thelper.defaultTypeaheadScope = function()\n\t\t{\n\t\t\tvar scope = {};\n\n\t\t\t// holds the selected match\n\t\t\tscope.model = '=junoModel';\n\n\t\t\t// placeholder for the text input\n\t\t\tscope.placeholder = '@junoPlaceholder';\n\n\t\t\t// called when the search button is clicked (search button will only appear if defined)\n\t\t\tscope.onSearchFn = '&junoOnSearchFn';\n\n\t\t\tscope.onAddFn = '&junoOnAddFn';\n\t\t\t// title for the search button\n\t\t\tscope.searchButtonTitle = '@junoSearchButtonTitle';\n\n\t\t\tscope.addButtonTitle = '@junoAddButtonTitle';\n\n\t\t\tscope.iconLeft = '=junoIconLeft';\n\t\t\tscope.iconRight = '=junoIconRight';\n\n\t\t\treturn scope;\n\t\t};\n\n\t\thelper.initTypeahead = function initTypeahead($scope)\n\t\t{\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives must define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.findMatches = function findMatches($viewValue)\n\t\t\t{\n\t\t\t\tconsole.log('findMatches function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection($model)\n\t\t\t{\n\t\t\t\tconsole.log('formatMatch function must be defined by the typeahead implementation');\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// typeahead directives may define/override these\n\t\t\t//=========================================================================\n\n\t\t\t$scope.optionsTemplateUrl = null;\n\t\t\t$scope.forceSelection = false;\n\n\t\t\t//=========================================================================\n\t\t\t// common initialization for $scope, for use on all typeahead directives\n\t\t\t//=========================================================================\n\n\t\t\t// the internal ng-model\n\t\t\t$scope.searchField = null;\n\n\t\t\t// ng-model-options\n\t\t\t$scope.typeaheadModelOptions = {\n\t\t\t\tdebounce:\n\t\t\t\t{\n\t\t\t\t\tdefault: 250,\n\t\t\t\t\tblur: 250\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// the passed-in model that holds the selection\n\t\t\tif (!angular.isDefined($scope.model))\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\n\t\t\t$scope.autocompleteMinLength = 1;\n\n\t\t\t$scope.hasButtons = function hasButtons()\n\t\t\t{\n\t\t\t\treturn $scope.hasSearchButton() || $scope.hasAddButton();\n\t\t\t};\n\n\t\t\t$scope.hasSearchButton = function hasSearchButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onSearchFn());\n\t\t\t};\n\n\t\t\t$scope.hasAddButton = function hasAddButton()\n\t\t\t{\n\t\t\t\treturn angular.isFunction($scope.onAddFn());\n\t\t\t};\n\n\t\t\t$scope.hasIcon = function hasIcon()\n\t\t\t{\n\t\t\t\treturn $scope.hasLeftIcon() || $scope.hasRightIcon();\n\t\t\t};\n\n\t\t\t$scope.hasLeftIcon = function hasLeftIcon()\n\t\t\t{\n\t\t\t\treturn $scope.iconLeft === true;\n\t\t\t};\n\n\t\t\t$scope.hasRightIcon = function hasRightIcon()\n\t\t\t{\n\t\t\t\treturn $scope.iconRight === true;\n\t\t\t};\n\n\t\t\t$scope.hasTemplateUrl = function hasTemplateUrl()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.optionsTemplateUrl);\n\t\t\t};\n\n\t\t\t$scope.hasForceSelectionEnabled = function hasForceSelectionEnabled()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.forceSelection) && $scope.forceSelection;\n\t\t\t};\n\n\t\t\t$scope.formatMatch = function formatMatch($model)\n\t\t\t{\n\t\t\t\tif (!Juno.Common.Util.exists($model))\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ($scope.isDummySelection($model))\n\t\t\t\t{\n\t\t\t\t\treturn $model.searchQuery;\n\t\t\t\t}\n\n\t\t\t\treturn $scope.formatMatchSelection($model);\n\t\t\t};\n\n\t\t\t$scope.onSelect = function onSelect($item, $model, $label, $event)\n\t\t\t{\n\t\t\t\t$scope.model = $item;\n\t\t\t};\n\n\t\t\t$scope.onBlur = function onBlur()\n\t\t\t{\n\t\t\t\tif ($scope.hasForceSelectionEnabled() && angular.isString($scope.searchField))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('typeaheadHelper::onBlur - setting model to null (forceSelectionEnabled)');\n\t\t\t\t\t// the searchField is not a valid selection and force selection is enabled\n\t\t\t\t\t// if there is a select, onSelect will fire after\n\t\t\t\t\t$scope.model = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onChange = function onChange()\n\t\t\t{\n\t\t\t\tif (!$scope.hasForceSelectionEnabled())\n\t\t\t\t{\n\t\t\t\t\t// as user types into the typeahead, select a 'dummy' selection;\n\t\t\t\t\t// consumers need to check the isTypeaheadSearchQuery property\n\t\t\t\t\t$scope.onSelect($scope.createDummySelection());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.onSearch = function onSearch()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onSearchFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onSearchFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.onAdd = function onAdd()\n\t\t\t{\n\t\t\t\t// must be in a $timeout because model may not be populated yet\n\t\t\t\t// because of delay specified by ng-model-options\n\t\t\t\t$timeout(function()\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction($scope.onAddFn()))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.onAddFn()($scope.model);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.createDummySelection = function createDummySelection()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tisTypeaheadSearchQuery: true,\n\t\t\t\t\tsearchQuery: $scope.searchField\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t$scope.isDummySelection = function isDummySelection(match)\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(match) && match.isTypeaheadSearchQuery;\n\t\t\t};\n\n\t\t\t$scope.$watch('model', function()\n\t\t\t{\n\t\t\t\t// when the 'external' model is updated, update the 'internal' model\n\t\t\t\t$scope.searchField = $scope.model;\n\t\t\t});\n\n\t\t};\n\n\t\treturn helper;\n\t}\n\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientSearchTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.optionsTemplateUrl = 'src/common/directives/patientSearchTypeaheadOption.jsp';\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tdemographicsService.quickSearch(search).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar matches = results.data;\n\t\t\t\t\t\tvar meta = results.meta;\n\n\t\t\t\t\t\tif(meta.total > 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\t\tmoreResults: true,\n\t\t\t\t\t\t\t\ttotal: meta.total,\n\t\t\t\t\t\t\t\tsearchQuery: search\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(matches);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\tif(demographic.moreResults)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn Juno.Common.Util.formatName(demographic.firstName, demographic.lastName);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoPatientTypeahead', [\n\t'$q',\n\t'typeaheadHelper',\n\t'demographicsService',\n\n\tfunction($q, typeaheadHelper, demographicsService)\n\t{\n\t\tvar scope = typeaheadHelper.defaultTypeaheadScope();\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\ttypeaheadHelper.initTypeahead($scope);\n\n\t\t\t$scope.forceSelection = true;\n\n\t\t\t$scope.findMatches = function findMatches(search)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar params = {\n\t\t\t\t\ttype: demographicsService.SEARCH_MODE.Name,\n\t\t\t\t\tterm: search,\n\t\t\t\t\tstatus: demographicsService.STATUS_MODE.ACTIVE,\n\t\t\t\t\tintegrator: false,\n\t\t\t\t\toutofdomain: true\n\t\t\t\t};\n\t\t\t\tdemographicsService.search(params, 0, 25).then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formatMatchSelection = function formatMatchSelection(demographic)\n\t\t\t{\n\t\t\t\treturn demographic.lastName + ', ' + demographic.firstName;\n\t\t\t};\n\n\t\t\t$scope.typeaheadLabel = function(match)\n\t\t\t{\n\t\t\t\treturn $scope.formatMatchSelection(match);\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: 'src/common/directives/typeahead.jsp',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Common.Directives').directive('junoDatepickerPopup', [\n\n\tfunction()\n\t{\n\t\tvar scope = {\n\n\n\t\t};\n\n\t\tscope.model = '=junoModel';\n\t\tscope.placeholder = '@';\n\t\tscope.showIcon = '=';\n\t\tscope.disableInput = '=';\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.format = 'yyyy-MM-dd';\n\n\t\t\t$scope.dateOptions = {\n\t\t\t\tshowWeeks: false\n\t\t\t};\n\n\t\t\t$scope.opened = false;\n\n\t\t\t$scope.openDatepicker = function()\n\t\t\t{\n\t\t\t\t$scope.opened = true;\n\t\t\t};\n\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: function(elem, attribute)\n\t\t\t{\n\t\t\t\treturn 'src/common/directives/datepickerPopup' + attribute.type + '.jsp';\n\t\t\t},\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","\nrequire('jquery-ui/ui/widgets/resizable');\n\nangular.module('Common.Directives').directive('resizable', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:\n\t\t\t{\n\t\t\t\tcallback: '&onResize'\n\t\t\t},\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.resizable(\n\t\t\t\t{\n\t\t\t\t\thandles: 'n, nw, ne',\n\t\t\t\t\tminHeight: 250,\n\t\t\t\t\tminWidth: 510,\n\t\t\t\t\tmaxWidth: window.innerWidth,\n\t\t\t\t\tmaxHeight: window.innerHeight / 1.5,\n\t\t\t\t\t// containment: \"#main-body\"\n\t\t\t\t});\n\t\t\t\telem.on('resizestop', function(evt, ui)\n\t\t\t\t{\n\t\t\t\t\tif (scope.callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.callback();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\telem.on('resize', function()\n\t\t\t\t{\n\t\t\t\t\t$(\".note-editor-textarea\").css('height', elem.height() - 145 - $(\".note-editor-issues\").height());\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueAdded', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() + 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\t\t\t\t// Workaround, need to either replace JqueryUI or find a better way to account for dynamic changes to resizable div size\n\t\t\t\t// Doesn't seem to be an easy way to dynamically set minHeight appropriately\n\t\t\t\tscope.$on('noteIssueRemoved', function()\n\t\t\t\t{\n\t\t\t\t\tvar newHeight = $('#note-editor').height() - 33;\n\t\t\t\t\t$('#note-editor').height(newHeight);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t};\n\t}\n]);","angular.module('Common.Directives').directive('draggable', [\n\tfunction()\n\t{\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function postLink(scope, elem, attrs)\n\t\t\t{\n\t\t\t\telem.draggable(\n\t\t\t\t{\n\t\t\t\t\taxis: \"x\",\n\t\t\t\t\tcontainment: \"#main-body\"\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);","/*\r\n*  AngularJs Fullcalendar Wrapper for the JQuery FullCalendar\r\n*  API @ http://arshaw.com/fullcalendar/\r\n*\r\n*  Angular Calendar Directive that takes in the [eventSources] nested array object as the ng-model and watches it deeply changes.\r\n*       Can also take in multiple event urls as a source object(s) and feed the events per view.\r\n*       The calendar will watch any eventSource array and update itself when a change is made.\r\n*\r\n*/\r\n\r\n/*\r\n * Copied and modified for use at Cloudpractice because I couldn't figure out how to keep it from\r\n * loading before our initialization was done.  I've marked the changes with a CP below.\r\n */\r\n\r\nangular.module('ui.calendar', [])\r\n  .constant('uiCalendarConfig', {calendars: {}})\r\n  .controller('uiCalendarCtrl', ['$scope', \r\n                                 '$locale', function(\r\n                                  $scope, \r\n                                  $locale){\r\n\r\n      var sources = $scope.eventSources,\r\n          extraEventSignature = $scope.calendarWatchEvent ? $scope.calendarWatchEvent : angular.noop,\r\n\r\n          wrapFunctionWithScopeApply = function(functionToWrap){\r\n              return function(){\r\n                  // This may happen outside of angular context, so create one if outside.\r\n\r\n                  if ($scope.$root.$$phase) {\r\n                      return functionToWrap.apply(this, arguments);\r\n                  } else {\r\n                      var args = arguments;\r\n                      var self = this;\r\n                      return $scope.$root.$apply(function(){\r\n                          return functionToWrap.apply(self, args);\r\n                      });\r\n                  }\r\n              };\r\n          };\r\n\r\n      var eventSerialId = 1;\r\n      // @return {String} fingerprint of the event object and its properties\r\n      this.eventFingerprint = function(e) {\r\n        if (!e._id) {\r\n          e._id = eventSerialId++;\r\n        }\r\n        \r\n        var extraSignature = extraEventSignature({event: e}) || '';\r\n        var start = moment.isMoment(e.start) ? e.start.unix() : (e.start ? moment(e.start).unix() : '');\r\n        var end =   moment.isMoment(e.end)   ? e.end.unix()   : (e.end   ? moment(e.end).unix()   : '');\r\n        \r\n        // This extracts all the information we need from the event. http://jsperf.com/angular-calendar-events-fingerprint/3\r\n        return \"\" + e._id + (e.id || '') + (e.title || '') + (e.url || '') + start + end +\r\n          (e.allDay || '') + (e.className || '') + extraSignature;\r\n      };\r\n\r\n      var sourceSerialId = 1, sourceEventsSerialId = 1;\r\n      // @return {String} fingerprint of the source object and its events array\r\n      this.sourceFingerprint = function(source) {\r\n          var fp = '' + (source.__id || (source.__id = sourceSerialId++)),\r\n              events = angular.isObject(source) && source.events;\r\n          if (events) {\r\n              fp = fp + '-' + (events.__id || (events.__id = sourceEventsSerialId++));\r\n          }\r\n          return fp;\r\n      };\r\n\r\n      // @return {Array} all events from all sources\r\n      this.allEvents = function() {\r\n        // do sources.map(&:events).flatten(), but we don't have flatten\r\n        var arraySources = [];\r\n        for (var i = 0, srcLen = sources.length; i < srcLen; i++) {\r\n          var source = sources[i];\r\n          if (angular.isArray(source)) {\r\n            // event source as array\r\n            arraySources.push(source);\r\n          } else if(angular.isObject(source) && angular.isArray(source.events)){\r\n            // event source as object, ie extended form\r\n            var extEvent = {};\r\n            for(var key in source){\r\n              if(key !== '_id' && key !== 'events'){\r\n                 extEvent[key] = source[key];\r\n              }\r\n            }\r\n            for(var eI = 0;eI < source.events.length;eI++){\r\n              angular.extend(source.events[eI],extEvent);\r\n            }\r\n            arraySources.push(source.events);\r\n          }\r\n        }\r\n        return Array.prototype.concat.apply([], arraySources);\r\n      };\r\n\r\n      // Track changes in array of objects by assigning id tokens to each element and watching the scope for changes in the tokens\r\n      // @param {Array|Function} arraySource array of objects to watch\r\n      // @param tokenFn {Function} that returns the token for a given object\r\n      // @return {Object}\r\n      //  subscribe: function(scope, function(newTokens, oldTokens))\r\n      //    called when source has changed. return false to prevent individual callbacks from firing\r\n      //  onAdded/Removed/Changed:\r\n      //    when set to a callback, called each item where a respective change is detected\r\n      this.changeWatcher = function(arraySource, tokenFn) {\r\n        var self;\r\n        var getTokens = function() {\r\n          var array = angular.isFunction(arraySource) ? arraySource() : arraySource;\r\n          var result = [], token, el;\r\n          for (var i = 0, n = array.length; i < n; i++) {\r\n            el = array[i];\r\n            token = tokenFn(el);\r\n            map[token] = el;\r\n            result.push(token);\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // @param {Array} a\r\n        // @param {Array} b\r\n        // @return {Array} elements in that are in a but not in b\r\n        // @example\r\n        //  subtractAsSets([6, 100, 4, 5], [4, 5, 7]) // [6, 100]\r\n        var subtractAsSets = function(a, b) {\r\n          var result = [], inB = {}, i, n;\r\n          for (i = 0, n = b.length; i < n; i++) {\r\n            inB[b[i]] = true;\r\n          }\r\n          for (i = 0, n = a.length; i < n; i++) {\r\n            if (!inB[a[i]]) {\r\n              result.push(a[i]);\r\n            }\r\n          }\r\n          return result;\r\n        };\r\n\r\n        // Map objects to tokens and vice-versa\r\n        var map = {};\r\n\r\n        // Compare newTokens to oldTokens and call onAdded, onRemoved, and onChanged handlers for each affected event respectively.\r\n        var applyChanges = function(newTokens, oldTokens) {\r\n          var i, n, el, token;\r\n          var replacedTokens = {};\r\n          var removedTokens = subtractAsSets(oldTokens, newTokens);\r\n          for (i = 0, n = removedTokens.length; i < n; i++) {\r\n            var removedToken = removedTokens[i];\r\n            el = map[removedToken];\r\n            delete map[removedToken];\r\n            var newToken = tokenFn(el);\r\n            // if the element wasn't removed but simply got a new token, its old token will be different from the current one\r\n            if (newToken === removedToken) {\r\n              self.onRemoved(el);\r\n            } else {\r\n              replacedTokens[newToken] = removedToken;\r\n              self.onChanged(el);\r\n            }\r\n          }\r\n\r\n          var addedTokens = subtractAsSets(newTokens, oldTokens);\r\n          for (i = 0, n = addedTokens.length; i < n; i++) {\r\n            token = addedTokens[i];\r\n            el = map[token];\r\n            if (!replacedTokens[token]) {\r\n              self.onAdded(el);\r\n            }\r\n          }\r\n        };\r\n        return self = {\r\n          subscribe: function(scope, onArrayChanged) {\r\n            scope.$watch(getTokens, function(newTokens, oldTokens) {\r\n              var notify = !(onArrayChanged && onArrayChanged(newTokens, oldTokens) === false);\r\n              if (notify) {\r\n                applyChanges(newTokens, oldTokens);\r\n              }\r\n            }, true);\r\n          },\r\n          onAdded: angular.noop,\r\n          onChanged: angular.noop,\r\n          onRemoved: angular.noop\r\n        };\r\n      };\r\n\r\n      this.getFullCalendarConfig = function(calendarSettings, uiCalendarConfig){\r\n          var config = {};\r\n\r\n          angular.extend(config, uiCalendarConfig);\r\n          angular.extend(config, calendarSettings);\r\n\r\n          angular.forEach(config, function(value,key){\r\n            if (typeof value === 'function'){\r\n              config[key] = wrapFunctionWithScopeApply(config[key]);\r\n            }\r\n          });\r\n\r\n          return config;\r\n      };\r\n\r\n    this.getLocaleConfig = function(fullCalendarConfig) {\r\n      if (!fullCalendarConfig.lang || fullCalendarConfig.useNgLocale) {\r\n        // Configure to use locale names by default\r\n        var tValues = function(data) {\r\n          // convert {0: \"Jan\", 1: \"Feb\", ...} to [\"Jan\", \"Feb\", ...]\r\n          var r, k;\r\n          r = [];\r\n          for (k in data) {\r\n            r[k] = data[k];\r\n          }\r\n          return r;\r\n        };\r\n        var dtf = $locale.DATETIME_FORMATS;\r\n        return {\r\n          monthNames: tValues(dtf.MONTH),\r\n          monthNamesShort: tValues(dtf.SHORTMONTH),\r\n          dayNames: tValues(dtf.DAY),\r\n          dayNamesShort: tValues(dtf.SHORTDAY)\r\n        };\r\n      }\r\n      return {};\r\n    };\r\n  }])\r\n  .directive('uiCalendar', ['uiCalendarConfig', function(uiCalendarConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        eventSources:'=ngModel',\r\n        calendarWatchEvent: '&',\r\n        enabled: '=ngEnabled'     // CP: Added an option to enable the calendar\r\n      },\r\n      controller: 'uiCalendarCtrl',\r\n      link: function(scope, elm, attrs, controller) {\r\n\r\n        var sources = scope.eventSources,\r\n            sourcesChanged = false,\r\n            calendar,\r\n            eventSourcesWatcher = controller.changeWatcher(sources, controller.sourceFingerprint),\r\n            eventsWatcher = controller.changeWatcher(controller.allEvents, controller.eventFingerprint),\r\n            options = null;\r\n\r\n        function getOptions(){\r\n          var calendarSettings = attrs.uiCalendar ? scope.$parent.$eval(attrs.uiCalendar) : {},\r\n              fullCalendarConfig;\r\n\r\n          fullCalendarConfig = controller.getFullCalendarConfig(calendarSettings, uiCalendarConfig);\r\n\r\n          var localeFullCalendarConfig = controller.getLocaleConfig(fullCalendarConfig);\r\n          angular.extend(localeFullCalendarConfig, fullCalendarConfig);\r\n          options = { eventSources: sources };\r\n          angular.extend(options, localeFullCalendarConfig);\r\n          //remove calendars from options\r\n          options.calendars = null;\r\n\r\n          var options2 = {};\r\n          for(var o in options){\r\n            if(o !== 'eventSources'){\r\n              options2[o] = options[o];\r\n            }\r\n          }\r\n          return JSON.stringify(options2);\r\n        }\r\n\r\n        scope.destroyCalendar = function(){\r\n          if(calendar && calendar.fullCalendar){\r\n            calendar.fullCalendar('destroy');\r\n          }\r\n          if(attrs.calendar) {\r\n            calendar = uiCalendarConfig.calendars[attrs.calendar] = $(elm).html('');\r\n          } else {\r\n            calendar = $(elm).html('');\r\n          }\r\n        };\r\n\r\n        scope.initCalendar = function(){\r\n          // CP: The calendar won't initialize when it's not enabled\r\n          if(scope.enabled) {\r\n\t\t    if (!calendar) {\r\n\t\t      calendar = angular.element(elm).html('');\r\n\t\t    }\r\n\t\t    calendar.fullCalendar(options);\r\n\t\t    if(attrs.calendar) {\r\n\t\t      uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n\t\t    }\r\n\t\t  }\r\n        };\r\n        scope.$on('$destroy', function() {\r\n          scope.destroyCalendar();\r\n        });\r\n\r\n        eventSourcesWatcher.onAdded = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar(options);\r\n            if (attrs.calendar) {\r\n                uiCalendarConfig.calendars[attrs.calendar] = calendar;\r\n            }\r\n            calendar.fullCalendar('addEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onRemoved = function(source) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEventSource', source);\r\n            sourcesChanged = true;\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.onChanged = function() {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('refetchEvents');\r\n            sourcesChanged = true;\r\n          }\r\n\r\n        };\r\n\r\n        eventsWatcher.onAdded = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('renderEvent', event, (event.stick ? true : false));\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onRemoved = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            calendar.fullCalendar('removeEvents', event._id);\r\n          }\r\n        };\r\n\r\n        eventsWatcher.onChanged = function(event) {\r\n          if (calendar && calendar.fullCalendar) {\r\n            var clientEvents = calendar.fullCalendar('clientEvents', event._id);\r\n            for (var i = 0; i < clientEvents.length; i++) {\r\n              var clientEvent = clientEvents[i];\r\n              clientEvent = angular.extend(clientEvent, event);\r\n              calendar.fullCalendar('updateEvent', clientEvent);\r\n            }\r\n          }\r\n        };\r\n\r\n        eventSourcesWatcher.subscribe(scope);\r\n        eventsWatcher.subscribe(scope, function() {\r\n          if (sourcesChanged === true) {\r\n            sourcesChanged = false;\r\n            // return false to prevent onAdded/Removed/Changed handlers from firing in this case\r\n            return false;\r\n          }\r\n        });\r\n\r\n        scope.$watch(getOptions, function(newValue, oldValue) {\r\n          if(newValue !== oldValue) {\r\n            scope.destroyCalendar();\r\n            scope.initCalendar();\r\n          } else if((newValue && angular.isUndefined(calendar))) {\r\n            scope.initCalendar();\r\n          }\r\n        });\r\n      }\r\n    };\r\n}]);\r\n","'use strict';\n\n/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nangular.module('Common.Directives').directive('selectOptionTooltip', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\tconsole.log(\"CUSTOM SELECT TOOLTIP LOADED\");\n\n\t\tvar linkFunction = function link_function($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.addCustomAttr = function (attr, element, data, fnDisableIfTrue)\n\t\t\t{\n\t\t\t\t$(\"option\", element).each(function (i, e)\n\t\t\t\t{\n\t\t\t\t\tvar locals = {};\n\t\t\t\t\tlocals[attr] = data[i];\n\t\t\t\t\t$(e).attr('title', fnDisableIfTrue($scope, locals));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar expElements = attribute['selectOptionTooltip'].match(/(.+)\\s+for\\s+(.+)\\s+in\\s+(.+)/);\n\t\t\tvar attrToWatch = expElements[3];\n\t\t\tvar fnDisableIfTrue = $parse(expElements[1]);\n\n\t\t\t$scope.$watchCollection(attrToWatch, function (newValue)\n\t\t\t{\n\t\t\t\tif (newValue)\n\t\t\t\t\t$scope.addCustomAttr(expElements[2], element, newValue, fnDisableIfTrue);\n\t\t\t});\n\t\t};\n\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\trequire: 'ngModel',\n\t\t\treplace: true,\n\t\t\tlink: linkFunction\n\t\t};\n\n\t}\n]);","angular.module('Common').directive(\n\t'junoAppointmentStatusSelect',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'scheduleService',\n\n\tfunction(\n\t\t$timeout,\n\t\thelper,\n\t\tscheduleService,\n\t)\n\t{\n\t\tvar scope = angular.copy(helper.default_scope);\n\n\t\tscope.options = '=caOptions';\n\t\tscope.include_empty_option = '@caEmptyOption';\n\t\tscope.no_label = '@caNoLabel';\n\n\t\tvar template_function = function template_function(element, attributes)\n\t\t{\n\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/appointment/juno_appointment_status_select');\n\t\t};\n\n\t\tvar linkFunction = function linkFunction($scope, element, attribute, controller)\n\t\t{\n\t\t\t$scope.select_change_fn = function select_change_fn()\n\t\t\t{\n\t\t\t\t$scope.setStatus();\n\n\t\t\t\t// call the custom ng-change function\n\t\t\t\t$timeout(function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t});\n\t\t\t};\n\t\t\t$scope.button_change_fn = function button_change_fn()\n\t\t\t{\n\t\t\t\t$scope.model = scheduleService.getNextRotateStatus($scope.model);\n\t\t\t\t$scope.setStatus();\n\n\t\t\t\t// call the custom ng-change function\n\t\t\t\t$timeout(function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t});\n\t\t\t};\n\t\t\t$scope.setStatus = function setStatus()\n\t\t\t{\n\t\t\t\tvar model = $scope.model;\n\t\t\t\tvar option = $scope.options[model];\n\t\t\t\tvar statusElem = element.find(\".icon\");\n\n\t\t\t\t// remove old status icon class\n\t\t\t\tstatusElem.removeClass(function (index, className)\n\t\t\t\t{\n\t\t\t\t\treturn (className.match(/(^|\\s)icon-\\S+/g) || []).join(' ');\n\t\t\t\t});\n\n\t\t\t\tif(Juno.Common.Util.exists(option))\n\t\t\t\t{\n\t\t\t\t\telement.find(\".directive-appt-status-select\").css(\"background-color\", option.color);\n\t\t\t\t\tvar statusIcon = option.icon.substr(0, option.icon.indexOf('.'));\n\t\t\t\t\tstatusElem.addClass(\"icon-\" + statusIcon);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$scope.setStatus();\n\n\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'EAC',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: template_function,\n\t\t\treplace: true,\n\t\t\tlink: linkFunction,\n\t\t\tcontroller: helper.default_controller\n\t\t};\n\t}\n]);\n","angular.module('Common').directive(\n\t'caFieldAlphadate',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alphadate');\n\t};\n\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.placeholder = '@caPlaceholder';\n\n\tvar alphadate_link_function = function alphadate_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t// use the passed-in placeholder or default to 'yyyy-mm-dd'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'yyyy-mm-dd';\n\t\t}\n\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// parse the input as a date, then format as YYYY-MM-DD (or clear it)\n\t\t\tvar momentDate = moment($scope.model, [\"YYYY-MM-DD\", \"YYYYMMDD\"], true);\n\t\t\tif(momentDate.isValid())\n\t\t\t{\n\t\t\t\t$scope.model = momentDate.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.model = null;\n\t\t\t}\n\t\t};\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: alphadate_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAlpha',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction (\n\t\thelper\n\t)\n{\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_alpha');\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldAutocomplete',\n\n\t[\n\t\t'$q',\n\t\t'globalStateService',\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\t\t'autoCompleteService',\n\t\t'resultsService',\n\t\t'focusService',\n\n\tfunction($q, global_state, $timeout, helper, autocomplete, results_factory, focus)\n{\n\tvar min_length_zero_types = [\n\t\t'yes_no_boolean',\n\t\t'gender',\n\t\t'schedule',\n\t\t'schedule_type',\n\t\t'schedule_template',\n\t\t'schedule_event_status',\n\t\t'user_roles',\n\t\t'user_type',\n\t\t'province',\n\t\t'country',\n\t\t'custom_tax',\n\t\t'alberta_location_code',\n\t\t'alberta_default_time_role_modifier',\n\t\t'service_modifier',\n\t\t'ontario_office_code',\n\t\t'ontario_service_location_indicator',\n\t\t'bc_service_location_code',\n\t\t'bc_referral_code',\n\t\t'sask_clinic',\n\t\t'sask_oop_province',\n\t\t'sask_mode',\n\t\t'sask_location_of_service',\n\t\t'sask_location_of_service_short',\n\t\t'sask_corporation_indicator',\n\t\t'sask_submission_type',\n\t\t'sask_submission_file',\n\t\t'provider' ];\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.placeholder = '@caPlaceholder';\n\tscope.input_group_class = '@caInputGroupClass';\n\n\t// must be a valid generic_ref type\n\tscope.autocomplete_type = '@caAutocompleteType';\n\n\t// Extra params to pass in the REST call\n\tscope.params = '=caParams';\n\tscope.params_fn = '&caParamsFn';\n\n\t// the on-select function to call, and if applicable, additional data to pass into it\n\tscope.on_select_fn = '&caOnSelect';\n\tscope.on_select_data = '=caOnSelectData';\n\n\t// the clear function to call, and if applicable, data to pass into it\n\tscope.on_clear_fn = '&caClear';\n\tscope.on_clear_data = '=caClearData';\n\n\t// the create function to call\n\t// create option will only appear if function is provided and create_if is met (if also provided)\n\t// and there is no selected autocomplete value\n\tscope.on_create_fn = '&caCreate';\n\tscope.create_if = '=caCreateIf';\n\n\t// the modify function to call\n\t// modify option will only appear if function is provided and modify_if is met (if also provided)\n\t// and there is a selected autocomplete value\n\tscope.on_modify_fn = '&caModify';\n\tscope.modify_if = '=caModifyIf';\n\tscope.create_on_not_found = '=?caCreateOnNotFound';\n\tscope.editable = '=?caEditable';\n\n\t// List of records to exclude from the results. EG These items are already linked\n\t// Must be an array of pojo models\n\tscope.ca_exclude_list = '=caExcludeList';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'code/common/directives/ca_field_autocomplete');\n\t};\n\n\tvar autocomplete_link_function = function autocomplete_link_function(\n\t\t$scope, element, attribute, controller)\n\t{\n\t\t$scope.autocomplete = autocomplete;\n\t\t$scope.search_field = null;\n\n\t\tif(!angular.isDefined($scope.model))\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.create_on_not_found))\n\t\t{\n\t\t\t$scope.create_on_not_found = false;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.editable))\n\t\t{\n\t\t\t$scope.editable = false;\n\t\t}\n\n\t\t// ensure autocomplete type is either a listed dao or defined in GenericRef\n\t\tif(Object.keys($scope.autocomplete.dao_map).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1 &&\n\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS).indexOf(\n\t\t\t\t\t$scope.autocomplete_type) == -1)\n\t\t{\n\t\t\tconsole.log(\"invalid autocomplete type:\", $scope.autocomplete_type,\n\t\t\t\t\"valid values: (\" ,\n\t\t\t\t\tObject.keys($scope.autocomplete.dao_map),\n\t\t\t\t\tObject.keys(Clinicaid.Model.GenericRef.REF_DEFINITIONS));\n\t\t\treturn;\n\t\t}\n\n\t\t// default min-length is 1 except for some types\n\t\t$scope.autocomplete_min_length =\n\t\t\t(min_length_zero_types.indexOf($scope.autocomplete_type) != -1) ? 0 : 1;\n\n\t\t// use the passed-in placeholder or default to 'Search...'\n\t\t$scope.input_placeholder = $scope.placeholder;\n\t\tif(!angular.isDefined($scope.input_placeholder))\n\t\t{\n\t\t\t$scope.input_placeholder = 'Search...';\n\t\t}\n\n\t\t// clear function:\n\t\t// call the passed-in function with the passed-in data\n\t\t$scope.clear_autocomplete_search = function clear_autocomplete_search()\n\t\t{\n\t\t\t$scope.search_field = null;\n\t\t};\n\n\t\t$scope.clear_autocomplete_model = function clear_autocomplete_model(focus_input)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t\tif(angular.isFunction($scope.on_clear_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_clear_fn()($scope.on_clear_data);\n\t\t\t}\n\n\t\t\tif(focus_input)\n\t\t\t{\n\t\t\t\tfocus.element(element.find('input'));\n\t\t\t}\n\t\t};\n\n\t\t// select function:\n\t\t// call the passed-in function with the autocomplete and passed-in data\n\t\t$scope.on_select = function on_select($item, $model, $label, $event)\n\t\t{\n\t\t\t$scope.model = $item;\n\t\t\t$scope.change_fn();\n\t\t\tif(angular.isFunction($scope.on_select_fn()))\n\t\t\t{\n\t\t\t\t$scope.on_select_fn()($item, $model, $label, $event, $scope.on_select_data);\n\t\t\t}\n\t\t};\n\n\t\t$scope.create_on_not_found_fn = function create_on_not_found_fn(temp_model)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(temp_model))\n\t\t\t{\n\t\t\t\t$scope.autocomplete.create_on_not_found(\n\t\t\t\t\t\ttemp_model, $scope.autocomplete_type, true).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.on_select(results.data, results.data, null, null, $scope.on_select_data);\n\t\t\t\t\t\t\tif (angular.isFunction($scope.change_fn))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.change_fn();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('error:', errors);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.on_change = function on_change()\n\t\t{\n\t\t\tif(!$scope.editable)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar temp_model = $scope.autocomplete.build_model_object(\n\t\t\t\t\t$scope.autocomplete_type, $scope.search_field);\n\n\t\t\t$scope.on_select(temp_model, temp_model, null, null, $scope.on_select_data);\n\n\t\t\tif ($scope.create_on_not_found)\n\t\t\t{\n\t\t\t\t$scope.create_on_not_found_fn(temp_model);\n\t\t\t}\n\t\t};\n\n\t\t// blur function\n\t\t$scope.on_blur = function on_blur()\n\t\t{\n\t\t\t// this is for the case when the user does a search and then blurs the field:\n\t\t\t// if the value is null, call the clear function (since the select function doesn't fire)\n\t\t\tif($scope.model == null)\n\t\t\t{\n\t\t\t\t$scope.clear_autocomplete_model();\n\t\t\t\t$scope.clear_autocomplete_search();\n\n\t\t\t\t// only run the change function if the model existed when the autocomplete was last focused\n\t\t\t\tif(Juno.Common.Util.exists($scope.model_on_focus) &&\n\t\t\t\t\tangular.isFunction($scope.change_fn))\n\t\t\t\t{\n\t\t\t\t\t$scope.change_fn();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif (angular.isFunction($scope.blur_fn))\n\t\t\t{\n\t\t\t\t$scope.blur_fn();\n\t\t\t}\n\t\t};\n\n\t\t// on focus\n\t\t$scope.on_focus = function on_focus()\n\t\t{\n\t\t\t// make a copy of the current model (needed for comparison on_blur)\n\t\t\t$scope.model_on_focus = angular.copy($scope.model);\n\n\t\t\t// call the passed-in function, if provided\n\t\t\tif(angular.isFunction($scope.focus_fn))\n\t\t\t{\n\t\t\t\t$scope.focus_fn();\n\t\t\t}\n\t\t};\n\n\t\t// create function: call the passed-in function, if provided\n\t\t$scope.on_create = null;\n\t\tif(angular.isFunction($scope.on_create_fn()))\n\t\t{\n\t\t\t$scope.on_create = function on_create()\n\t\t\t{\n\t\t\t\t$scope.on_create_fn()();\n\t\t\t};\n\t\t}\n\n\t\t// modify function: call the passed-in function, if provided\n\t\t$scope.on_modify = null;\n\t\tif(angular.isFunction($scope.on_modify_fn()))\n\t\t{\n\t\t\t$scope.on_modify = function on_modify()\n\t\t\t{\n\t\t\t\t$scope.on_modify_fn()();\n\t\t\t};\n\t\t}\n\t\t$scope.show_modify_if = (typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\n\t\t// autocomplete search: invoke configured function\n\t\t$scope.autocomplete_items = function autocomplete_items($viewValue)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar params = $scope.params ? $scope.params : {};\n\t\t\tif(angular.isFunction($scope.params_fn))\n\t\t\t{\n\t\t\t\t// If the params_fn definition has arguments, $scope.params_fn() with return the results.\n\t\t\t\t// If it doesnt have armuments it returns a reference to the funciton which still needs\n\t\t\t\t// to be executed to get the results\n\t\t\t\tvar params_check = $scope.params_fn();\n\t\t\t\tif(angular.isFunction(params_check))\n\t\t\t\t{\n\t\t\t\t\tparams_check = params_check();\n\t\t\t\t}\n\t\t\t\tangular.extend(params, params_check);\n\t\t\t}\n\n\t\t\tautocomplete.get_items($scope.autocomplete_type, $viewValue, params).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar out_items = results.data;\n\t\t\t\t\t\tif(Juno.Common.Util.exists($scope.ca_exclude_list))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout_items = $scope.prune_items(out_items);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(out_items);\n\t\t\t\t\t}, function error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.reject(errors)\n\t\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.prune_items = function prune_items(items)\n\t\t{\n\t\t\tvar out_items = [];\n\t\t\tfor(var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tvar in_list = false;\n\t\t\t\tfor(var ii = 0; ii < $scope.ca_exclude_list.length; ii++)\n\t\t\t\t{\n\t\t\t\t\tvar exclude_item = $scope.ca_exclude_list[ii];\n\t\t\t\t\tif(typeof(exclude_item) == 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] == exclude_item)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tif(items[i].data[items[i].value_field] ==\n\t\t\t\t\t\t\t\texclude_item.data[$scope.ca_exclude_list[ii].value_field])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tin_list = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!in_list)\n\t\t\t\t{\n\t\t\t\t\tout_items.push(items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out_items;\n\t\t};\n\n\t\t// autocomplete format: format the selection for display in the box\n\t\t$scope.autocomplete_input_formatter = function autocomplete_input_formatter($model)\n\t\t{\n\t\t\treturn $model != null ? $model.autocomplete_input_formatted : null;\n\t\t};\n\n\t\t// show the create button?\n\t\t$scope.show_create = function show_create()\n\t\t{\n\t\t\treturn $scope.on_create && !$scope.model &&\n\t\t\t\t(typeof $scope.create_if === 'undefined' || $scope.create_if);\n\t\t};\n\n\t\t// show the modify button?\n\t\t$scope.show_modify = function show_modify()\n\t\t{\n\t\t\treturn $scope.on_modify && $scope.model && !$scope.model.dummy_record &&\n\t\t\t\t(typeof $scope.modify_if === 'undefined' || $scope.modify_if);\n\t\t};\n\n\t\t// show the buttons?\n\t\t$scope.show_buttons = function show_buttons()\n\t\t{\n\t\t\treturn !$scope.disabled && ($scope.model || $scope.show_create());\n\t\t};\n\n\t\t// required for initialization of the search field value:\n\t\t// the directive is created before the model is populated\n\t\t$scope.$watch('model', function(new_value, old_value)\n\t\t{\n\t\t\t$scope.search_field = $scope.model;\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: autocomplete_link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldBoolean',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_boolean');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.model))\n\t\t{\n\t\t\t$scope.model = false;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t\t'caFieldButtonGroup',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t\t\t\t\t$scope.selected_values = [$scope.field_default];\n\n\t\t\t\t\t$scope.is_selected = function is_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope.selected_values.indexOf(value) != -1;\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.toggle_selected = function toggle_selected(value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar value_index = $scope.selected_values.indexOf(value);\n\t\t\t\t\t\tif(value_index == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.selected_values.splice(value_index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.model = $scope.selected_values.join(\",\");\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.field_settings = '=caFieldSettings';\n\t\t\t\tscope.field_default = '=caFieldDefault';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_button_group.jsp',\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","angular.module('Common').directive(\n\t'caFieldColor', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n    return {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_color.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller, \n\t};\n}]);\n","angular.module('Common').directive(\n\t'caFieldCurrencyFilter',\n\t[\n\t\t'$filter',\n\t\tfunction ($filter)\n\t\t{\n\t\t\tvar link_function = function link_function(scope, element, attribute, ngModelController)\n\t\t\t{\n\t\t\t\tngModelController.$parsers.push(\n\t\t\t\t\tfunction fromUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tempValue = text.replace(/[$,]/g, '');\n\t\t\t\t\t\tif (tempValue.trim() == \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttempValue = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newValue = parseFloat(tempValue).toFixed(4);\n\t\t\t\t\t\tif (isNaN(newValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewValue = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\n\t\t\t\tngModelController.$formatters.unshift(\n\t\t\t\t\tfunction toUser(text)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (text == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar currencyFilter = $filter('myCurrencyFilter');\n\t\t\t\t\t\tvar newValue = currencyFilter(text);\n\n\t\t\t\t\t\treturn newValue;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\trequire: 'ngModel',\n\t\t\t\trestrict: 'EAC',\n\t\t\t\tlink: link_function\n\t\t\t};\n\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caFieldCurrency', \n\n\t[\n\t\t'fieldHelperService', \n\n\tfunction(\n\t\thelper\n\t)\n{\n\t\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: helper.default_scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_currency.jsp',\n\t\treplace: true,\n\t\tlink: helper.default_link_function,\n\t\tcontroller: helper.default_controller \n\t};\n\t\n}]);\n","angular.module('Common').directive(\n\t'caFieldDate3',\n\n\t[\n\t\t'$timeout',\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\t$timeout, helper\n\t)\n{\n\tvar default_scope = angular.copy(helper.default_scope);\n\n\tdelete default_scope.focus_fn;\n\tdefault_scope.on_focus_fn_year = '&caFocusYear';\n\tdefault_scope.on_focus_fn_month = '&caFocusMonth';\n\tdefault_scope.on_focus_fn_day = '&caFocusDay';\n\n\tvar get_date = function get_date(new_value, old_value, $scope)\n\t{\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\tif(!new_value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar date_part_array = new_value.split('-');\n\n\t\tif(angular.isDefined(date_part_array[0]))\n\t\t{\n\t\t\t$scope.field_year = date_part_array[0];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[1]))\n\t\t{\n\t\t\t$scope.field_month = date_part_array[1];\n\t\t}\n\n\t\tif(angular.isDefined(date_part_array[2]))\n\t\t{\n\t\t\t$scope.field_day = date_part_array[2];\n\t\t}\n\t};\n\n\tvar put_date = function put_date(new_value, old_value, $scope)\n\t{\n\t\tif(!$scope.field_year && !$scope.field_month && !$scope.field_day)\n\t\t{\n\t\t\t$scope.model = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope.model = $scope.field_year + '-' +\n\t\t\t\t$scope.field_month + '-' +\n\t\t\t\t$scope.field_day;\n\t\t}\n\t};\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_date3');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t// Don't call the helper default link function, we want to do it differently\n\t\t// We do still need to merge the title messages though\n\t\thelper.merge_title_messages($scope);\n\n\t\t$scope.field_year = '';\n\t\t$scope.field_month = '';\n\t\t$scope.field_day = '';\n\n\t\t// wrap each of the focus functions the same way as the field_helper\n\n\t\t$scope.focus_fn_year = function focus_fn_year()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_year))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_year();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_month = function focus_fn_month()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_month))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_month();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.focus_fn_day = function focus_fn_day()\n\t\t{\n\t\t\tif(angular.isFunction($scope.on_focus_fn_day))\n\t\t\t{\n\t\t\t\t// only call the focus function if the field still has focus after a timeout\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.on_focus_fn_day();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('focus_field',\n\t\t\tfunction update_focus(new_value, old_value, $scope)\n\t\t{\n\t\t\tif($scope.focus_field == $scope.name + \"[year]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[month]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(1).focus().select();\n\t\t\t}\n\t\t\telse if($scope.focus_field == $scope.name + \"[day]\")\n\t\t\t{\n\t\t\t\t// Focus the input element\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(2).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists($scope.name) && $scope.name == focus)\n\t\t\t{\n\t\t\t\t$(element).find(\".ca-field-date3 input\").get(0).focus().select();\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('model', get_date);\n\n\t\t$scope.$watch('field_year', put_date);\n\t\t$scope.$watch('field_month', put_date);\n\t\t$scope.$watch('field_day', put_date);\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: default_scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n"," angular.module('Common').directive(\n 'caFieldDate',\n\n [\n\t '$compile',\n\t '$timeout',\n\t 'fieldHelperService',\n\n\t function(\n\t\t $compile,\n\t\t $timeout,\n\t\t helper\n\t )\n {\n\t var scope = angular.copy(helper.default_scope);\n\n\t scope.date_picker_id = '@caDatePickerId';\n\t scope.orientation = '@caOrientation';\n\t scope.use_multi_date = '@caUseMultiDate';\n\t scope.container_id = '@caContainerId';\n\t scope.no_label = '@caNoLabel';\n\n\t var template_function = function template_function(element, attributes) {\n\t\t if(attributes['caTemplate'] == 'bare')\n\t\t {\n\t\t\t return 'src/common/directives/clinicaid/ca_field_date_bare.jsp';\n\t\t }\n\t\t return 'src/common/directives/clinicaid/ca_field_date.jsp';\n\t };\n\n\t var link_function = function link_function($scope, element, attribute, controller)\n\t {\n\t\t // Creating the datepicker changes the value of the ng-model and fires the\n\t\t // ng-change event. This disables the event until the field initialization is complete\n\t\t $scope.initialization_complete = false;\n\t\t $scope.delayed_change_fn = function()\n\t\t {\n\t\t\t if($scope.initialization_complete === true)\n\t\t\t {\n\t\t\t\t $scope.change_fn();\n\t\t\t }\n\t\t };\n\n\t\t helper.merge_title_messages($scope);\n\n\t\t $scope.datepicker = null;\n\t\t $scope.is_multi_date = false;\n\t\t $scope.CTRL_KEY = 17;\n\t\t $scope.LEFT_SHIFT_KEY = 16;\n\t\t $scope.ctrl_key_down = false;\n\t\t $scope.shift_key_down = false;\n\t\t $scope.is_visible = false;\n\n\t\t // Default container for datepicker is \"body\", but can be overridden\n\t\t $scope.container = $(\"body\");\n\t\t if(!$scope.container_id)\n\t\t {\n\t\t\t $scope.container = $(\"#\" + $scope.container_id);\n\t\t }\n\n\t\t var buttons_html_with_picker = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-class=\\\"{active: is_multi_date}\\\" ng-click='toggle_multi()' colspan='2' class='multi'>Multi</th>\" +\n\t\t\t\t //\"<th style='display: table-cell;' colspan='3' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' ng-click='close_date_picker()' colspan='3' class='multi'>Close</th>\" +\n\t\t\t\t\t //\t\"class='close'>Close</th></tr></tfoot>\";\n\t\t\t\t \"<th style='display: table-cell;' colspan='2' class='clear'>Clear</th></tr>\";\n\n\t\t var buttons_html = \"<tfoot><tr>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='4' class='today'>Today</th>\" +\n\t\t\t\t \"<th style='display: table-cell;' colspan='3' class='clear'>Clear</th></tr>\";\n\t\t\t\t //\"<tr class='close'><th style='display: table-cell;' ng-click='close_date_picker()' colspan='7' \" +\n\t\t \t\t\t//\t\"class='close'>Close</th></tr></tfoot>\";\n\n\t\t $scope.create_datepicker = function create_datepicker()\n\t\t {\n\t\t\t // Build datepicker. By default put it in the <body> tag so that it is\n\t\t\t // placed correctly and is always on top. They container can be overridden\n\t\t\t // though.\n\t\t\t if($scope.container_id == null)\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker({\n\t\t\t\t\t multidate: $scope.is_multi_date,\n\t\t\t\t\t autoclose: !$scope.is_multi_date,\n\t\t\t\t\t todayHighlight: true,\n\t\t\t\t\t todayBtn: 'linked',\n\t\t\t\t\t clearBtn: true,\n\t\t\t\t\t toggleActive: $scope.is_multi_date,\n\t\t\t\t\t orientation: $scope.orientation,\n\t\t\t\t\t format: 'yyyy-mm-dd',\n\t\t\t\t\t container: '#' + $scope.container_id,\n\t\t\t\t\t showOnFocus: false,\n\t\t\t\t\t keyboardNavigation: false\n\t\t\t\t });\n\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker().on('show', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = true;\n\t\t\t });\n\n\t\t\t $scope.datepicker.datepicker().on('hide', function ()\n\t\t\t {\n\t\t\t\t $scope.is_visible = false;\n\t\t\t });\n\t\t };\n\n\t\t $scope.toggle_multi = function toggle_multi(force_true, input_string)\n\t\t {\n\t\t\t if($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t $scope.is_multi_date = force_true || !$scope.is_multi_date;\n\t\t\t\t $scope.datepicker.datepicker('remove');\n\t\t\t\t $scope.create_datepicker();\n\t\t\t\t $scope.datepicker.datepicker('show');\n\n\t\t\t\t // Datepicker forces valid dates on the input box when the datepicker opens. This breaks\n\t\t\t\t // manual entry when you istart to enter a second date and auto switch to multi date mode.\n\t\t\t\t // We put the date string back in after the parse occurs, to account for this\n\t\t\t\t if(input_string && input_string.length > 0)\n\t\t\t\t {\n\t\t\t\t\t element.find(\"input\").val(input_string);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // We assume the client is done picking multiple dates when they release control\n\t\t // Close the datepicker\n\t\t $scope.key_up = function key_up(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date if a date seperator (comma) is entered\n\t\t\t\t if (!$scope.is_multi_date)\n\t\t\t\t {\n\t\t\t\t\t var input_value = element.find(\"input\").val();\n\t\t\t\t\t if (input_value.search(\",\") != -1)\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.toggle_multi(true, input_value);\n\t\t\t\t\t }\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.ctrl_key_down = false;\n\t\t\t\t }\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.close_date_picker(event);\n\t\t\t\t\t $scope.shift_key_down = false;\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t // Switch to multi-date mode when control or shift is pressed\n\t\t $scope.key_down = function key_down(event)\n\t\t {\n\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t {\n\t\t\t\t // Switch to multi-date when ctrl is pressed. For selecting arbitrary dates\n\t\t\t\t if ($scope.ctrl_key_down)\n\t\t\t\t {\n\t\t\t\t\t return;\n\t\t\t\t }\n\n\t\t\t\t if (event.keyCode == $scope.CTRL_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.ctrl_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t\t // Switch to multi-date when shift. For selecting date ranges. NOT IMPLEMENTED\n\t\t\t\t else if (event.keyCode == $scope.LEFT_SHIFT_KEY)\n\t\t\t\t {\n\t\t\t\t\t $scope.shift_key_down = true;\n\t\t\t\t\t $scope.toggle_multi(true);\n\t\t\t\t }\n\t\t\t }\n\t\t };\n\n\t\t $scope.on_focus = function on_focus(event)\n\t\t {\n\t\t\t // Prevent toggling datepicker on click and on focus\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\n\t\t\t $scope.focus_fn();\n\t\t };\n\n\t\t $scope.on_click = function on_click(event)\n\t\t {\n\t\t\t // Toggle datepicker open/closed\n\t\t\t if(!$scope.is_visible)\n\t\t\t {\n\t\t\t\t $scope.open_date_picker(event);\n\t\t\t }\n\t\t };\n\n\t\t $scope.open_date_picker = function open_date_picker(event)\n\t\t {\n\t\t\t var dates = element.find(\"input\").val().split(',');\n\t\t\t var new_is_multi_date = false;\n\n\t\t\t // Use whatever dates are in the input box when opening datepicker\n\t\t\t if(dates && dates.length > 1)\n\t\t\t {\n\t\t\t\t new_is_multi_date = true;\n\t\t\t }\n\n\t\t\t $scope.datepicker.datepicker('setDates', dates);\n\n\t\t\t // Switch between multi date and single date picker depending on number of dates in\n\t\t\t // input box\n\t\t\t if($scope.use_multi_date == 'true' && new_is_multi_date != $scope.is_multi_date)\n\t\t\t {\n\t\t\t\t $scope.toggle_multi();\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t\t $scope.datepicker.datepicker('show');\n\t\t\t }\n\t\t };\n\n\t\t $scope.close_date_picker = function close_date_picker(event)\n\t\t {\n\t\t\t $scope.datepicker.datepicker('hide');\n\t\t };\n\n\t\t // wrap focus function the same way as the field_helper\n\t\t $scope.focus_fn = function on_focus()\n\t\t {\n\t\t\t if(angular.isFunction($scope.on_focus_fn))\n\t\t\t {\n\t\t\t\t // only call the focus function if the field still has focus after a timeout\n\t\t\t\t $timeout(function() {\n\t\t\t\t\t if($(element).find(\" input:enabled, select:enabled, textarea:enabled \").is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t $scope.on_focus_fn();\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t console.log('ignoring on focus function - element is no longer in focus', $scope.name)\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\t\t };\n\n\t\t $scope.$watch('focus_field', function()\n\t\t {\n\t\t\t if($scope.focus_field == $scope.name)\n\t\t\t {\n\t\t\t\t var input_box = element.find(\"input\");\n\t\t\t\t // Focus and select the input element\n\t\t\t\t $timeout(function()\n\t\t\t\t {\n\t\t\t\t\t if(!input_box.is(':focus'))\n\t\t\t\t\t {\n\t\t\t\t\t\t input_box.focus();\n\t\t\t\t\t }\n\t\t\t\t\t input_box.select();\n\t\t\t\t });\n\t\t\t }\n\t\t });\n\n\t\t // Initial Datepicker setup\n\t\t $timeout( function() {\n\t\t\t var date_picker_id = attribute.caDatePickerId;\n\t\t\t if(!date_picker_id)\n\t\t\t {\n\t\t\t\t date_picker_id = 'ca-date-picker';\n\t\t\t }\n\t\t\t $scope.datepicker = $('#' + date_picker_id).find('input');\n\t\t\t $scope.create_datepicker();\n\n\t\t\t $scope.datepicker.on('show', function (e)\n\t\t\t {\n\t\t\t\t // Show multi button only if this is a multi-date picker\n\t\t\t\t var dropdown = $(\".datepicker.datepicker-dropdown\");\n\t\t\t\t var footer = dropdown.find('tfoot');\n\t\t\t\t if ($scope.use_multi_date == 'true')\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html_with_picker);\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t\t footer.replaceWith(buttons_html);\n\t\t\t\t }\n\t\t\t\t footer = dropdown.find('tfoot');\n\t\t\t\t $compile(footer.contents())($scope);\n\n\t\t\t\t // replace next/prev buttons with custom font icons\n\t\t\t\t dropdown.find(\".next\").html(\"\").addClass(\"icon-arrow-right\");\n\t\t\t\t dropdown.find(\".prev\").html(\"\").addClass(\"icon-arrow-left\");\n\n\t\t\t\t $scope.initialization_complete = true;\n\t\t\t })\n\t\t });\n\t };\n\n\t return {\n\t\t restrict: 'EA',\n\t\t scope: scope,\n\t\t replace: true,\n\t\t templateUrl: template_function,\n\t\t link: link_function,\n\t\t controller: helper.default_controller\n\t };\n\n }]);\n","angular.module('Common').directive(\n\t'caFieldNumber',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\tscope.pad_length = '@caPadLength';\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!$scope.pad_length)\n\t\t{\n\t\t\t$scope.pad_length = 0;\n\t\t}\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_field_number.jsp',\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","// alias to ca_field_text with hideText = true\nangular.module('Common').directive(\n\t\t'caFieldPassword',\n\t\t[\n\t\t\t'fieldHelperService',\n\t\t\tfunction(helper)\n\t\t\t{\n\t\t\t\treturn helper.textInputDirective(true);\n\t\t\t}\n]);\n\n","angular.module('Common').directive(\n\t'caFieldRadio',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\tvar scope = angular.copy(helper.default_scope);\n\n\t/* for radio groups, the values can be different, but the model should be the same inm order for only one to be selectable*/\n\tscope.value = '@caValue';\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_radio');\n\t};\n\n\tvar link_function = function link_function(\n\t\t\t$scope, element, attribute, controller)\n\t{\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n","angular.module('Common').directive(\n\t'caFieldSelect',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n\t{\n\t\tvar scope = angular.copy(helper.default_scope);\n\n\t\tscope.options = '=caOptions';\n\t\tscope.include_empty_option = '@caEmptyOption';\n\t\tscope.no_label = '@caNoLabel';\n\n\t\tvar template_function = function template_function(element, attributes)\n\t\t{\n\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_select');\n\t\t};\n\n\t\tvar linkFunction = function linkFunction($scope, element, attribute, controller)\n\t\t{\n\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'EAC',\n\t\t\tscope: scope,\n\t\t\ttemplateUrl: template_function,\n\t\t\treplace: true,\n\t\t\tlink: linkFunction,\n\t\t\tcontroller: helper.default_controller\n\t\t};\n\t}\n]);\n","angular.module('Common').directive(\n\t'caFieldText',\n\n\t[\n\t\t'fieldHelperService',\n\n\tfunction(\n\t\thelper\n\t)\n{\n\treturn helper.textInputDirective(false);\n}]);\n\n","angular.module('Common').directive(\n\t'caFieldTime',\n\n\t[\n\t\t'fieldHelperService',\n\t\t'$timeout',\n\n\tfunction (\n\t\thelper,\n\t\t$timeout)\n{\n\n\tvar scope = angular.copy(helper.default_scope);\n\n\tscope.minute_step = '=caMinuteStep';\n\tscope.no_label = '@caNoLabel';\n\tscope.disable_widget = '=caDisableWidget';\n\n\t/* These are all available for the timepicker, but are not wired up yet\n\t scope.input_size = '@caInputSize';\n\t scope.template = '@caTemplate';\n\t scope.max_hours = '@caMaxHours';\n\t scope.snap_to_step = '@caSnapToStep';\n\t scope.show_seconds = '@caShowSeconds';\n\t scope.default_time = '@caDefaultTime';\n\t scope.show_meridian = '@caShowMeridian';\n\t scope.show_inputs = '@caShowInputs';\n\t scope.disable_focus = '@caDisableFocus';\n\t scope.disable_mousewheel = '@caDisableMousewheel';\n\t scope.disable_unit_hightlight = '@disableUnitHightlight';\n\t scope.modal_backdrop = '@caModalBackdrop';\n\t scope.append_widget_to = '@caAppendWidgetTo';\n\t scope.explicit_mode = '@caExplicitMode';\n\t scope.icons = '@caIcons';\n\t*/\n\n\tvar template_function = function template_function(element, attributes) {\n\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_time');\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.picker_container = null;\n\t\t$scope.toggle_widget = function toggle_widget()\n\t\t{\n\t\t\tif(!$scope.disable_widget)\n\t\t\t{\n\t\t\t\t$scope.picker_container.timepicker('showWidget');\n\t\t\t}\n\t\t};\n\n\t\t$timeout(function()\n\t\t{\n\t\t\t$scope.picker_container = $('#input-' + $scope.name);\n\t\t\t$scope.picker_container.timepicker(\n\t\t\t\t{\n\t\t\t\t\tdefaultTime: false,\n\t\t\t\t\tminuteStep: $scope.minute_step,\n\t\t\t\t\ttemplate: ($scope.disable_widget)? false: 'dropdown',\n\t\t\t\t\t//disableFocus: true,\n\t\t\t\t\t//showInputs: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tup: \"fa fa-chevron-up\",\n\t\t\t\t\t\tdown: \"fa fa-chevron-down\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// run the default field link function\n\t\thelper.default_link_function($scope, element, attribute, controller);\n\n\t};\n\n\treturn {\n\t\trestrict: 'EAC',\n\t\tscope: scope,\n\t\ttemplateUrl: template_function,\n\t\treplace: true,\n\t\tlink: link_function,\n\t\tcontroller: helper.default_controller\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caFieldToggle',\n\n\t\t[\n\t\t\t'fieldHelperService',\n\n\t\t\tfunction(\n\t\t\t\t\thelper\n\t\t\t)\n\t\t\t{\n\n\t\t\t\tvar template_function = function template_function(element, attributes) {\n\t\t\t\t\treturn helper.resolve_template(attributes, 'src/common/directives/clinicaid/ca_field_toggle');\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// run the default field link function\n\t\t\t\t\thelper.default_link_function($scope, element, attribute, controller);\n\t\t\t\t};\n\n\t\t\t\tvar scope = angular.copy(helper.default_scope);\n\t\t\t\tscope.true_text = '@caTrueText';\n\t\t\t\tscope.false_text = '@caFalseText';\n\t\t\t\tscope.true_value = '@caTrueValue';\n\t\t\t\tscope.false_value = '@caFalseValue';\n\n\t\t\t\treturn {\n\t\t\t\t\trestrict: 'EAC',\n\t\t\t\t\tscope: scope,\n\t\t\t\t\ttemplateUrl: template_function,\n\t\t\t\t\treplace: true,\n\t\t\t\t\tlink: link_function,\n\t\t\t\t\tcontroller: helper.default_controller\n\t\t\t\t};\n\n\t\t\t}]);\n","\nangular.module('Common').directive(\n\t'caFocusField',\n\t[\n\t\tfunction()\n{\n\n\tvar link_function = function($scope, element, attr, field_controllers)\n\t{\n\t\tvar field = attr[ 'caName' ];\n\n\t\t// Forget the whole thing if there is already a controller that tells us to\n\t\tvar ignore = false;\n\t\tfor(var i = 0; i < field_controllers.length; i++)\n\t\t{\n\t\t\tif (field_controllers[ i ] &&\n\t\t\t\tfield_controllers[ i ].ignore_focus_field())\n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(angular.isDefined($scope.form_nav) && !ignore)\n\t\t{\n\t\t\tvar focus_field = attr['caFocusField'];\n\n\t\t\t// watch the focus field: when it matches, focus the element\n\t\t\t$scope.$watch(focus_field, function()\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == $scope.form_nav.focus_field)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// listen for focusCaFocusField event: when it matches, focus the element\n\t\t\t$scope.$on('focusCaFocusField', function(e, focus)\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists(field) && field == focus)\n\t\t\t\t{\n\t\t\t\t\telement[0].focus().select();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\treplace: false,\n\t\tpriority: 100,\n\t\trequire: [\n\t\t\t'?^caFieldAlpha',\n\t\t\t'?^caFieldAlphadate',\n\t\t\t'?^caFieldAutocomplete',\n\t\t\t'?^caFieldBoolean',\n\t\t\t'?^caFieldColor',\n\t\t\t'?^caFieldCurrency',\n\t\t\t'?^caFieldDate',\n\t\t\t'?^caFieldDate3',\n\t\t\t'?^caFieldNumber',\n\t\t\t'?^caFieldSelect',\n\t\t\t'?^caFieldText',\n\t\t\t'?^caFieldTime'\n\t\t],\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'caInfoMessages',\n\n\t[ function()\n{\n\n\tvar scope = {\n\t\tsaving: '=?caSavingFlag',\n\t\terrors: '=caErrorsObject',\n\t\tfield_value_map: '=?caFieldValueMap',\n\t\tsuccess_message: '@caSuccessMessage',\n\t\tfield_value_map_label_key: '@caFieldValueMapLabelKey',\n\t\tdisplayFieldErrors: '=?caDisplayFieldErrors',\n\t\tprepend_name_to_field_errors: '=?caPrependNameToFieldErrors',\n\t\terror_link_functions: '=?caErrorLinkFunctions'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tif(!Juno.Common.Util.exists($scope.displayFieldErrors) ||\n\t\t\t$scope.displayFieldErrors !== false)\n\t\t{\n\t\t\t$scope.displayFieldErrors = true;\n\t\t}\n\n\t\tif(!Juno.Common.Util.exists($scope.prepend_name_to_field_errors) ||\n\t\t\t$scope.prepend_name_to_field_errors !== false)\n\t\t{\n\t\t\t$scope.prepend_name_to_field_errors = true;\n\t\t}\n\n\t\t// get a field label given a key\n\t\t$scope.get_label = function get_label(key)\n\t\t{\n\t\t\tvar label = key;\n\t\t\tif(Juno.Common.Util.exists($scope.field_value_map) && $scope.field_value_map.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.exists($scope.field_value_map_label_key))\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key][$scope.field_value_map_label_key];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlabel = $scope.field_value_map[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t// Ensure the item is an array of elements\n\t\t$scope.force_array = function force_array(item)\n\t\t{\n\t\t\tif(!angular.isArray(item))\n\t\t\t{\n\t\t\t\treturn [item];\n\t\t\t}\n\t\t\treturn item;\n\t\t};\n\n\t\t$scope.has_sub_errors = function has_sub_errors(errors)\n\t\t{\n\t\t\treturn !angular.isString(errors) && angular.isObject(errors);\n\t\t};\n\n\t\t$scope.error_link_has_function = function error_link_has_function(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// error link must have a js function in its data\n\t\t\t// and the function is implemented in error_link_functions\n\t\t\treturn $scope.error_link_functions &&\n\t\t\t\terror_link['js_fn'] &&\n\t\t\t\tangular.isFunction($scope.error_link_functions[error_link['js_fn']]);\n\t\t};\n\n\t\t// execute the ng-click action on error links\n\t\t$scope.execute_error_link_fn = function execute_error_link_fn(index)\n\t\t{\n\t\t\tvar error_link = $scope.errors.error_links()[index];\n\n\t\t\t// shouldn't be called unless the error link function is\n\t\t\tif(!$scope.error_link_has_function(index))\n\t\t\t{\n\t\t\t\tconsole.log(\"error link does not have a function!\", error_link);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// basic implementation: always pass the 'uuid' field in as a parameter\n\t\t\t// (may require other options in the future)\n\t\t\t$scope.error_link_functions[error_link['js_fn']](error_link['uuid']);\n\t\t};\n\n\t\t$scope.should_display_field_errors = function should_display_field_errors()\n\t\t{\n\t\t\treturn Juno.Common.Util.exists($scope.errors) &&\n\t\t\t\t$scope.errors.has_field_errors() &&\n\t\t\t\t$scope.displayFieldErrors &&\n\t\t\t\t$scope.errors.displayFieldErrors;\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_info_messages.jsp',\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t\t'caKeyBindScope',[\n\n\t\t\t'$rootScope',\n\n\t\t\tfunction($rootScope)\n\t\t\t{\n\n\t\t\t\tvar scope = {\n\t\t\t\t\tidentifier: '@caIdentifier',\n\t\t\t\t\tkey_combo: '@caKeyCombo',\n\t\t\t\t\tcallback_fn: '=caCallbackFn',\n\t\t\t\t\tkey_bind_settings: '=caKeyBindSettings',\n\t\t\t\t};\n\n\t\t\t\tvar build_hierarchy = function build_hierarchy(element)\n\t\t\t\t{\n\t\t\t\t\tvar parents = element.parents(\"ca-key-bind-scope\");\n\n\t\t\t\t\tvar hierarchy = [];\n\t\t\t\t\t$.each( parents, function( index, value )\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thierarchy.unshift(value.attributes['ca-identifier'].nodeValue);\n\t\t\t\t\t\t} catch(error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"This ca-key-bind-scope element has an invalid parent: \");\n\t\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn hierarchy\n\t\t\t\t};\n\n\t\t\t\tvar link_function = function link_function($scope, element, attribute, controller)\n\t\t\t\t{\n\t\t\t\t\t// identifier is required\n\t\t\t\t\tif($scope.identifier == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"The following ca_key_bind_scope element is missing the required \" +\n\t\t\t\t\t\t\t\t\"ca-identifier attribute\");\n\t\t\t\t\t\tconsole.log(element);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar hierarchy = build_hierarchy(element);\n\n\t\t\t\t\tif($scope.key_bind_settings != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key_combo in $scope.key_bind_settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$rootScope.ca_key_binding.bind_key_element(\n\t\t\t\t\t\t\t\t\t$scope, element, $scope.identifier, angular.copy(hierarchy),\n\t\t\t\t\t\t\t\t\tkey_combo,\n\t\t\t\t\t\t\t\t\t$scope.key_bind_settings[key_combo]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"No key bind settings set for ca-key-bind-scope directive (\" +\n\t\t\t\t\t\t\t\t$scope.identifier + \")\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tscope: scope,\n\t\t\t\t\trestrict: 'EA',\n\t\t\t\t\tlink: link_function\n\t\t\t\t}\n\t\t\t}]\n);\n\n","angular.module('Common').directive(\n\t'caPagination',\n\n\t[ '$timeout',\n\n\tfunction($timeout)\n{\n\n\tvar scope = {\n\t\tpagination: '=caModel',\n\t\tchange_page_callback: '=caChangePage'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\t$scope.mode = 'pages';\n\n\t\t$scope.change_page = function change_page(page_number)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(page_number) &&\n\t\t\t\tpage_number != $scope.pagination.current_page &&\n\t\t\t\tpage_number > 0 &&\n\t\t\t\tpage_number <= $scope.pagination.total_pages)\n\t\t\t{\n\t\t\t\t$scope.change_page_callback(page_number);\n\t\t\t}\n\t\t};\n\n\t\t$scope.expand_ellipsis = function expand_ellipsis()\n\t\t{\n\t\t\t$scope.go_to_page_num = $scope.pagination.current_page;\n\t\t\t$scope.mode = 'goto';\n\t\t\t$timeout(function()\n\t\t\t{\n\t\t\t\telement.find(\"input\").focus().select();\n\t\t\t});\n\t\t};\n\n\t\t$scope.close_ellipsis = function close_ellipsis()\n\t\t{\n\t\t\t$scope.mode = 'pages';\n\t\t};\n\n\t\t$scope.go_to_page = function go_to_page()\n\t\t{\n\t\t\tif(Juno.Common.Util.isIntegerString($scope.go_to_page_num))\n\t\t\t{\n\t\t\t\tvar page_int = parseInt($scope.go_to_page_num);\n\t\t\t\tif(page_int <= 0)\n\t\t\t\t{\n\t\t\t\t\tpage_int = 1;\n\t\t\t\t}\n\t\t\t\telse if (page_int > $scope.pagination.total_pages)\n\t\t\t\t{\n\t\t\t\t\tpage_int = $scope.pagination.total_pages;\n\t\t\t\t}\n\t\t\t\t$scope.change_page(page_int);\n\n\t\t\t\t$scope.close_ellipsis();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: scope,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_pagination.jsp',\n\t\treplace: true,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive('caQuill',\n\t[\n\n\t\t\t'$timeout',\n\n\tfunction($timeout)\n{\n\t\tvar link_function = function link_function(scope, element, attrs, ngModel)\n\t\t{\n\n\t\t\tvar updateModel = function updateModel(value) {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModel.$setViewValue(value);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions = {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t'toolbar': { container: '.wysiwyg-toolbar' },\n\t\t\t\t\t\t'image-tooltip': true,\n\t\t\t\t\t\t'link-tooltip': true\n\t\t\t\t\t},\n\t\t\t\t\ttheme: 'snow'\n\t\t\t\t},\n\t\t\t\textraOptions = attrs.quill ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.$eval(attrs.quill) : {},\n\t\t\t\teditor;\n\n\t\t\tangular.extend(options, extraOptions);\n\n\t\t\t$timeout(function () {\n\n\t\t\t\teditor = new Quill(element.children()[1], options);\n\n\t\t\t\tngModel.$render();\n\n\t\t\t\teditor.on('text-change', function(delta, source) {\n\t\t\t\t\tupdateModel(this.getHTML());\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\teditor.once('selection-change', function(hasFocus) {\n\t\t\t\t\t$(editor).toggleClass('focus', hasFocus);\n\t\t\t\t\t// Hack for inability to scroll on mobile\n\t\t\t\t\tif (/mobile/i.test(navigator.userAgent)) {\n\t\t\t\t\t\t$(editor).css('height', quill.root.scrollHeight + 30)   // 30 for padding\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t});\n\n\n\t\t\tngModel.$render = function () {\n\t\t\t\tif (angular.isDefined(editor)) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\teditor.setHTML(ngModel.$viewValue || '');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t};\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: \"ngModel\",\n\t\treplace: true,\n\t\ttemplateUrl: 'src/common/directives/clinicaid/ca_quill.jsp',\n\t\tlink: link_function\n\t}\n}]);\n\n","angular.module('Common').directive(\n\t'caStickySearchResultsFooter',\n\n\t[ '$document', '$timeout',\n\n\tfunction($document, $timeout)\n{\n\tvar scope = {\n\t\teventName: '@caEventName'\n\t};\n\n\tvar link_function = function link_function($scope, element, attribute, controller)\n\t{\n\t\tvar searchResultsRecordsElement =\n\t\t\tangular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar scrollbarWrapperElement = angular.element(element[0].querySelector('.search-results-scrollbar'));\n\t\tvar scrollbarElement = angular.element(scrollbarWrapperElement[0].querySelector('.scrollbar'));\n\n\t\tvar tableWrapperElement = angular.element(element[0].querySelector('.stickied-table-wrapper'));\n\t\tvar tableElement = angular.element(tableWrapperElement[0].querySelector('table'));\n\n\t\tvar footerElement = angular.element(element[0].querySelector('.search-results-footer'));\n\t\tvar searchResultsElement = angular.element(element[0].querySelector('.search-results-records'));\n\n\t\tvar contentWrapperElement = angular.element($document.find('#center-panel-wrapper'));\n\t\tvar layoutSidebarElement = angular.element($document.find('#layout-sidebar'));\n\n\t\t// connect the dummy scrollbar in the footer with the table scrollbar\n\t\tscrollbarWrapperElement.scroll(function()\n\t\t{\n\t\t\ttableWrapperElement.scrollLeft(scrollbarWrapperElement.scrollLeft());\n\t\t});\n\t\ttableWrapperElement.scroll(function()\n\t\t{\n\t\t\tscrollbarWrapperElement.scrollLeft(tableWrapperElement.scrollLeft());\n\t\t});\n\n\t\t// resize and position the footer when the specified event is fired\n\t\t$scope.$on($scope.eventName, function()\n\t\t{\n\t\t\t$timeout($scope.update_search_results_footer);\n\t\t});\n\n\t\t$scope.update_search_results_footer = function update_search_results_footer()\n\t\t{\n\t\t\t// for a fixed footer, main content must be longer than the sidebar,\n\t\t\t// and the search results must extend beyond the bottom of the screen\n\t\t\tvar fixedFooter = (contentWrapperElement.height() >= layoutSidebarElement.height()) &&\n\t\t\t\tsearchResultsElement.offset().top + searchResultsElement.height() > $(window).height();\n\n\t\t\tif(fixedFooter)\n\t\t\t{\n\t\t\t\t// fixed footer at bottom of screen, with scrollbar\n\t\t\t\tfooterElement.addClass('fixed').removeClass('static');\n\n\t\t\t\tfooterElement.css('width', searchResultsRecordsElement.width());\n\n\t\t\t\tscrollbarWrapperElement.width(tableWrapperElement.width());\n\t\t\t\tscrollbarElement.width(tableElement.width());\n\n\t\t\t\tif(scrollbarWrapperElement.width() < scrollbarElement.width())\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height() - 15);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttableWrapperElement.css('padding-bottom', footerElement.height());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// static footer below search results\n\t\t\t\tfooterElement.addClass('static').removeClass('fixed');\n\t\t\t\tfooterElement.css('width', 'initial');\n\t\t\t\ttableWrapperElement.css('padding-bottom', 0);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: scope,\n\t\tlink: link_function\n\t};\n\n}]);\n\n","angular.module('Common').directive(\n\t'zeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\treturn $filter('numberFixedLength')(data, 4);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","angular.module('Common').directive(\n\t'compileHtml',\n\t[ '$compile',\n\tfunction($compile)\n\t{\n\t\t// this directive is like ng-bind-html but it will angular-compile the content\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch(\n\t\t\t\tfunction(scope)\n\t\t\t\t{\n\t\t\t\t\treturn scope.$eval(attrs.compileHtml);\n\t\t\t\t},\n\t\t\t\tfunction(value)\n\t\t\t\t{\n\t\t\t\t\telement.jsp(value);\n\t\t\t\t\t$compile(element.contents())(scope);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t}\n]);\n","angular.module('Common').directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);\n","angular.module('Common').directive(\n\t'resizeHandler',[\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the resize directive broadcasts resize::resize on window resize\n\t\t// use this directive to listen and handle the resize event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('resize::resize', function () {\n\t\t\t\t\t$parse(attrs.resizeHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('resize',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts resize::resize on window resize\n\t\t\t// use the resize-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('resize', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('resize::resize');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'scrollHandler', [\n\t'$parse',\n\tfunction($parse)\n\t{\n\t\t// the scroll directive broadcasts scroll::scroll on window scroll\n\t\t// use this directive to listen and handle the scroll event\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tscope.$on('scroll::scroll', function () {\n\t\t\t\t\t$parse(attrs.scrollHandler)(scope);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]\n);\n\n","angular.module('Common').directive('scroll',\n\t[\n\t\t'$window',\n\t\tfunction($window)\n\t\t{\n\t\t\t// this directive broadcasts scroll::scroll on window scroll\n\t\t\t// use the scroll-handler directive to listen for and handle the event\n\n\t\t\treturn {\n\t\t\t\tlink: function(scope) {\n\t\t\t\t\tangular.element($window).on('scroll', function(e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// use name of directive + event to avoid collisions\n\t\t\t\t\t\tscope.$broadcast('scroll::scroll');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n);\n","angular.module('Common').directive(\n\t'caZeroPad', \n\n\t[\n\t\t'$filter',\n\n\tfunction(\n\t\t$filter\n\t)\n{\n    return {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\tctrl.$formatters.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});\n\n\t\t\tctrl.$parsers.unshift(function (data) {\n\t\t\t\tvar pad_length = attrs.caZeroPad;\n\t\t\t\tif(!pad_length)\n\t\t\t\t{\n\t\t\t\t\tpad_length = 0;\n\t\t\t\t}\n\t\t\t\treturn $filter('numberFixedLength')(data, pad_length);\n\t\t\t});            \n\t\t},\n\t};\n}]);\n","'use strict';\n\n/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Common.Components', [ 'Common.Services' ]);\n\n","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Common.Components').component('junoModal', {\n\tbindings: {\n\t\thideFooter: '<',\n\t\tshowLoading: '<',\n\t},\n\ttemplateUrl: \"src/common/components/modalTemplate.jsp\",\n\ttransclude: {\n\t\t'title': '?modalTitle',\n\t\t'ctlButtons': '?modalCtlButtons',\n\t\t'body' : '?modalBody',\n\t\t'footer': '?modalFooter',\n\t},\n\tcontroller: function ()\n\t{\n\t\tlet ctrl = this;\n\t\tctrl.$onInit = function ()\n\t\t{\n\t\t\tctrl.hideFooter = ctrl.hideFooter || false;\n\t\t\tctrl.showLoading = ctrl.showLoading || false;\n\t\t};\n\t\tctrl.$onChanges = function onChanges(bindingHash)\n\t\t{\n\t\t\t// bindingsHash only has data for changed bindings, so check for object existance\n\t\t\tif(Juno.Common.Util.exists(bindingHash.showLoading))\n\t\t\t{\n\t\t\t\tctrl.showLoading = bindingHash.showLoading.currentValue;\n\t\t\t}\n\t\t}\n\t}\n});","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Common.Components').component('junoLoadingIndicator', {\n\tbindings: {\n\t\tmessage: '@',\n\t\tmessageAlignment: '@',\n\t\tindicatorType: '@',\n\t},\n\ttemplateUrl: \"src/common/components/loadingIndicatorTemplate.jsp\",\n\tcontroller: function ()\n\t{\n\t\tlet ctrl = this;\n\t\tctrl.$onInit = function ()\n\t\t{\n\t\t\tctrl.message = ctrl.message || null;\n\t\t\tctrl.messageAlignment = ctrl.messageAlignment || 'vertical';\n\t\t\tctrl.indicatorType = ctrl.indicatorType || 'spinner';\n\t\t};\n\n\t\tctrl.isAlignmentVertical = function ()\n\t\t{\n\t\t\treturn (ctrl.messageAlignment === 'V' || ctrl.messageAlignment === 'vertical');\n\t\t};\n\t\tctrl.isAlignmentHorizontal = function ()\n\t\t{\n\t\t\treturn (ctrl.messageAlignment === 'H' || ctrl.messageAlignment === 'horizontal');\n\t\t};\n\t}\n});","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Common.Components').component('junoZeroStateDisplay', {\n\tbindings: {\n\t\tmessage: '@',\n\t},\n\ttransclude: {\n\t\t'content': '?content',\n\t},\n\ttemplateUrl: \"src/common/components/zeroStateDisplayTemplate.jsp\",\n\tcontroller: function ()\n\t{\n\t\tlet ctrl = this;\n\t\tctrl.$onInit = function ()\n\t\t{\n\t\t\tctrl.message = ctrl.message || null;\n\t\t};\n\t}\n});","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\n// displays a vertical, collapsible list such as the one found in the admin.\nangular.module('Common.Components').component('accordionList', {\n\ttemplateUrl: 'src/common/components/accordionList/accordionList.jsp',\n\tbindings: {\n\t\t// items to display in the accordion list. hash of format\n\t\t// [{name: \"groupName\", expanded: true / false [optional] ,items: [{name: \"item one\", callback: func}, {name: \"item two\", callback: func}]},  ....\n\t\t// {name: \"another group\", items: [{name: \"item 1000\", callback: func}, {name: \"over 90000\", callback: func}]}]\n\t\titemList: '<',\n\t},\n\tcontroller: ['$state', '$scope', function ($state, $scope)\n\t{\n\t\tlet ctrl = this;\n\n\t\tctrl.$onInit = function ()\n\t\t{\n\n\t\t};\n\n\t\tctrl.bindCollapseListener = function (idx)\n\t\t{\n\t\t\t// listen for bootstrap collapse events\n\t\t\tlet targetItem = ctrl.itemList[idx];\n\t\t\tif (!targetItem.eventsBound)\n\t\t\t{\n\t\t\t\tlet collapseEl = angular.element(document.querySelector(\"#accordion-collapse-target-\" + ctrl.getGroupCollapseId(targetItem)));\n\n\t\t\t\tcollapseEl.on('hidden.bs.collapse', function ()\n\t\t\t\t{\n\t\t\t\t\ttargetItem.expanded = false;\n\t\t\t\t\t// clear jquery set styling\n\t\t\t\t\tcollapseEl.attr('style', '');\n\t\t\t\t\t$scope.$apply();\n\t\t\t\t});\n\n\t\t\t\tcollapseEl.on('shown.bs.collapse', function ()\n\t\t\t\t{\n\t\t\t\t\ttargetItem.expanded = true;\n\t\t\t\t\t// clear jquery set styling\n\t\t\t\t\tcollapseEl.attr('style', '');\n\t\t\t\t\t$scope.$apply();\n\t\t\t\t});\n\t\t\t}\n\t\t\ttargetItem.eventsBound = true;\n\t\t};\n\n\t\tctrl.getGroupCollapseId = function (group)\n\t\t{\n\t\t\treturn group.name.replace(' ', '').replace('/', '');\n\t\t};\n\n\t\tctrl.onGroupClick = function (group)\n\t\t{\n\t\t\tfor (let i = 0; i < ctrl.itemList.length; i ++)\n\t\t\t{\n\t\t\t\tif (group.name !== ctrl.itemList[i].name)\n\t\t\t\t{\n\t\t\t\t\t// collapse all. because we mixed boostrap and angular we need to do this the nasty way.\n\t\t\t\t\tangular.element(document.querySelector(\"#accordion-collapse-target-\" + ctrl.getGroupCollapseId(ctrl.itemList[i]))).collapse('hide');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tctrl.onItemClicked = function (item)\n\t\t{\n\t\t\tif (item.callback !== undefined && item.callback !== null)\n\t\t\t{\n\t\t\t\titem.callback()\n\t\t\t}\n\t\t}\n\n\t}]\n});","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\nangular.module('Common.Components').component('iconCard', {\n\ttemplateUrl: 'src/common/components/iconCard/iconCard.jsp',\n\tbindings: {\n\t\tcardSize: '<?', // one of card-sm, card-md, card-lg\n\t\ticon: '<?',\n\t\ttext: '<?',\n\t\tonClick: '&?'\n\t},\n\tcontroller: [function () {\n\t\tlet ctrl = this;\n\n\t\tctrl.$onInit = function ()\n\t\t{\n\t\t\tctrl.cardSize = ctrl.cardSize || \"card-md\";\n\t\t\tctrl.icon = ctrl.icon || \"icon-question\";\n\t\t\tctrl.text = ctrl.text || \"??? no message ???\"\n\t\t\tctrl.onClick = ctrl.onClick || null;\n\t\t};\n\n\t\tctrl.onCardClick = function ()\n\t\t{\n\t\t\tif (ctrl.onClick)\n\t\t\t{\n\t\t\t\tctrl.onClick({})\n\t\t\t}\n\n\t\t};\n\n\t}]\n});","/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nangular.module('Common.Components').component('panel',\n{\n\ttemplateUrl: 'src/common/components/panel/panel.jsp',\n\tbindings: {},\n\ttransclude: {\n\t\t'header': '?panelHeader',\n\t\t'body':   '?panelBody'\n\t},\n\tcontroller: ['$scope', function ($scope)\n\t{\n\n\t}]\n});","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\n\nangular.module('Layout', ['Common', 'Common.Services']);","angular.module('Layout').controller('Layout.BodyController', [\n\t'$rootScope',\n\t'$scope',\n\t'providerService',\n\t'securityService',\n\tfunction($rootScope, $scope, providerService, securityService)\n\t{\n\t\tvar controller = this;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tproviderService.getMe().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tsecurityService.setUser(results);\n\t\t\t\t\tcontroller.userLoaded = true;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// flag for whether the patient list should be showing or not\n\t\t// can be set from controllers with $emit: $scope.$emit('configureShowPatientList', false);\n\t\tcontroller.showPatientList = false;\n\n\t\t// used to prevent race condition on user load. the rest of the app will not render until true.\n\t\tcontroller.userLoaded = false;\n\n\t\t// controllers can update the showPatientList value by calling an $emit\n\t\t// e.g. $scope.$emit('configureShowPatientList', false);\n\t\t$scope.$on('configureShowPatientList',\n\t\t\tfunction(event, value)\n\t\t\t{\n\t\t\t\tcontroller.showPatientList = value;\n\t\t\t});\n\n\t\tcontroller.toggleShowPatientList = function()\n\t\t{\n\t\t\tcontroller.showPatientList = !controller.showPatientList;\n\t\t};\n\t\tcontroller.isLeftAsideOpen = function()\n\t\t{\n\t\t\treturn (controller.showPatientList === true);\n\t\t};\n\t}\n]);","\nangular.module('Layout').component(\"primaryNavigation\", {\n\tbindings: {},\n\ttemplateUrl: \"src/layout/primaryNav.jsp\",\n\tcontroller: [\n\t\t\"$rootScope\",\n\t\t\"$scope\",\n\t\t\"$q\",\n\t\t\"$timeout\",\n\t\t\"$location\",\n\t\t\"$state\",\n\t\t\"$uibModal\",\n\t\t\"$interval\",\n\t\t\"securityService\",\n\t\t\"personaService\",\n\t\t\"billingService\",\n\t\t\"consultService\",\n\t\t\"inboxService\",\n\t\t\"messageService\",\n\t\t\"providerService\",\n\t\t\"ticklerService\",\n\t\tfunction ($rootScope,\n\t\t          $scope,\n\t\t          $q,\n\t\t          $timeout,\n\t\t          $location,\n\t\t          $state,\n\t\t          $uibModal,\n\t\t          $interval,\n\t\t          securityService,\n\t\t          personaService,\n\t\t          billingService,\n\t\t          consultService,\n\t\t          inboxService,\n\t\t          messageService,\n\t\t          providerService,\n\t\t          ticklerService)\n\t{\n\t\tvar ctrl = this;\n\n\t\tctrl.me = null;\n\n\t\t// Controller-level variables to contain intervals\n\t\tctrl.updateInterval = undefined;\n\t\tctrl.messageInterval = undefined;\n\t\t// Interval takes update times in ms, so 60s * 1000 * num_minutes\n\t\tctrl.intervalLengthOneMinute = 60000;\n\t\tctrl.intervalLengthFiveMinutes = 60000 * 5;\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tctrl.init = function init()\n\t\t{\n\t\t\tctrl.activeConsultationTotal = 0;\n\t\t\tctrl.ticklerTotal = 0;\n\t\t\tctrl.unAckLabDocTotal = 0;\n\t\t\tctrl.unclaimedCount = 0;\n\t\t\tctrl.unreadMessageTotal = 0;\n\t\t\tctrl.demographicSearch = null;\n\t\t\tctrl.consultationTeamWarning = \"\";\n\t\t\t// measured in months\n\t\t\tctrl.consultationLookbackPeriod = 1;\n\n\t\t\tbillingService.getBillingRegion().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.billRegion = results.message;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tsecurityService.hasRights(\n\t\t\t\t{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobjectName: '_search',\n\t\t\t\t\t\t\tprivilege: 'r'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\t\t\tprivilege: 'w'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobjectName: '_msg',\n\t\t\t\t\t\t\tprivilege: 'r'\n\t\t\t\t\t\t}]\n\t\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.content !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.searchRights = results.content[0];\n\t\t\t\t\t\tctrl.newDemographicRights = results.content[1];\n\t\t\t\t\t\tctrl.messageRights = results.content[2];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tpersonaService.getDashboardMenu().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.menus)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.dashboardMenu = results.menus.menu;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tproviderService.getSettings().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.consultationTimePeriodWarning > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.consultationLookbackPeriod = results.consultationTimePeriodWarning;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we get any result back that isn't -1, need to filter consultation count by the given team\n\t\t\t\t\tif (results.consultationTeamWarning !== \"-1\")\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.consultationTeamWarning = results.consultationTeamWarning;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Error: \", errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.currentProgram = results.currentProgram.program;\n\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tctrl.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tctrl.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tctrl.updateCounts();\n\t\t\t\t\tctrl.getUnreadMessageCount();\n\t\t\t\t\tctrl.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tctrl.menuItems = results.menus.menu.items;\n\t\t\t\t\tctrl.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tctrl.messengerMenu = results.menus.messengerMenu.items;\n\n\n\t\t\t\t\tif (!angular.isDefined(ctrl.updateInterval))\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.updateInterval = $interval(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.updateCounts();\n\t\t\t\t\t\t}, ctrl.intervalLengthFiveMinutes);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Separated into its own interval so that it can be updated more frequently\n\t\t\t\t\tif (!angular.isDefined(ctrl.messageInterval))\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.messageInterval = $interval(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.getUnreadMessageCount();\n\t\t\t\t\t\t}, ctrl.intervalLengthOneMinute);\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t$scope.$watch(\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn securityService.getUser();\n\t\t\t},\n\t\t\tfunction(newVal)\n\t\t\t{\n\t\t\t\tctrl.me = newVal;\n\t\t\t},\n\t\t\ttrue);\n\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn ctrl.demographicSearch;\n\t\t\t},\n\t\t\tfunction(new_value)\n\t\t\t{\n\t\t\t\tif (new_value != null && !new_value.isTypeaheadSearchQuery)\n\t\t\t\t{\n\t\t\t\t\t// selection from the patient search typeahead changed\n\t\t\t\t\tif (new_value.moreResults)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the 'more results' option was selected\n\t\t\t\t\t\tctrl.goToPatientSearch(new_value.searchQuery);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// patient was selected\n\t\t\t\t\t\tctrl.goToPatientRecord(new_value.demographicNo);\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the selection\n\t\t\t\t\tctrl.demographicSearch = null;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t// for intervals\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\t$scope.cancelIntervals();\n\t\t});\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\t// Need to do this so that requests aren't going off in the background after leaving new UI\n\t\tctrl.cancelIntervals = function cancelIntervals()\n\t\t{\n\t\t\tif (angular.isDefined(ctrl.updateInterval))\n\t\t\t{\n\t\t\t\t$interval.cancel(ctrl.updateInterval);\n\t\t\t\tctrl.updateInterval = undefined;\n\t\t\t}\n\n\t\t\tif (angular.isDefined(ctrl.messageInterval))\n\t\t\t{\n\t\t\t\t$interval.cancel(ctrl.messageInterval);\n\t\t\t\tctrl.messageInterval = undefined;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Wrapper for all of the functions that we want to periodically get updated counts for.\n\t\t */\n\t\tctrl.updateCounts = function updateCounts()\n\t\t{\n\t\t\tctrl.getUnAckLabDocCount();\n\t\t\tctrl.getOverdueTicklerCount();\n\t\t\tctrl.getActiveConsultationCount();\n\t\t\tctrl.getUnclaimedInboxCount();\n\t\t};\n\n\t\t/**\n\t\t * Used to generically update count for various elements.\n\t\t * @param item Item object with label we want to display an updated count for\n\t\t * @return associated value the controller has stored, or 0 if we don't recognize item's label\n\t\t */\n\t\tctrl.getCountForLabel = function getCountForLabel(item)\n\t\t{\n\t\t\titem.labelCount = 0;\n\t\t\tif (item.label === \"Inbox\")\n\t\t\t{\n\t\t\t\titem.labelCount = ctrl.unAckLabDocTotal;\n\t\t\t}\n\t\t\telse if (item.label === \"Ticklers\")\n\t\t\t{\n\t\t\t\titem.labelCount = ctrl.ticklerTotal;\n\t\t\t}\n\t\t\telse if (item.label === \"Consultations\")\n\t\t\t{\n\t\t\t\titem.labelCount = ctrl.activeConsultationTotal;\n\t\t\t}\n\t\t\treturn item.labelCount;\n\t\t};\n\n\t\tctrl.getUnAckLabDocCount = function getUnAckLabDocCount()\n\t\t{\n\t\t\tinboxService.getUnAckLabDocCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.unAckLabDocTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tctrl.getUnclaimedInboxCount = function()\n\t\t{\n\n\t\t\tinboxService.getInboxCountByStatus(0,\"N\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.unclaimedCount = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tctrl.getUnreadMessageCount = function getUnreadMessageCount()\n\t\t{\n\t\t\tmessageService.getUnreadCount().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.unreadMessageTotal = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tctrl.getOverdueTicklerCount = function getOverdueTicklerCount()\n\t\t{\n\t\t\tticklerService.search(\n\t\t\t\t{\n\t\t\t\t\tstatus: 'A',\n\t\t\t\t\tcreator: ctrl.me.providerNo,\n\t\t\t\t\toverdueOnly: 'property'\n\t\t\t\t}, 0, 6).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.ticklerTotal = results.total;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tctrl.getActiveConsultationCount = function getActiveConsultationCount()\n\t\t{\n\t\t\t// Any consultations that should have ended after this point but haven't need to be alerted for\n\t\t\tvar endDate = moment().subtract(ctrl.consultationLookbackPeriod, \"months\").toISOString();\n\n\t\t\tconsultService.getTotalRequests(\n\t\t\t\t{\n\t\t\t\t\tinvertStatus: true,\n\t\t\t\t\treferralEndDate: endDate,\n\t\t\t\t\tstatus: '4',\n\t\t\t\t\tteam: ctrl.consultationTeamWarning\n\t\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.activeConsultationTotal = results.data;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tctrl.getNavBar = function getNavBar()\n\t\t{\n\t\t\tpersonaService.getNavBar().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.currentProgram = results.currentProgram.program;\n\t\t\t\t\tif (results.programDomain.program instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.programDomain = results.programDomain.program;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.programDomain = [results.programDomain.program];\n\t\t\t\t\t}\n\n\t\t\t\t\tctrl.unreadMessagesCount = results.unreadMessagesCount;\n\t\t\t\t\tctrl.unreadPatientMessagesCount = results.unreadPatientMessagesCount;\n\t\t\t\t\tctrl.demographicSearchDropDownItems = results.menus.patientSearchMenu.items;\n\t\t\t\t\tctrl.menuItems = results.menus.menu.items;\n\t\t\t\t\tctrl.userMenuItems = results.menus.userMenu.items;\n\t\t\t\t\tctrl.messengerMenu = results.menus.messengerMenu.items;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// when patient typeahead search button is clicked\n\t\tctrl.onPatientSearch = function onPatientSearch(search)\n\t\t{\n\t\t\tif (search === null)\n\t\t\t{\n\t\t\t\tctrl.goToPatientSearch();\n\n\t\t\t}\n\t\t\telse if (search.isTypeaheadSearchQuery) // should only happen when search isTypeaheadSearchQuery\n\t\t\t{\n\t\t\t\tctrl.goToPatientSearch(search.searchQuery);\n\t\t\t}\n\n\t\t\t// clear the selection\n\t\t\tctrl.demographicSearch = null;\n\t\t};\n\n\t\tctrl.goToPatientSearch = function goToPatientSearch(search)\n\t\t{\n\t\t\t$state.go('search',\n\t\t\t\t{\n\t\t\t\t\tterm: search\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treload: 'search'\n\t\t\t\t});\n\t\t};\n\n\t\tctrl.goToPatientRecord = function goToPatientRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\t\thideNote: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treload: 'record.details'\n\t\t\t\t});\n\t\t};\n\n\t\t//to help ng-clicks on buttons\n\t\tctrl.transition = function transition(item, extraParams)\n\t\t{\n\t\t\tvar newWindow;\n\n\t\t\tif (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.state) &&\n\t\t\t\titem.state !== null)\n\t\t\t{\n\n\t\t\t\tvar url = \"\";\n\t\t\t\tvar wname = \"\";\n\n\t\t\t\tif (item.label === \"Inbox\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/inboxManage.do?method=prepareForIndexPage\";\n\t\t\t\t\twname = \"inbox\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"Billing\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports\";\n\t\t\t\t\twname = \"billing\";\n\t\t\t\t}\n\t\t\t\telse if (item.label === \"eDocs\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../dms/documentReport.jsp?function=provider&functionid=\" +\n\t\t\t\t\t\tencodeURIComponent(ctrl.me.providerNo);\n\t\t\t\t\twname = \"edocView\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$timeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$state.go(item.state[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(angular.isDefined(extraParams))\n\t\t\t\t{\n\t\t\t\t\turl += extraParams;\n\t\t\t\t}\n\n\t\t\t\tif (url !== \"\" && wname !== \"\")\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(\n\t\t\t\t\t\turl, wname, 'scrollbars=1,height=700,width=1000');\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\titem.url !== null)\n\t\t\t{\n\t\t\t\tif (item.label === \"Schedule\")\n\t\t\t\t{\n\t\t\t\t\tvar qs = \"\";\n\t\t\t\t\tvar path = $location.path();\n\t\t\t\t\tpath = path.substring(1); //remove leading /\n\t\t\t\t\tvar param = path.split(\"/\");\n\n\t\t\t\t\tif (param.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?module=\" + encodeURIComponent(param[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (param.length === 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tqs = \"?record=\" + encodeURIComponent(param[1]) +\n\t\t\t\t\t\t\t\"&module=\" + encodeURIComponent(param[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = item.url + qs;\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.openNewWindow) &&\n\t\t\t\t\titem.openNewWindow)\n\t\t\t\t{\n\t\t\t\t\tnewWindow = window.open(item.url);\n\t\t\t\t\tif (window.focus)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewWindow.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location = item.url;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tctrl.loadClassicUi = function()\n\t\t{\n\t\t\twindow.location = \"../provider/providercontrol.jsp\";\n\t\t};\n\n\t\tctrl.openMessenger = function(item)\n\t\t{\n\t\t\tif (ctrl.me != null)\n\t\t\t{\n\t\t\t\tif (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'phr')\n\t\t\t\t{\n\t\t\t\t\twindow.open('../phr/PhrMessage.do?method=viewMessages',\n\t\t\t\t\t\t'INDIVOMESSENGER' + encodeURIComponent(ctrl.me.providerNo),\n\t\t\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t\telse if (angular.isDefined(item) &&\n\t\t\t\t\tangular.isDefined(item.url) &&\n\t\t\t\t\titem.url === 'k2a')\n\t\t\t\t{\n\t\t\t\t\tvar win;\n\t\t\t\t\tif (item.extra === \"-\")\n\t\t\t\t\t{\n\t\t\t\t\t\t//If user is not logged in\n\t\t\t\t\t\twin = window.open('../apps/oauth1.jsp?id=K2A',\n\t\t\t\t\t\t\t'appAuth', 'width=700,height=450,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twin = window.open('../apps/notifications.jsp',\n\t\t\t\t\t\t\t'appAuth', 'width=450,height=700,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// by default open classic messenger\n\t\t\t\t\twindow.open('../oscarMessenger/DisplayMessages.do?providerNo=' +\n\t\t\t\t\t\tencodeURIComponent(ctrl.me.providerNo),\n\t\t\t\t\t\t'msgs', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tctrl.openScratchpad = function ()\n\t\t{\n\t\t\tvar win = window.open('../scratch/index.jsp',\n\t\t\t\t'scratch', 'height=700,width=1024,scrollbars=1');\n\t\t\twin.focus();\n\t\t};\n\n\t\tctrl.newDemographic = function newDemographic(size)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\tcomponent: 'addDemographicModal',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\twindowClass: \"juno-modal\",\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$location.path('/record/' +\n\t\t\t\t\t\tencodeURIComponent(results.demographicNo) +\n\t\t\t\t\t\t'/details');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\tctrl.isActive = function(tab)\n\t\t{\n\t\t\treturn tab.state != null ? tab.state.includes($state.current.name) : false;\n\t\t};\n\n\t\tctrl.changeProgram = function changeProgram(programId)\n\t\t{\n\t\t\tpersonaService.setCurrentProgram(programId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.getNavBar();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// For some reason Angular does not allow for the evaluation of the inverse of custom filters, thus, we have the the following masterpiece\n\t\t// If inverse === false, return true if the given item is supposed to be shown outside the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tctrl.navItemFilter = function navItemFilter(labelsToShow, inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) !== -1;\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\t\tctrl.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn ctrl.navItemFilter(['Dashboard', 'Schedule', 'Inbox', 'Consultations', 'Ticklers'], inverse);\n\t\t};\n\t\tctrl.smallNavItemFilter = function smallNavItemFilter(inverse)\n\t\t{\n\t\t\treturn ctrl.navItemFilter(['Dashboard'], inverse);\n\t\t};\n\t\tctrl.mobileNavItemFilter = function mobileNavItemFilter(inverse)\n\t\t{\n\t\t\treturn ctrl.navItemFilter([], inverse);\n\t\t};\n\t}]\n});","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nimport {ScheduleApi} from \"../../generated/api/ScheduleApi\";\nimport {AppointmentApi} from \"../../generated/api/AppointmentApi\";\nimport {SystemPreferenceApi} from \"../../generated/api/SystemPreferenceApi\";\n\nangular.module('Layout').component('leftAside', {\n\tbindings: {\n\t\texpandOn: \"=\"\n\t},\n\ttemplateUrl: \"src/layout/leftAside.jsp\",\n\tcontroller: [\n\t\t\"$rootScope\",\n\t\t\"$scope\",\n\t\t\"$q\",\n\t\t\"$http\",\n\t\t\"$httpParamSerializer\",\n\t\t\"$state\",\n\t\t\"angularUtil\",\n\t\t\"scheduleService\",\n\t\t\"providerService\",\n\t\t\"securityService\",\n\t\tfunction (\n\t\t\t$rootScope,\n\t\t\t$scope,\n\t\t\t$q,\n\t\t\t$http,\n\t\t\t$httpParamSerializer,\n\t\t\t$state,\n\t\t\tangularUtil,\n\t\t\tscheduleService,\n\t\t\tproviderService,\n\t\t\tsecurityService)\n\t{\n\n\t\tvar ctrl = this;\n\t\tctrl.initialized = false;\n\n\t\tctrl.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\t\tctrl.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\t\tctrl.systemPreferenceApi = new SystemPreferenceApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\tctrl.tabEnum = Object.freeze({\n\t\t\tappointments: 0,\n\t\t\trecent: 1,\n\t\t});\n\t\tctrl.activeTab = ctrl.tabEnum.appointments;\n\t\tctrl.activePatientList = [];\n\t\tctrl.activeAppointmentList = [];\n\n\t\t//for filter box\n\t\tctrl.query = '';\n\t\tctrl.datepickerSelectedDate = null;\n\n\t\tctrl.refreshSettings = {\n\t\t\ttimerVariable: null,\n\t\t\tdefaultAutoRefreshMinutes: 3,\n\t\t\tpreferredAutoRefreshMinutes: null\n\t\t};\n\t\tctrl.eventStatusOptions = [];\n\n\t\tctrl.init = function ()\n\t\t{\n\t\t\tscheduleService.loadEventStatuses().then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tctrl.eventStatusOptions = scheduleService.eventStatuses;\n\n\t\t\t\t\tctrl.datepickerSelectedDate = Juno.Common.Util.formatMomentDate(moment());\n\t\t\t\t\tctrl.changeTab(ctrl.activeTab);\n\n\t\t\t\t\tctrl.loadWatches();\n\t\t\t\t\tctrl.initListAutoRefresh();\n\t\t\t\t\tctrl.initialized = true;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tctrl.provider = securityService.getUser();\n\t\t\tctrl.telehealthEnabled = ctrl.loadTelehealthEnabled();\n\t\t\tctrl.loadProviderSettings();\n\t\t};\n\n\t\tctrl.loadProviderSettings = function ()\n\t\t{\n\t\t\tproviderService.getSettings().then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.loadedSettings = result;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to fetch provider setting in left aside with error: \" + result);\n\t\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tctrl.changeTab = function changeTab(tabId)\n\t\t{\n\t\t\tctrl.activeTab = tabId;\n\t\t\tctrl.refresh();\n\t\t};\n\n\t\tctrl.goToRecord = function goToRecord(patient)\n\t\t{\n\t\t\tif (patient.demographicNo !== 0)\n\t\t\t{\n\t\t\t\tif (ctrl.loadedSettings.hideOldEchartLinkInAppointment)\n\t\t\t\t{\n\t\t\t\t\tvar params = {\n\t\t\t\t\t\tdemographicNo: patient.demographicNo\n\t\t\t\t\t};\n\t\t\t\t\tif (angular.isDefined(patient.appointmentNo))\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.appointmentNo = patient.appointmentNo;\n\t\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\n\t\t\t\t\t\tif (angularUtil.inMobileView())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.showPatientList(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$state.go('record.summary', params);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(new Date(patient.date));\n\t\t\t\t\tlet params = {\n\t\t\t\t\t\tproviderNo: ctrl.provider.providerNo,\n\t\t\t\t\t\tcurProviderNo: ctrl.provider.providerNo,\n\t\t\t\t\t\tproviderview: ctrl.provider.providerNo,\n\t\t\t\t\t\tuserName: ctrl.displayName,\n\t\t\t\t\t\tdemographicNo: patient.demographicNo,\n\n\t\t\t\t\t\tcurDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\t\t\t\treason: patient.reason,\n\t\t\t\t\t\tappointmentNo: patient.appointmentNo,\n\t\t\t\t\t\tappointmentDate: Juno.Common.Util.formatMomentDate(startMoment),\n\t\t\t\t\t\tstartTime: Juno.Common.Util.formatMomentTime(startMoment),\n\t\t\t\t\t\tencType: \"face to face encounter with client\",\n\t\t\t\t\t};\n\t\t\t\t\twindow.open(scheduleService.getEncounterLink(params), 'popupWindow',\n\t\t\t\t\t\t\t'height=800,width=1000,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,directories=no');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tctrl.loadTelehealthEnabled = function loadTelehealthEnabled()\n\t\t{\n\t\t\tctrl.systemPreferenceApi.getPropertyEnabled(\"myhealthaccess_telehealth_enabled\").then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tctrl.telehealthEnabled = rawResults.data.body;\n\t\t\t\t},\n\t\t\t\tfunction failure()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load telehealth enabled, defaulting to false\");\n\t\t\t\t\tctrl.telehealthEnabled = false;\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tctrl.openTelehealthLink = function openTelehealthLink(patient)\n\t\t{\n\t\t\tif (patient.isVirtual)\n\t\t\t{\n\t\t\t\twindow.open(\"../integrations/myhealthaccess.do?method=connect\"\n\t\t\t\t\t+ \"&demographicNo=\" + encodeURIComponent(patient.demographicNo)\n\t\t\t\t\t+ \"&siteName=\" + encodeURIComponent(patient.location)\n\t\t\t\t\t+ \"&appt=\" + encodeURIComponent(patient.appointmentNo), \"_blank\");\n\t\t\t}\n\t\t};\n\n\t\tctrl.toggleShowPatientList = function toggleShowPatientList()\n\t\t{\n\t\t\tctrl.showPatientList(!ctrl.expandOn);\n\t\t};\n\n\t\tctrl.showPatientList = function showPatientList(state)\n\t\t{\n\t\t\tctrl.expandOn = state;\n\t\t};\n\n\n\t\tctrl.isRecentPatientView = function ()\n\t\t{\n\t\t\treturn (ctrl.activeTab === ctrl.tabEnum.recent);\n\t\t};\n\t\tctrl.isAppointmentPatientView = function ()\n\t\t{\n\t\t\treturn (ctrl.activeTab === ctrl.tabEnum.appointments);\n\t\t};\n\n\t\tctrl.refreshRecentPatientList = function ()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tproviderService.getRecentPatientList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.activePatientList = results;\n\t\t\t\t\tdeferred.resolve(ctrl.activePatientList);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tctrl.refreshAppointmentPatientList = function ()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tctrl.scheduleApi.getAppointmentsForDay(ctrl.datepickerSelectedDate).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.activeAppointmentList = results.data.body;\n\t\t\t\t\tdeferred.resolve(ctrl.activeAppointmentList);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tctrl.updateAppointmentStatus = function (appointment)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tctrl.appointmentApi.setStatus(appointment.appointmentNo, appointment.status).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\t$rootScope.$broadcast('schedule:refreshEvents');\n\t\t\t\t\tdeferred.resolve(result);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tctrl.refresh = function refresh(filter)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (ctrl.isRecentPatientView())\n\t\t\t{\n\t\t\t\tctrl.refreshRecentPatientList().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (ctrl.isAppointmentPatientView())\n\t\t\t{\n\t\t\t\tctrl.refreshAppointmentPatientList().then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.$on('juno:patientListRefresh', function ()\n\t\t{\n\t\t\tctrl.refresh();\n\t\t});\n\n\t\tctrl.stepForward = function ()\n\t\t{\n\t\t\t// this value has a watch on it so no need to refresh here\n\t\t\tctrl.datepickerSelectedDate = Juno.Common.Util.formatMomentDate(\n\t\t\t\tJuno.Common.Util.getDateMoment(ctrl.datepickerSelectedDate).add(1, 'days'));\n\t\t};\n\t\tctrl.stepBack = function ()\n\t\t{\n\t\t\t// this value has a watch on it so no need to refresh here\n\t\t\tctrl.datepickerSelectedDate = Juno.Common.Util.formatMomentDate(\n\t\t\t\tJuno.Common.Util.getDateMoment(ctrl.datepickerSelectedDate).add(-1, 'days'));\n\t\t};\n\n\t\tctrl.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn ctrl.initialized;\n\t\t};\n\n\t\tctrl.initListAutoRefresh = function initListAutoRefresh()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// if there is already a refresh set up, stop it\n\t\t\tvar refresh = ctrl.refreshSettings.timerVariable;\n\t\t\tif (refresh !== null)\n\t\t\t{\n\t\t\t\tclearInterval(refresh);\n\t\t\t}\n\n\t\t\t// get the refresh interval from preferences, or use default\n\t\t\tvar minutes = ctrl.refreshSettings.preferredAutoRefreshMinutes;\n\t\t\tif (!Juno.Common.Util.exists(minutes) || !Juno.Common.Util.isIntegerString(minutes))\n\t\t\t{\n\t\t\t\tminutes = ctrl.refreshSettings.defaultAutoRefreshMinutes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tminutes = parseInt(minutes);\n\t\t\t}\n\n\t\t\tif (minutes > 0)\n\t\t\t{\n\t\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t\tctrl.refreshSettings.timerVariable = setInterval(ctrl.refresh, minutes * 60 * 1000);\n\t\t\t}\n\t\t\tdeferred.resolve();\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\tctrl.loadWatches = function loadWatches()\n\t\t{\n\t\t\t$scope.$watch('$ctrl.datepickerSelectedDate', function (newValue, oldValue)\n\t\t\t{\n\t\t\t\tif (oldValue !== newValue)\n\t\t\t\t{\n\t\t\t\t\tctrl.refresh();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tctrl.$onInit = ctrl.init();\n\t}]\n});\n","'use strict';\n\nangular.module('Patient', ['Common', 'Common.Services']);","import {SystemPreferenceApi} from \"../../../generated/api/SystemPreferenceApi\";\n\nangular.module('Patient').component('addDemographicModal', {\n\ttemplateUrl: 'src/patient/addDemographicModal/addDemographicModal.jsp',\n\tbindings: {\n\t\tmodalInstance: \"<\",\n\t\tresolve: \"<\",\n\t},\n\tcontroller:[\n\t\t'$scope',\n\t\t'$http',\n\t\t'$httpParamSerializer',\n\t\t'staticDataService',\n\t\t'demographicService',\n\t\t'programService',\n\t\t'providerService',\n\t\tfunction (\n\t\t\t$scope,\n\t\t\t$http,\n\t\t\t$httpParamSerializer,\n\t\t\tstaticDataService,\n\t\t\tdemographicService,\n\t\t\tprogramService,\n\t\t\tproviderService)\n\t{\n\t\tlet ctrl = this;\n\t\tctrl.genders = staticDataService.getGenders();\n\t\tctrl.provinces = staticDataService.getProvinces();\n\t\tctrl.provincesCA = staticDataService.getCanadaProvinces();\n\t\tctrl.newDemographicData = {};\n\n\t\tctrl.systemPreferenceApi = new SystemPreferenceApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t// personal data\n\t\tctrl.newDemographicData.lastName = \"\";\n\t\tctrl.newDemographicData.firstName = \"\";\n\t\tctrl.newDemographicData.sex = \"\";\n\t\tctrl.newDemographicData.dateOfBirth = \"\";\n\t\tctrl.newDemographicData.hin = \"\";\n\t\tctrl.newDemographicData.ver = \"\";\n\t\tctrl.newDemographicData.hcType = \"BC\";\n\n\t\t// address data\n\t\tctrl.newDemographicData.address = {\n\t\t\taddress: \"\",\n\t\t\tcity: \"\",\n\t\t\tprovince: \"BC\",\n\t\t\tpostal: \"\",\n\t\t};\n\t\tctrl.newDemographicData.email = \"\";\n\t\tctrl.newDemographicData.phone = \"\";\n\n\t\t// validation\n\t\tctrl.invalidLastName = false;\n\t\tctrl.invalidFirstName = false;\n\t\tctrl.invalidSex = false;\n\t\tctrl.invalidDob = false;\n\n\t\t//get programs to be selected\n\t\tprogramService.getPrograms().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tctrl.programs = results;\n\t\t\t\tif (ctrl.programs.length === 1)\n\t\t\t\t{\n\t\t\t\t\tctrl.newDemographicData.admissionProgramId = ctrl.programs[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t}\n\t\t);\n\n\t\t// Pull phone prefix from Oscar Properties file\n\t\tctrl.systemPreferenceApi.getPropertyValue(\"phoneprefix\", \"\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tctrl.newDemographicData.phone = results.data.body;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(\"errors::\" + errors);\n\t\t\t}\n\t\t);\n\n\t\t// set defaults based on provider settings\n\t\tproviderService.getSettings().then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tctrl.newDemographicData.sex = result.defaultSex;\n\n\t\t\t\t\t// If the user doesn't have a HC type pre-set, pull from system-wide setting\n\t\t\t\t\tif (result.defaultHcType === \"\")\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.systemPreferenceApi.getPropertyValue(\"hctype\", \"BC\").then(\n\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tctrl.newDemographicData.address.province = results.data.body;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(\"Failed to fetch system properties with error:\" + errors);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.newDemographicData.hcType = result.defaultHcType;\n\t\t\t\t\t\tctrl.newDemographicData.address.province = result.defaultHcType;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"Failed to fetch Provider settings with error: \" + errors);\n\t\t\t\t}\n\t\t);\n\n\t\tctrl.validateDemographic = function ()\n\t\t{\n\t\t\tlet dateOfBirthValid = Juno.Common.Util.getDateMoment(ctrl.newDemographicData.dateOfBirth).isValid();\n\n\t\t\tctrl.invalidLastName = !ctrl.newDemographicData.lastName;\n\t\t\tctrl.invalidFirstName = !ctrl.newDemographicData.firstName;\n\t\t\tctrl.invalidSex = !ctrl.newDemographicData.sex;\n\t\t\tctrl.invalidDob = !dateOfBirthValid;\n\n\t\t\treturn !(ctrl.invalidLastName || ctrl.invalidFirstName || ctrl.invalidSex || ctrl.invalidDob);\n\t\t};\n\n\t\tctrl.onCancel = function()\n\t\t{\n\t\t\tctrl.modalInstance.dismiss(\"cancel\");\n\t\t};\n\n\t\tctrl.onAdd = function ()\n\t\t{\n\t\t\tif (ctrl.validateDemographic())\n\t\t\t{\n\t\t\t\tdemographicService.saveDemographic(ctrl.newDemographicData).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.modalInstance.close(results);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t}]\n});","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Patient').component('demographicCard', {\n\tbindings: {\n\t\tdemographicModel: '<?',\n\t\tdisabled: '<?',\n\t},\n\ttemplateUrl: \"src/patient/demographicCard.jsp\",\n\tcontroller: [function ()\n\t{\n\t\tvar ctrl = this;\n\n\t\tctrl.model = {\n\t\t\tdemographicNo: null,\n\t\t\t// data stores the raw demographic model\n\t\t\tdata: {},\n\t\t\t// display data is built using the raw data model\n\t\t\tdisplayData: {\n\t\t\t\tbirthDate: null,\n\t\t\t\tfullName: null,\n\t\t\t\taddressLine: null,\n\t\t\t\thasPhoto: false,\n\t\t\t\tpatientPhotoUrl: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\t\t},\n\t\t};\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\tctrl.fillDisplayData(ctrl.demographicModel);\n\t\t\tctrl.disabled = ctrl.disabled || false;\n\t\t};\n\n\t\tctrl.$onChanges = function(bindingHash)\n\t\t{\n\t\t\t// bindingsHash only has data for changed bindings, so check for object existance\n\t\t\tif(Juno.Common.Util.exists(bindingHash.demographicModel))\n\t\t\t{\n\t\t\t\tctrl.fillDisplayData(bindingHash.demographicModel.currentValue);\n\t\t\t}\n\t\t\tif(Juno.Common.Util.exists(bindingHash.disabled))\n\t\t\t{\n\t\t\t\tctrl.disabled = bindingHash.disabled.currentValue;\n\t\t\t}\n\t\t};\n\n\t\tctrl.fillDisplayData = function fillDisplayData(demographicDataModel)\n\t\t{\n\t\t\tif(Juno.Common.Util.exists(demographicDataModel))\n\t\t\t{\n\t\t\t\tctrl.model.data = demographicDataModel;\n\n\t\t\t\tctrl.model.demographicNo = demographicDataModel.demographicNo;\n\t\t\t\tctrl.model.displayData.fullName = Juno.Common.Util.formatName(demographicDataModel.firstName, demographicDataModel.lastName);\n\t\t\t\tctrl.model.displayData.patientPhotoUrl = '/imageRenderingServlet?source=local_client&clientId=' +\n\t\t\t\t\t(demographicDataModel.demographicNo ? demographicDataModel.demographicNo : 0);\n\n\t\t\t\tvar dateOfBirth = null;\n\t\t\t\tif (Juno.Common.Util.exists(demographicDataModel.dob))\n\t\t\t\t{\n\t\t\t\t\t// XXX: Perhaps put this in util?  Is this date format common for juno?\n\t\t\t\t\tdateOfBirth = moment(demographicDataModel.dob, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdateOfBirth = Juno.Common.Util.getDateMomentFromComponents(\n\t\t\t\t\t\tdemographicDataModel.dobYear, demographicDataModel.dobMonth, demographicDataModel.dobDay);\n\t\t\t\t}\n\t\t\t\tctrl.model.displayData.birthDate = Juno.Common.Util.formatMomentDate(dateOfBirth);\n\n\t\t\t\tif (Juno.Common.Util.exists(demographicDataModel.address))\n\t\t\t\t{\n\t\t\t\t\tctrl.model.displayData.addressLine =\n\t\t\t\t\t\tJuno.Common.Util.noNull(demographicDataModel.address.address) + ' ' +\n\t\t\t\t\t\tJuno.Common.Util.noNull(demographicDataModel.address.city) + ' ' +\n\t\t\t\t\t\tJuno.Common.Util.noNull(demographicDataModel.address.province) + ' ' +\n\t\t\t\t\t\tJuno.Common.Util.noNull(demographicDataModel.address.postal);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse //clear the data model\n\t\t\t{\n\t\t\t\tctrl.model = {\n\t\t\t\t\tdemographicNo: null,\n\t\t\t\t\tdata: {},\n\t\t\t\t\tdisplayData: {\n\t\t\t\t\t\tbirthDate: null,\n\t\t\t\t\t\tfullName: null,\n\t\t\t\t\t\taddressLine: null,\n\t\t\t\t\t\thasPhoto: false,\n\t\t\t\t\t\tpatientPhotoUrl: '/imageRenderingServlet?source=local_client&clientId=0',\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}]\n});","'use strict';\n\nangular.module('Dashboard', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Dashboard').controller('Dashboard.DashboardController', [\n\n    '$scope',\n    '$uibModal',\n    '$interval',\n    'NgTableParams',\n    'providerService',\n    'ticklerService',\n    'messageService',\n    'inboxService',\n    'k2aService',\n    'noteService',\n    'securityService',\n    'personaService',\n\n    function($scope,\n             $uibModal,\n             $interval,\n             NgTableParams,\n             providerService,\n             ticklerService,\n             messageService,\n             inboxService,\n             k2aService,\n             noteService,\n             securityService,\n             personaService)\n    {\n\n        var controller = this;\n\n        // Intervals for periodic updates\n        controller.dashboardInterval = undefined;\n        controller.dashboardMessageInterval = undefined;\n\n        // Interval takes update times in ms, so 60s * 1000 * num_minutes\n        controller.intervalLengthOneMinute = 60000;\n        controller.intervalLengthFiveMinutes = 60000 * 5;\n\n        //header\n        controller.displayDate = function displayDate()\n        {\n            return new Date();\n        };\n        controller.me = null;\n        controller.k2aActive = false;\n\t    controller.k2aFeedActive = false;\n\n\t    controller.busyLoadingData = false;\n\n        personaService.getDashboardPreferences().then(\n            function success(results)\n            {\n                controller.prefs = results.dashboardPreferences;\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        securityService.hasRights(\n            {\n                items: [\n                    {\n                        objectName: '_tickler',\n                        privilege: 'w'\n                    },\n                    {\n                        objectName: '_tickler',\n                        privilege: 'r'\n                    }]\n            }).then(\n            function success(results)\n            {\n                if (results.content != null && results.content.length == 2)\n                {\n                    controller.ticklerWriteAccess = results.content[0];\n                    controller.ticklerReadAccess = results.content[1];\n                }\n            },\n            function error(errors)\n            {\n                console.log(errors);\n            });\n\n        controller.inboxTableParams = new NgTableParams(\n            {\n                page: 1, // show first page\n                count: 10\n            },\n            {\n                // total: 0, // length of data\n                getData: function(params)\n                {\n\n\n                    return inboxService.getDashboardItems(params.count()).then(\n                        function success(results)\n                        {\n                            console.log('INBOX DATA: ', results);\n                            params.total(results.total); // recal. page nav controls\n                            return results.content;\n                        },\n                        function error(errors)\n                        {\n                            console.log(errors);\n                        });\n                }\n            });\n\n        controller.openInbox = function openInbox()\n        {\n            newwindow = window.open('../dms/inboxManage.do?method=prepareForIndexPage', 'inbox', 'height=700,width=1000');\n            if (window.focus)\n            {\n                newwindow.focus();\n            }\n        };\n\n\n\t    controller.updateK2aActive = function ()\n\t    {\n\t\t    k2aService.isK2AInit().then(\n\t\t\t    function success(data)\n\t\t\t    {\n\t\t\t\t    controller.k2aActive = data;\n\t\t\t    }\n\t\t    );\n\t    };\n\t    controller.loadMoreK2aFeed = function ()\n\t    {\n\t\t    controller.updateFeed(controller.k2afeed.length, 10);\n\t    };\n\n\t    controller.authenticateK2A = function (id)\n\t    {\n\t\t    window.open('../apps/oauth1.jsp?id=' + id, 'appAuth', 'width=700,height=450');\n\t    };\n\n\t    controller.agreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.agree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.agree = false;\n\t\t\t\t\t    item.agreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    else if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = true;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.disagreeWithK2aPost = function (item)\n\t    {\n\t\t    if (item.disagree)\n\t\t    {\n\t\t\t    k2aService.removeK2AComment(item.agreeId).then(\n\t\t\t\t    function (response)\n\t\t\t\t    {\n\t\t\t\t\t    item.disagree = false;\n\t\t\t\t\t    item.disagreeCount--;\n\t\t\t\t\t    item.agreeId = '';\n\t\t\t\t    },\n\t\t\t\t    function (reason)\n\t\t\t\t    {\n\t\t\t\t\t    alert(reason);\n\t\t\t\t    });\n\t\t    }\n\t\t    if (!(item.agree || item.disagree))\n\t\t    {\n\t\t\t    if (typeof item.newComment === 'undefined')\n\t\t\t    {\n\t\t\t\t    item.newComment = {};\n\t\t\t    }\n\t\t\t    item.newComment.agree = false;\n\t\t\t    item.newComment.body = '';\n\n\t\t\t    controller.commentOnK2aPost(item);\n\t\t    }\n\t    };\n\n\t    controller.commentOnK2aPost = function (item)\n\t    {\n\t\t    item.newComment.postId = item.id;\n\t\t    k2aService.postK2AComment(item.newComment).then(\n\t\t\t    function (response)\n\t\t\t    {\n\t\t\t\t    item.newComment.body = '';\n\t\t\t\t    item.newComment.agree = '';\n\t\t\t\t    item.agreeId = response.agreeId;\n\t\t\t\t    if (!(typeof response.post[0].agree === 'undefined'))\n\t\t\t\t    {\n\t\t\t\t\t    if (response.post[0].agree)\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.agree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.agreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    {\n\t\t\t\t\t\t    item.disagree = true;\n\t\t\t\t\t\t    item.agreeId = response.post[0].agreeId;\n\t\t\t\t\t\t    item.disagreeCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t\t    item.commentCount++;\n\t\t\t\t\t    item.comments.unshift(response.post[0]);\n\t\t\t\t    }\n\t\t\t    },\n\t\t\t    function (reason)\n\t\t\t    {\n\t\t\t\t    alert(reason);\n\t\t\t    });\n\t    };\n\n        controller.updateTicklers = function updateTicklers()\n        {\n            //consider the option to have overdue only or not\n            ticklerService.search(\n                {\n                    status: 'A',\n                    creator: controller.me.providerNo,\n                    overdueOnly: 'property'\n                }, 0, 6).then(\n                function success(results)\n                {\n                    controller.totalTicklers = results.total;\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.ticklers = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.ticklers = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateMessages = function updateMessages()\n        {\n            messageService.getUnread(6).then(\n                function success(results)\n                {\n                    controller.totalMessages = results.total;\n\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.messages = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.messages = arr;\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.updateReports = function updateReports()\n        {\n            //TODO: changed to return 5 since that is all we are using at the moment\n            inboxService.getDashboardItems(5).then(\n                function success(results)\n                {\n                    if (results.content == null)\n                    {\n                        return;\n                    }\n\n                    if (results.content instanceof Array)\n                    {\n                        controller.inbox = results.content;\n                    }\n                    else\n                    {\n                        var arr = new Array();\n                        arr[0] = results.content;\n                        controller.inbox = arr;\n                    }\n                    controller.totalInbox = results.total;\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n        };\n\n        controller.updateFeed = function updateFeed(startPoint, numberOfRows)\n        {\n            if (controller.busyLoadingData) return;\n            controller.busyLoadingData = true;\n            k2aService.getK2aFeed(startPoint, numberOfRows).then(\n                function(response)\n                {\n\t                if (response.content instanceof Array)\n\t                {\n\t                \tvar content = response.content;\n\t\t                for (var i = 0; i < content.length; i++)\n\t\t                {\n\t\t\t                if (!Array.isArray(content[i].comments))\n\t\t\t                {\n\t\t\t\t                var arr = new Array();\n\t\t\t\t                arr[0] = content[i].comments;\n\t\t\t\t                content[i].comments = arr;\n\t\t\t                }\n\t\t                }\n\t\t                if (typeof controller.k2afeed === 'undefined')\n\t\t                {\n\t\t\t                controller.k2afeed = content;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                controller.k2afeed = controller.k2afeed.concat(content);\n\t\t                }\n\t\t                controller.k2aFeedActive = true;\n\t\t                controller.busyLoadingData = false;\n\t                }\n\t                else\n\t                {\n\t\t                if (response.content.authenticatek2a)\n\t\t                {\n\t\t\t                controller.authenticatek2a = response.content.description;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t\t                var arr = new Array();\n\t\t\t                arr[0] = response.content;\n\t\t\t                controller.k2afeed = arr;\n\t\t\t                controller.k2aFeedActive = true;\n\t\t                }\n\t                }\n\n                },\n                function(reason)\n                {\n                    alert(reason);\n                    controller.busyLoadingData = false;\n                });\n        };\n\n        controller.updateDashboard = function updateDashboard()\n        {\n            controller.updateTicklers();\n            controller.updateReports();\n            controller.updateFeed(0, 10);\n            controller.updateK2aActive();\n        };\n\n        $scope.$watch(function()\n        {\n            return securityService.getUser();\n        }, function(newVal)\n        {\n            controller.me = newVal;\n\n            if (newVal != null)\n            {\n                controller.updateDashboard();\n                controller.updateMessages();\n            }\n\n            if (!angular.isDefined(controller.dashboardInterval))\n            {\n                controller.dashboardInterval = $interval(function()\n                {\n                    controller.updateDashboard();\n                }, controller.intervalLengthFiveMinutes);\n            }\n\n            if (!angular.isDefined(controller.dashboardMessageInterval))\n            {\n                controller.dashboardMessageInterval = $interval(function()\n                {\n                    controller.updateMessages();\n                }, controller.intervalLengthOneMinute);\n            }\n\n        }, true);\n\n\n        controller.isTicklerExpiredOrHighPriority = function isTicklerExpiredOrHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n            if (ticklerDate < now)\n            {\n                result = true;\n            }\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.isTicklerHighPriority = function isTicklerHighPriority(tickler)\n        {\n            var ticklerDate = Date.parse(tickler.serviceDate);\n            var now = new Date();\n            var result = false;\n\n            if (tickler.priority == 'High')\n            {\n                result = true;\n            }\n\n            return result;\n        };\n\n        controller.openClassicMessenger = function openClassicMessenger()\n        {\n            if (controller.me != null)\n            {\n                window.open('../oscarMessenger/DisplayMessages.do?providerNo=' + controller.me.providerNo, 'msgs', 'height=700,width=1024,scrollbars=1');\n            }\n        };\n\n        controller.viewMessage = function viewMessage(message)\n        {\n            window.open('../oscarMessenger/ViewMessage.do?messageID=' + message.id + '&boxType=0', 'msg' + message.id, 'height=700,width=1024,scrollbars=1');\n        };\n\n        controller.viewTickler = function viewTickler(tickler)\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/ticklerView.jsp',\n                    controller: 'Tickler.TicklerViewController as  ticklerViewCtrl',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve:\n                        {\n                            tickler: function()\n                            {\n                                return tickler;\n                            },\n                            ticklerNote: function()\n                            {\n                                return noteService.getTicklerNote(tickler.id);\n                            },\n                            ticklerWriteAccess: function()\n                            {\n                                return controller.ticklerWriteAccess;\n                            },\n                            me: function()\n                            {\n                                return controller.me;\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    //console.log('data from modalInstance '+data);\n                    if (results != null && results == true)\n                    {\n                        controller.updateTicklers();\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        controller.configureTicklers = function configureTicklers()\n        {\n            var modalInstance = $uibModal.open(\n                {\n                    templateUrl: 'src/tickler/configureDashboard.jsp',\n                    controller: 'Dashboard.TicklerConfigureController as ticklerConfigureCtrl',\n                    backdrop: 'static',\n                    size: 'md',\n                    resolve:\n                        {\n                            prefs: function()\n                            {\n                                return personaService.getDashboardPreferences();\n                            }\n                        }\n                });\n\n            modalInstance.result.then(\n                function success(results)\n                {\n                    if (results == true)\n                    {\n                        controller.updateTicklers();\n                        personaService.getDashboardPreferences().then(\n                            function(results)\n                            {\n                                controller.prefs = results.dashboardPreferences;\n                            });\n                    }\n                },\n                function error(errors)\n                {\n                    console.log(errors);\n                });\n\n        };\n\n        // Destroy interval before controller closes to ensure background updates don't occur\n        $scope.$on('$destroy', function()\n        {\n            if (angular.isDefined(controller.dashboardInterval))\n            {\n                $interval.cancel(controller.dashboardInterval);\n                controller.dashboardInterval = undefined;\n            }\n\n            if (angular.isDefined(controller.dashboardMessageInterval))\n            {\n                $interval.cancel(controller.dashboardMessageInterval);\n                controller.dashboardMessageInterval = undefined;\n            }\n        })\n    }\n]);","angular.module('Dashboard').controller('Dashboard.TicklerConfigureController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'personaService',\n\t'prefs',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tpersonaService,\n\t\tprefs)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.prefs = prefs.dashboardPreferences;\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\n\t\t\tpersonaService.updateDashboardPreferences(controller.prefs).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nimport {AppointmentApi} from \"../../generated/api/AppointmentApi\";\n\nangular.module('Record').controller('Record.RecordController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$window',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$localStorage',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'$interval',\n\t'$uibModal',\n\t'demographicService',\n\t'demo',\n\t'user',\n\t'properties',\n\t'noteService',\n\t'uxService',\n\t'securityService',\n\t'billingService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$window,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$localStorage,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\t$timeout,\n\t\t$interval,\n\t\t$uibModal,\n\t\tdemographicService,\n\t\tdemo,\n\t\tuser,\n\t\tproperties,\n\t\tnoteService,\n\t\tuxService,\n\t\tsecurityService,\n\t\tbillingService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.demographic = demo;\n\t\tcontroller.properties = properties;\n\t\tcontroller.page = {};\n\t\tcontroller.page.assignedCMIssues = [];\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\tcontroller.page.itvSet = null;\n\t\tcontroller.page.itvCheck = null;\n\t\tcontroller.page.editingNoteId = null;\n\t\tcontroller.page.isNoteSaved = false; // Track save state of note TODO: Potentially add this to the encounterNote object on the backend\n\n\t\tcontroller.$storage = $localStorage; // Define persistent storage\n\t\tcontroller.recordtabs2 = [];\n\t\tcontroller.working = false;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.fillMenu();\n\t\t};\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", controller.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\tcontroller.fillMenu = function fillMenu()\n\t\t{\n\t\t\tuxService.menu($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.recordtabs2 = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.changeTab = function changeTab(temp)\n\t\t{\n\t\t\tcontroller.currenttab2 = controller.recordtabs2[temp.id];\n\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(temp.state))\n\t\t\t{\n\t\t\t\tif(Juno.Common.Util.isDefinedAndNotNull(temp.demoId)){\n\t\t\t\t\t$state.go(temp.state[0],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: temp.demoId\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$state.go(temp.state[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (angular.isDefined(temp.url))\n\t\t\t{\n\t\t\t\tvar win;\n\t\t\t\tif (temp.label == \"Rx\")\n\t\t\t\t{\n\t\t\t\t\twin = temp.label + controller.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win\" + rnd;\n\t\t\t\t}\n\t\t\t\twindow.open(temp.url, win, \"scrollbars=yes, location=no, width=1000, height=600\", \"\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isActive = function isActive(tab)\n\t\t{\n\t\t\tif(Juno.Common.Util.isDefinedAndNotNull($state.current.name) &&\n\t\t\t\tJuno.Common.Util.isDefinedAndNotNull(tab.state))\n\t\t\t{\n\t\t\t\treturn (tab.state.includes($state.current.name));\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t// Check if there have been potential changes to a note, display a warning if needed\n\t\t$window.onbeforeunload = function (event) {\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote))\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0 && controller.page.isNoteSaved === false)\n\t\t\t\t{\n\t\t\t\t\treturn 'You have made changes to a note, but you did not save them yet.\\nLeaving the page will revert all changes.';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event, data)\n\t\t{\n\t\t\t// If the encounter note is not null/undefined and the new state is not a child of record, continue\n\t\t\tif (Juno.Common.Util.isDefinedAndNotNull(controller.page.encounterNote) &&\n\t\t\t\tcontroller.page.isNoteSaved === false && data.name.indexOf('record.') === -1)\n\t\t\t{\n\t\t\t\tif(controller.page.encounterNote.note.trim().length !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar discard = confirm(\"You have unsaved note data. Are you sure you want to leave?\");\n\t\t\t\t\tif (!discard)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//////AutoSave\n\t\tvar saveIntervalSeconds = 2;\n\n\t\tvar timeout = null;\n\t\tvar saveUpdates = function saveUpdates()\n\t\t{\n\t\t\tif (controller.page.encounterNote.note == controller.page.initNote) return; //user did not input anything, don't save\n\n\t\t\tconsole.log(\"save\", controller.page.encounterNote);\n\t\t\tnoteService.tmpSave($stateParams.demographicNo, controller.page.encounterNote);\n\t\t};\n\t\tvar skipTmpSave = false;\n\t\tvar noteDirty = false;\n\n\t\tvar delayTmpSave = function delayTmpSave(newVal, oldVal)\n\t\t{\n\t\t\tif (!skipTmpSave)\n\t\t\t{\n\t\t\t\tif (newVal != oldVal)\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = true;\n\t\t\t\t\tif (timeout)\n\t\t\t\t\t{\n\t\t\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\t\t}\n\t\t\t\t\ttimeout = $timeout(saveUpdates, saveIntervalSeconds * 1000);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnoteDirty = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskipTmpSave = false; // only skip once\n\t\t};\n\t\t$scope.$watch('controller.page.encounterNote.note', delayTmpSave);\n\n\t\t//////\n\n\t\t//////Timer\n\t\tvar d = new Date(); //the start\n\n\t\tvar totalSeconds = 0;\n\t\tvar myVar = setInterval(setTime, 1000);\n\n\t\tcontroller.getCurrentTimerToggle = function getCurrentTimerToggle()\n\t\t{\n\t\t\tif (angular.isDefined(myVar))\n\t\t\t{\n\t\t\t\treturn \"fa-pause\";\n\t\t\t}\n\t\t\treturn \"fa-play\";\n\t\t};\n\n\t\tcontroller.toggleTimer = function toggleTimer()\n\t\t{\n\t\t\tif ($(\"#aToggle\").hasClass(\"fa-pause\"))\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-pause\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-play\");\n\t\t\t\tclearInterval(myVar);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(\"#aToggle\").removeClass(\"fa-play\");\n\t\t\t\t$(\"#aToggle\").addClass(\"fa-pause\");\n\t\t\t\tmyVar = setInterval(setTime, 1000);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.pasteTimer = function pasteTimer()\n\t\t{\n\t\t\tvar ed = new Date();\n\t\t\tcontroller.page.encounterNote.note += \"\\n\" + document.getElementById(\"startTag\").value + \": \" + d.getHours() + \":\" + pad(d.getMinutes()) + \"\\n\" + document.getElementById(\"endTag\").value + \": \" + ed.getHours() + \":\" + pad(ed.getMinutes()) + \"\\n\" + pad(parseInt(totalSeconds / 3600)) + \":\" + pad(parseInt((totalSeconds / 60) % 60)) + \":\" + pad(totalSeconds % 60);\n\t\t};\n\n\t\tfunction setTime()\n\t\t{\n\t\t\t++totalSeconds;\n\t\t\tdocument.getElementById(\"aTimer\").innerHTML = pad(parseInt(totalSeconds / 60)) + \":\" + pad(totalSeconds % 60);\n\t\t\tif (totalSeconds == 1200)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#DFF0D8\");\n\t\t\t} //1200 sec = 20 min light green\n\t\t\tif (totalSeconds == 3000)\n\t\t\t{\n\t\t\t\t$(\"#aTimer\").css(\"background-color\", \"#FDFEC7\");\n\t\t\t} //3600 sec = 50 min light yellow\n\t\t}\n\n\t\tfunction pad(val)\n\t\t{\n\t\t\tvar valString = val + \"\";\n\t\t\tif (valString.length < 2)\n\t\t\t{\n\t\t\t\treturn \"0\" + valString;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn valString;\n\t\t\t}\n\t\t}\n\t\t$scope.$on('$destroy', function()\n\t\t{\n\t\t\tclearInterval(myVar);\n\t\t});\n\t\t//////\t\t\n\n\t\tcontroller.isWorking = function isWorking()\n\t\t{\n\t\t\treturn controller.working;\n\t\t};\n\n\t\t// Note Input Logic\n\t\tcontroller.toggleNote = function toggleNote()\n\t\t{\n\t\t\tif (controller.$storage.hideNote)\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t}\n\t\t};\n\n\t\t// TODO\n\t\tcontroller.cancelNoteEdit = function cancelNoteEdit()\n\t\t{\n\t\t\tconsole.log('CANCELLING EDIT');\n\t\t\tcontroller.page.encounterNote = null;\n\t\t\t$scope.$broadcast('stopEditingNote');\n\t\t\tskipTmpSave = true;\n\t\t\tcontroller.getCurrentNote(false);\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t\tcontroller.$storage.hideNote = true;\n\t\t};\n\n\t\t// This is a hack wrapper until we figure out a more sane way to check the DOM for updated content\n\t\t// Right now this is being called from anywhere that directly manipulates the DOM\n\t\tcontroller.updateCurrentNote = function updateCurrentNote(note)\n\t\t{\n\t\t\tcontroller.page.encounterNote.note = note;\n\t\t};\n\n\t\tcontroller.saveNote = function saveNote()\n\t\t{\n\t\t\tif(controller.isWorking())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Don't let users save an empty note\n\t\t\tif (controller.page.encounterNote.note.length === 0)\n\t\t\t{\n\t\t\t\talert(\"Can't save a blank note!\"); // Placeholder error handling\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.working = true;\n\n\t\t\t// Check if this is a new note, if it isn't, we don't want to overwrite the existing observationDate\n\t\t\t// Need to find a better way of preventing this date overwrite\n\t\t\tcontroller.page.encounterNote.assignedIssues = controller.page.assignedCMIssues;\n\t\t\tcontroller.page.encounterNote.issueDescriptions = [];\n\t\t\tif(!Juno.Common.Util.isInArray(user.displayName,  controller.page.encounterNote.editorNames))\n\t\t\t\tcontroller.page.encounterNote.editorNames.push(user.displayName);\n\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.issueDescriptions.push(controller.page.assignedCMIssues[i].issue.description);\n\t\t\t}\n\n\t\t\tnoteService.saveNote($stateParams.demographicNo, controller.page.encounterNote).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.isNoteSaved = true;\n\t\t\t\t\t$scope.$broadcast('noteSaved', results);\n\t\t\t\t\tskipTmpSave = true;\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.$storage.hideNote = true;\n\t\t\t\t\tcontroller.getCurrentNote(false);\n\t\t\t\t\tcontroller.page.assignedCMIssues = [];\n\t\t\t\t\tcontroller.working = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.working = false;\n\t\t\t\t});\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t};\n\n\t\tcontroller.saveSignNote = function saveSignNote()\n\t\t{\n\t\t\tif(controller.isWorking())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tcontroller.saveSignVerifyNote = function saveSignVerifyNote()\n\t\t{\n\t\t\tif(controller.isWorking())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote.isVerified = true;\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\t\t};\n\n\t\tbillingService.getBillingRegion().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.billregion = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tbillingService.getDefaultView().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.defaultView = results.message;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tif ($location.search().appointmentNo != null)\n\t\t{\n\t\t\tcontroller.appointmentApi.getAppointment($location.search().appointmentNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.appointment = results.data.body;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t}\n\n\t\tcontroller.saveSignBillNote = function saveSignBillNote()\n\t\t{\n\t\t\tif(controller.isWorking())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote.isSigned = true;\n\t\t\tcontroller.saveNote();\n\n\t\t\tvar dxCode = \"\";\n\t\t\tfor (var i = 0; i < controller.page.assignedCMIssues.length; i++)\n\t\t\t{\n\t\t\t\tdxCode += \"&dxCode=\" + controller.page.assignedCMIssues[i].issue.code.substring(0, 3);\n\t\t\t}\n\n\t\t\tvar apptNo = \"\",\n\t\t\t\tapptProvider = \"\",\n\t\t\t\tapptDate = \"\",\n\t\t\t\tapptStartTime = \"\";\n\t\t\tif (controller.page.appointment != null)\n\t\t\t{\n\t\t\t\tapptNo = controller.page.appointment.id;\n\t\t\t\tapptProvider = controller.page.appointment.providerNo;\n\t\t\t\tvar dt = moment(controller.page.appointment.appointmentDate).toDate();\n\t\t\t\tapptDate = dt.getFullYear() + \"-\" + zero(dt.getMonth() + 1) + \"-\" + zero(dt.getDate());\n\t\t\t\tdt = new Date(controller.page.appointment.startTime);\n\t\t\t\tapptStartTime = zero(dt.getHours()) + \":\" + zero(dt.getMinutes()) + \":\" + zero(dt.getSeconds());\n\t\t\t}\n\n\t\t\tvar url = \"../billing.do?billRegion=\" + encodeURIComponent(controller.page.billregion);\n\t\t\turl += \"&billForm=\" + encodeURIComponent(controller.page.defaultView);\n\t\t\turl += \"&demographic_name=\" + encodeURIComponent(demo.lastName + \",\" + demo.firstName);\n\t\t\turl += \"&demographic_no=\" + demo.demographicNo;\n\t\t\turl += \"&providerview=\" + user.providerNo + \"&user_no=\" + user.providerNo;\n\t\t\turl += \"&appointment_no=\" + apptNo + \"&apptProvider_no=\" + apptProvider;\n\t\t\turl += \"&appointment_date=\" + apptDate + \"&start_time=\" + apptStartTime;\n\t\t\turl += \"&hotclick=&status=t&bNewForm=1\" + dxCode;\n\n\t\t\twindow.open(url, \"billingWin\", \"scrollbars=yes, location=no, width=\" + screen.width + \", height=\" + screen.height, \"\");\n\t\t};\n\n\t\tcontroller.page.currentNoteConfig = {};\n\n\n\t\tcontroller.getIssueNote = function getIssueNote()\n\t\t{\n\t\t\tif (controller.page.encounterNote.noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.encounterNote.noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results != null) controller.page.assignedCMIssues = toArray(results.assignedCMIssues);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.getCurrentNote = function getCurrentNote(showNoteAfterLoadingFlag)\n\t\t{\n\t\t\tnoteService.getCurrentNote($stateParams.demographicNo, $location.search()).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.encounterNote = results;\n\t\t\t\t\tcontroller.page.initNote = results.note; //compare this with current note content to determine tmpsave or not\n\t\t\t\t\tcontroller.getIssueNote();\n\t\t\t\t\t$scope.$broadcast('currentlyEditingNote', controller.page.encounterNote);\n\t\t\t\t\tcontroller.initAppendNoteEditor();\n\t\t\t\t\tcontroller.initObservationDate();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getCurrentNote(true);\n\n\t\tcontroller.editNote = function editNote(note)\n\t\t{\n\t\t\t$scope.$broadcast('', note);\n\t\t};\n\n\t\t$rootScope.$on('loadNoteForEdit', function(event, data)\n\t\t{\n\t\t\t// Check if another note is currently being edited\n\t\t\tif (controller.page.editingNoteId !== null)\n\t\t\t{\n\t\t\t\tconsole.log('Note is already being edited! Do you want to save changes?');\n\t\t\t\tcontroller.displayWarning(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.page.encounterNote = angular.copy(data);\n\t\t\tcontroller.getIssueNote();\n\n\t\t\t//Need to check if note has been saved yet.\n\t\t\tcontroller.$storage.hideNote = false;\n\t\t\t$scope.$broadcast('currentlyEditingNote', controller.page.encounterNote);\n\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.initAppendNoteEditor = function initAppendNoteEditor()\n\t\t{\n\t\t\tif ($location.search().noteEditorText != null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + $location.search().noteEditorText;\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the observationDate for new notes\n\t\tcontroller.initObservationDate = function initObservationDate()\n\t\t{\n\t\t\tif (controller.page.encounterNote.observationDate === null)\n\t\t\t{\n\t\t\t\tcontroller.page.encounterNote.observationDate = new Date();\n\t\t\t}\n\t\t};\n\n\n\t\t$rootScope.$on(\"$stateChangeStart\", function()\n\t\t{\n\t\t\tcontroller.removeEditingNoteFlag();\n\t\t});\n\n\t\tcontroller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t{\n\t\t\tnoteService.setEditingNoteFlag(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (!results.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + controller.page.editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t\t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.encounterNote.uuid == null) return;\n\t\t\tcontroller.page.isNoteSaved = false;\n\t\t\tcontroller.page.editingNoteId = controller.page.encounterNote.uuid;\n\t\t\tif (controller.page.itvSet == null)\n\t\t\t{\n\t\t\t\tcontroller.page.itvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min until canceled\n\t\t\t}\n\t\t\tif (controller.page.itvCheck == null)\n\t\t\t{ //warn once only when the 1st time another user tries to edit this note\n\t\t\t\tcontroller.page.itvCheck = $interval(function()\n\t\t\t\t{\n\t\t\t\t\tnoteService.checkEditNoteNew(controller.page.editingNoteId, user.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t\t{ //someone else wants to edit this note\n\t\t\t\t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t\t\t\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\t\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\t\t\t\t}, 10000); //check for new edit every 10 seconds\n\t\t\t}\n\t\t};\n\n\t\tcontroller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t{\n\t\t\tif (controller.page.editingNoteId != null)\n\t\t\t{\n\t\t\t\tnoteService.removeEditingNoteFlag(controller.page.editingNoteId, user.providerNo);\n\t\t\t\t$interval.cancel(controller.page.itvSet);\n\t\t\t\t$interval.cancel(controller.page.itvCheck);\n\t\t\t\tcontroller.page.itvSet = null;\n\t\t\t\tcontroller.page.itvCheck = null;\n\t\t\t\tcontroller.page.editingNoteId = null;\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.searchTemplates = function searchTemplates(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tname: term\n\t\t\t};\n\n\t\t\treturn uxService.searchTemplates(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.templates.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tencounterTemplateName: results.templates[x].encounterTemplateName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.insertTemplate = function insertTemplate(item, model, label)\n\t\t{\n\t\t\t\n\t\t\tuxService.getTemplate(\n\t\t\t{\n\t\t\t\tname: model\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.templates !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar template = results.templates[0];\n\t\t\t\t\t\tcontroller.page.encounterNote.note = controller.page.encounterNote.note + template.encounterTemplateValue;\n\t\t\t\t\t\tcontroller.options = {\n\t\t\t\t\t\t\tmagicVal: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.displayWarning = function displayWarning(noteToEdit)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/saveWarning.jsp',\n\t\t\t\tcontroller: 'Record.Summary.SaveWarningController as saveWarningCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'md',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tsaveSignNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.saveSignNote;\n\t\t\t\t\t},\n\t\t\t\t\tcancelNoteEdit: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.cancelNoteEdit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Might need to keep this to continue the original edit action\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tconsole.log('SEARCHING FOR ISSUE: ', term);\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.page.assignedCMIssues.push(cmIssue);\n\n\t\t\t\t\t$scope.$broadcast('noteIssueAdded');\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\tconsole.log('removed issue in record ctrl');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.page.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.page.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.page.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.page.assignedCMIssues = newList;\n\n\t\t\t$scope.$broadcast('noteIssueRemoved');\n\t\t};\n\n\t\t// If inverse === false, return true if the given item is supposed to be shown outisde the 'more' dropdown on the medium view\n\t\t// If inverse === true, return the inverse of the above statement,\n\t\tcontroller.mediumNavItemFilter = function mediumNavItemFilter(inverse)\n\t\t{\n\t\t\treturn function(item)\n\t\t\t{\n\t\t\t\tvar labelsToShow = ['Details', 'Summary', 'Forms', 'Tickler', 'Health Tracker', 'Rx', 'Consultations'];\n\t\t\t\tvar filterValue = $.inArray(item.label, labelsToShow) != -1;\n\n\t\t\t\tif (inverse === true)\n\t\t\t\t{\n\t\t\t\t\treturn !filterValue;\n\t\t\t\t}\n\n\t\t\t\treturn filterValue;\n\t\t\t};\n\t\t};\n\n\t\tcontroller.demographic.age = Juno.Common.Util.calcAge(controller.demographic.dobYear, controller.demographic.dobMonth, controller.demographic.dobDay);\n\t\tcontroller.init();\n\t}\n]);\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\tif (obj == null) return [];\n\treturn [obj];\n}\n\nfunction zero(n)\n{\n\tif (n < 10) n = \"0\" + n;\n\treturn n;\n}","'use strict';\n\nangular.module('Record.Summary', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.Summary').controller('Record.Summary.SummaryController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$filter',\n\t'$uibModal',\n\t'$interval',\n\t'user',\n\t'noteService',\n\t'summaryService',\n\t'securityService',\n\t'formService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$filter,\n\t\t$uibModal,\n\t\t$interval,\n\t\tuser,\n\t\tnoteService,\n\t\tsummaryService,\n\t\tsecurityService,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.columnOne = {};\n\t\tcontroller.page.columnOne.modules = {};\n\n\t\tcontroller.page.columnThree = {};\n\t\tcontroller.page.columnThree.modules = {};\n\t\tcontroller.page.selectedNoteHash = {};\n\n\t\tcontroller.index = 0;\n\t\tcontroller.busy = false;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.user = user;\n\n\t\t// store the child component refresh function so that this controller can trigger it.\n\t\tcontroller.noteListComponentRefreshFunction = null;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"r\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.canRead = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_eChart\", \"w\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotAdd = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openRx = function openRx(demoNo)\n\t\t{\n\t\t\twin = \"Rx\" + demoNo;\n\t\t\tvar url = \"../oscarRx/choosePatient.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.openAllergies = function openAllergies(demoNo)\n\t\t{\n\t\t\twin = \"Allergy\" + demoNo;\n\t\t\tvar url = \"../oscarRx/showAllergy.do?demographicNo=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openPreventions = function openPreventions(demoNo)\n\t\t{\n\t\t\twin = \"prevention\" + demoNo;\n\t\t\tvar url = \"../oscarPrevention/index.jsp?demographic_no=\" + demoNo;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.openAddForms = function openForms()\n\t\t{\n\t\t\t// open forms tab with \"Library\" list selected\n\t\t\t$state.go('record.forms.add');\n\t\t};\n\n\t\tcontroller.openCompletedForms = function()\n\t\t{\n\t\t\t$state.go('record.forms.completed');\n\t\t};\n\n\t\t// There is probably a better way of doing this\n\t\tcontroller.findGroupNote = function findGroupNote(note)\n\t\t{\n\t\t\tvar moduleList = controller.page.columnOne.modules;\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t{\n\n\t\t\t\tvar summaryItems = moduleList[i].summaryItem;\n\t\t\t\tfor (var k = 0; k < summaryItems.length; k++)\n\t\t\t\t{\n\t\t\t\t\tif (summaryItems[k].noteId === note.noteId)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnote: summaryItems[k],\n\t\t\t\t\t\t\tmodule: moduleList[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.bubbleUpEditNoteCallback = function bubbleUpEditNoteCallback(note, successCallback, dismissCallback)\n\t\t{\n\t\t\t//TODO open record controller note edit without emit?\n\t\t\t$scope.$emit('loadNoteForEdit', note);\n\t\t};\n\n\t\tcontroller.trackerUrl = \"\";\n\n\t\tcontroller.getTrackerUrl = function getTrackerUrl(demographicNo)\n\t\t{\n\t\t\tcontroller.trackerUrl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + demographicNo + '&numEle=4&tracker=slim';\n\t\t};\n\n\t\tfunction getLeftItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'left').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.columnOne.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnOne.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetLeftItems();\n\n\n\t\tfunction getRightItems()\n\t\t{\n\t\t\tsummaryService.getSummaryHeaders($stateParams.demographicNo, 'right').then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.columnThree.modules = results;\n\t\t\t\t\tfillItems(controller.page.columnThree.modules);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.error = errors;\n\t\t\t\t});\n\t\t}\n\n\t\tgetRightItems();\n\n\t\tvar summaryLists = {};\n\n\t\tfunction fillItems(itemsToFill)\n\t\t{\n\n\t\t\tfor (var i = 0; i < itemsToFill.length; i++)\n\t\t\t{\n\t\t\t\tsummaryLists[itemsToFill[i].summaryCode] = itemsToFill[i];\n\n\t\t\t\tsummaryService.getFullSummary($stateParams.demographicNo, itemsToFill[i].summaryCode).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (angular.isDefined(results.summaryItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.summaryItem instanceof Array)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = results.summaryItem;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsummaryLists[results.summaryCode].summaryItem = [results.summaryItem];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tcontroller.onEditCpp = function(note, successCallback, dismissCallback)\n\t\t{\n\t\t\tvar obj = controller.findGroupNote(note);\n\t\t\tif (obj === null)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\twindowClass: 'notesModal',\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmod: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn obj.module;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\taction: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuser: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.user;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnote: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn note;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(successCallback, dismissCallback);\n\t\t};\n\n\t\tcontroller.editGroupedNotes = function editGroupedNotes(size, mod, action, successCallback, dismissCallback)\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/summary/groupNotes.jsp',\n\t\t\t\tcontroller: 'Record.Summary.GroupNotesController as groupNotesCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\twindowClass: 'notesModal',\n\t\t\t\tsize: size,\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tmod: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn mod;\n\t\t\t\t\t},\n\t\t\t\t\taction: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn action;\n\t\t\t\t\t},\n\t\t\t\t\tuser: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.user;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t// trigger the callback\n\t\t\t\t\tif(angular.isFunction(successCallback))\n\t\t\t\t\t{\n\t\t\t\t\t\tsuccessCallback(results);\n\t\t\t\t\t}\n\n\t\t\t\t\t// refresh the main note list\n\t\t\t\t\tcontroller.refreshModel();\n\t\t\t\t},\n\t\t\t\tfunction dismiss(reason)\n\t\t\t\t{\n\t\t\t\t\tif (angular.isFunction(dismissCallback))\n\t\t\t\t\t{\n\t\t\t\t\t\tdismissCallback(reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// refresh the data model for the page\n\t\tcontroller.refreshModel = function()\n\t\t{\n\t\t\t// refresh the main note list\n\t\t\tif(angular.isFunction(controller.noteListComponentRefreshFunction))\n\t\t\t{\n\t\t\t\tcontroller.noteListComponentRefreshFunction();\n\t\t\t}\n\t\t\tgetLeftItems();\n\t\t\tgetRightItems();\n\t\t};\n\n\t\t$scope.$on('summary_page_refresh', function (refresh)\n\t\t{\n\t\t\tif (refresh)\n\t\t\t{\n\t\t\t\tcontroller.refreshModel();\n\t\t\t}\n\t\t});\n\n\t\t//TODO I would really like to refactor this out\n\t\tcontroller.gotoState = function gotoState(item, mod, successCallback, dismissCallback)\n\t\t{\n\t\t\tif (item == \"add\")\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', mod, null, successCallback, dismissCallback);\n\n\t\t\t}\n\t\t\telse if (item.action == 'add' && item.type == 'dx_reg')\n\t\t\t{\n\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, item.id, successCallback, dismissCallback);\n\n\t\t\t}\n\t\t\telse if (item.type == 'lab' || item.type == 'document' || item.type == 'rx' || item.type == 'allergy' || item.type == 'prevention' || item.type == 'dsguideline')\n\t\t\t{\n\n\t\t\t\tif (item.type == 'rx')\n\t\t\t\t{\n\t\t\t\t\twin = \"Rx\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'allergy')\n\t\t\t\t{\n\t\t\t\t\twin = \"Allergy\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (item.type == 'prevention')\n\t\t\t\t{\n\t\t\t\t\twin = \"prevention\" + $stateParams.demographicNo;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//item.type == 'lab' || item.type == 'document'\n\t\t\t\t\t//var rnd = Math.round(Math.random() * 1000);\n\t\t\t\t\twin = \"win_item.type_\";\n\t\t\t\t}\n\n\t\t\t\twindow.open(item.action, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (item.type === 'eform')\n\t\t\t{\n\t\t\t\tformService.openEFormInstancePopup($stateParams.demographicNo, item.id).then(function (val)\n\t\t\t\t{\n\t\t\t\t\tcontroller.refreshModel();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (item.type === 'form')\n\t\t\t{\n\t\t\t\tformService.openFormInstancePopup(item.displayName, $stateParams.demographicNo, null, item.id).then(function (val)\n\t\t\t\t{\n\t\t\t\t\tcontroller.refreshModel();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (item.action == 'action')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('lg', mod, item.id, successCallback, dismissCallback);\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$state.transitionTo(item.action,\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tid: item.id\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.viewEform = function viewEform(eFormId)\n\t\t{\n\t\t\t$state.transitionTo('record.forms.view',\n\t\t\t\t{\n\t\t\t\t\tdemographicNo: $stateParams.demographicNo,\n\t\t\t\t\ttype: 'eform',\n\t\t\t\t\tid: eFormId\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlocation: 'replace',\n\t\t\t\t\tnotify: true\n\t\t\t\t});\n\t\t};\n\t\tcontroller.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\t// get only document summary items\n\t\t\tlet itemArray = summaryLists['incoming'].summaryItem;\n\t\t\tlet item = null;\n\n\t\t\t// find the summary item that matches the document id\n\t\t\tfor (let i=0; i < itemArray.length; i++)\n\t\t\t{\n\t\t\t\tif(itemArray[i].id === documentId) {\n\t\t\t\t\titem = itemArray[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we found a matching document, open it\n\t\t\tif(item != null) {\n\t\t\t\tcontroller.gotoState(item);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.error(\"item not linked to valid document id:\" + documentId);\n\t\t\t}\n\t\t};\n\n\n\t\tcontroller.showPrintModal = function showPrintModal()\n\t\t{\n\t\t\tconsole.info(controller.page.selectedNoteHash);\n\n\t\t\tvar selectedNoteList = [];\n\n\t\t\tObject.keys(controller.page.selectedNoteHash).forEach(function (key) {\n\t\t\t\tvar note = controller.page.selectedNoteHash[key];\n\n\t\t\t\tselectedNoteList.push(note);\n\t\t\t\t// iteration code\n\t\t\t});\n\n\t\t\tconsole.info(selectedNoteList);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/record/print.jsp',\n\t\t\t\tcontroller: 'Record.Summary.RecordPrintController as recordPrintCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tselectedNoteList: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn selectedNoteList;\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.onSummaryModAdd = function onSummaryModAdd(module, successCallback, dismissCallback)\n\t\t{\n\t\t\tif (module.summaryCode === 'othermeds' ||\n\t\t\t\tmodule.summaryCode === 'ongoingconcerns' ||\n\t\t\t\tmodule.summaryCode === 'medhx' ||\n\t\t\t\tmodule.summaryCode === 'sochx' ||\n\t\t\t\tmodule.summaryCode === 'famhx' ||\n\t\t\t\tmodule.summaryCode === 'reminders' ||\n\t\t\t\tmodule.summaryCode === 'riskfactors')\n\t\t\t{\n\t\t\t\tcontroller.editGroupedNotes('md', module, null, successCallback, dismissCallback);\n\t\t\t}\n\t\t\telse if (module.summaryCode === 'meds')\n\t\t\t{\n\t\t\t\tcontroller.openRx(controller.demographicNo);\n\t\t\t}\n\t\t\telse if (module.summaryCode === 'allergies')\n\t\t\t{\n\t\t\t\tcontroller.openAllergies(controller.demographicNo);\n\t\t\t}\n\t\t\telse if (module.summaryCode === 'forms')\n\t\t\t{\n\t\t\t\tcontroller.openAddForms();\n\t\t\t}\n\t\t\telse if (module.summaryCode === 'preventions')\n\t\t\t{\n\t\t\t\tcontroller.openPreventions(controller.demographicNo);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.onSummaryModClickTitle = function (module)\n\t\t{\n\t\t\tif (module.summaryCode === \"forms\")\n\t\t\t{\n\t\t\t\tcontroller.openCompletedForms()\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isModTitleClickable = function(module)\n\t\t{\n\t\t\treturn module.summaryCode === \"forms\";\n\t\t};\n\n\t\t// determine if the date should be show for a particular summary module\n\t\tcontroller.hideSummaryModuleDate = function(module)\n\t\t{\n\t\t\tswitch (module.summaryCode)\n\t\t\t{\n\t\t\t\tcase \"meds\":\n\t\t\t\tcase \"othermeds\":\n\t\t\t\tcase \"ongoingconcerns\":\n\t\t\t\tcase \"medhx\":\n\t\t\t\tcase \"sochx\":\n\t\t\t\tcase \"famhx\":\n\t\t\t\tcase \"reminders\":\n\t\t\t\tcase \"riskfactors\":\n\t\t\t\tcase \"allergies\":\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t// called when a child component is initialized. this allows the controller to call select child methods\n\t\tcontroller.registerEncNoteListFunctions = function(refresh)\n\t\t{\n\t\t\tcontroller.noteListComponentRefreshFunction = refresh;\n\t\t}\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.RecordPrintController', [\n\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'selectedNoteList',\n\n\tfunction(\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\tselectedNoteList)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.printTypeEnum = Object.freeze({\n\t\t\tall: 'all',\n\t\t\tdates: 'dates',\n\t\t\tselected: 'selected',\n\t\t});\n\n\t\tcontroller.page = {\n\t\t\tselectedWarning: false,\n\t\t};\n\t\tcontroller.pageOptions = {\n\t\t\tprintType: controller.printTypeEnum.all,\n\t\t\tdates: {},\n\t\t\tselectedList: selectedNoteList,\n\t\t};\n\n\n\t\t/*\n\t\t *If at least one note selected, Default to Note. Other wise default to All\n\t\t */\n\t\tif (controller.pageOptions.selectedList.length > 0)\n\t\t{\n\t\t\tcontroller.pageOptions.printType = controller.printTypeEnum.selected;\n\t\t}\n\n\t\tcontroller.printToday = function printToday()\n\t\t{\n\t\t\tcontroller.pageOptions.printType = controller.printTypeEnum.dates;\n\t\t\tvar date = new Date();\n\t\t\tcontroller.pageOptions.dates.start = date;\n\t\t\tcontroller.pageOptions.dates.end = date;\n\t\t};\n\n\t\tcontroller.cancelPrint = function cancelPrint()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.sendToPhr = function sendToPhr()\n\t\t{\n\t\t\tvar queryString = \"demographic_no=\" + $stateParams.demographicNo;\n\t\t\tqueryString = queryString + \"&module=echart\";\n\n\t\t\tif (controller.pageOptions.printType === controller.printTypeEnum.all)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType === controller.printTypeEnum.selected)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=' + controller.pageOptions.selectedList.join();\n\t\t\t}\n\t\t\telse if (controller.pageOptions.printType === controller.printTypeEnum.dates)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&notes2print=ALL_NOTES';\n\t\t\t\tqueryString = queryString + '&startDate=' + controller.pageOptions.dates.start.getTime();\n\t\t\t\tqueryString = queryString + '&endDate=' + controller.pageOptions.dates.end.getTime();\n\t\t\t}\n\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printCPP=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printRx=true';\n\t\t\t}\n\t\t\tif (controller.pageOptions.cpp)\n\t\t\t{\n\t\t\t\tqueryString = queryString + '&printLabs=true';\n\t\t\t}\n\t\t\tconsole.log(\"QS\" + queryString);\n\n\t\t\tif (controller.pageOptions.printType === controller.printTypeEnum.selected\n\t\t\t\t&& controller.pageOptions.selectedList.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\twindow.open('../SendToPhr.do?' + queryString, '_blank');\n\t\t};\n\n\t\tcontroller.print = function print()\n\t\t{\n\t\t\tif (controller.pageOptions.printType ===controller.printTypeEnum.selected\n\t\t\t\t&& controller.pageOptions.selectedList.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.selectedWarning = false;\n\t\t\t}\n\n\t\t\tvar ops = encodeURIComponent(JSON.stringify(controller.pageOptions));\n\t\t\twindow.open('../ws/rs/recordUX/' + $stateParams.demographicNo + '/print?printOps=' + ops, '_blank');\n\n\n\n\t\t};\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.GroupNotesController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'$stateParams',\n\t'$state',\n\t'$interval',\n\t'mod',\n\t'action',\n\t'user',\n\t'noteService',\n\t'securityService',\n\t'diseaseRegistryService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\t$stateParams,\n\t\t$state,\n\t\t$interval,\n\t\tmod,\n\t\taction,\n\t\tuser,\n\t\tnoteService,\n\t\tsecurityService,\n\t\tdiseaseRegistryService)\n\t{\n\n\t\tvar controller = this;\n\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.title = mod.displayName;\n\t\tcontroller.page.items = mod.summaryItem;\n\t\tcontroller.page.quickLists = [];\n\t\t\n\t\t//controller.action = action;\n\t\tcontroller.page.code = mod.summaryCode;\n\n\t\tcontroller.groupNotesForm = {\n\t\t\tassignedCMIssues: []\n\t\t};\n\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\tposition: 1\n\t\t};\n\n\t\tcontroller.working = false;\n\n\n\t\t//set hidden which can can move out of hidden to $scope values\n\t\tvar now = new Date();\n\t\tcontroller.groupNotesForm.annotation_attrib = \"anno\" + now.getTime();\n\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_eChart\", \"u\", $stateParams.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tdiseaseRegistryService.getIssueQuickLists().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.page.quickLists = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.addDxItem = function addDxItem(item)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.code === item.code && controller.groupNotesForm.assignedCMIssues[x].issue.type === item.codingSystem)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiseaseRegistryService.findDxIssue(item.code, item.codingSystem).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: results.id,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.isWorking = function isWorking()\n\t\t{\n\t\t\treturn controller.working;\n\t\t};\n\n\t\tdisplayIssueId = function displayIssueId(issueCode)\n\t\t{\n\t\t\tnoteService.getIssueId(issueCode).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.issueId = results.id;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tdisplayIssueId(controller.page.code);\n\n\t\tdisplayGroupNote = function displayGroupNote(item, itemId)\n\t\t{\n\t\t\tif (controller.page.items[itemId].noteId != null)\n\t\t\t{\n\t\t\t\tnoteService.getIssueNote(controller.page.items[itemId].noteId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\t//controller.master = angular.copy( \"iNote----\" +  JSON.stringify(iNote) );\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = results.encounterNote;\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.editorNames = mod.editorNames; // Get editor names. TODO: Add editor names to the object on the back end\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = results.groupNoteExt;\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\n\t\t\t\t\t\tif (results.assignedCMIssues instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = results.assignedCMIssues;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (results.assignedCMIssues != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(results.assignedCMIssues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t\tcontroller.setAvailablePositions();\n\n\t\t\t\t\t\t// controller.removeEditingNoteFlag();\n\n\t\t\t\t\t\tif (controller.groupNotesForm.encounterNote.position < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote.position = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (controller.page.items[itemId].type === \"dx_reg\")\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.assignedCMIssues = [];\n\t\t\t\tvar itemExtra = controller.page.items[itemId].extra;\n\t\t\t\tdiseaseRegistryService.findDxIssue(itemExtra.code, itemExtra.codingSystem).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\t\tissue_id: results.issueId,\n\t\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconsole.log(\"find like issue \", cmIssue, results);\n\t\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.groupNoteExt = {};\n\t\t\t\t\t\tcontroller.groupNotesForm.encounterNote = {\n\t\t\t\t\t\t\tposition: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = itemId;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//action is NULL when new , action is some id when not\n\t\tif (action != null)\n\t\t{\n\t\t\tdisplayGroupNote(controller.page.items, action);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//new entry\n\t\t}\n\n\t\tcontroller.setAvailablePositions = function setAvailablePositions()\n\t\t{\n\t\t\tcontroller.availablePositions = [];\n\t\t\tif (controller.page.items == null || controller.page.items.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.availablePositions.push(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tfor (x = 0; x < controller.page.items.length; x++)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t\tif (action == null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePositions.push(x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcontroller.setAvailablePositions();\n\n\t\tcontroller.changeNote = function changeNote(item, itemId)\n\t\t{\n\t\t\treturn displayGroupNote(item, itemId);\n\t\t};\n\n\t\tcontroller.saveGroupNotes = function saveGroupNotes()\n\t\t{\n\t\t\tif(controller.isWorking())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.working = true;\n\n\t\t\tif (controller.groupNotesForm.encounterNote.noteId == null)\n\t\t\t{\n\t\t\t\tcontroller.groupNotesForm.encounterNote.noteId = 0;\n\t\t\t}\n\n\t\t\tcontroller.groupNotesForm.encounterNote.cpp = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.editable = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.isSigned = true;\n\t\t\tcontroller.groupNotesForm.encounterNote.observationDate = new Date();\n\t\t\tcontroller.groupNotesForm.encounterNote.appointmentNo = $stateParams.appointmentNo; //TODO: make this dynamic so it changes on edit\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterType = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.encounterTime = \"\";\n\t\t\tcontroller.groupNotesForm.encounterNote.assignedIssues = controller.groupNotesForm.assignedCMIssues;\n\t\t\tcontroller.groupNotesForm.encounterNote.summaryCode = controller.page.code;\n\n\t\t\tnoteService.saveIssueNote($stateParams.demographicNo, controller.groupNotesForm).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(results.body);\n\t\t\t\t\t$state.transitionTo($state.current, $stateParams, {\n\t\t\t\t\t\treload: false,\n\t\t\t\t\t\tinherit: false,\n\t\t\t\t\t\tnotify: true\n\t\t\t\t\t});\n\t\t\t\t\tcontroller.working = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.working = false;\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.removeGroupNoteIssue = function removeGroupNoteIssue(i)\n\t\t{\n\t\t\tconsole.log('removing issue');\n\t\t\ti.unchecked = true;\n\t\t\tvar newList = [];\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue_id != i.issue_id)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.groupNotesForm.assignedCMIssues[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.groupNotesForm.assignedCMIssues = newList;\n\t\t\tconsole.log('NEW LIST: ', newList);\n\t\t};\n\n\t\t/*\n\t\t * handle concurrent note edit - EditingNoteFlag\n\t\t */\n\t\t// controller.doSetEditingNoteFlag = function doSetEditingNoteFlag()\n\t\t// {\n\t\t// \tnoteService.setEditingNoteFlag(editingNoteId, user.providerNo).then(\n\t\t// \t\tfunction success(results)\n\t\t// \t\t{\n\t\t// \t\t\tif (!results.success)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tif (results.message == \"Parameter error\") alert(\"Parameter Error: noteUUID[\" + editingNoteId + \"] userId[\" + user.providerNo + \"]\");\n\t\t// \t\t\t\telse alert(\"Warning! Another user is editing this note now.\");\n\t\t// \t\t\t}\n\t\t// \t\t},\n\t\t// \t\tfunction error(errors)\n\t\t// \t\t{\n\t\t// \t\t\tconsole.log(errors);\n\t\t// \t\t});\n\t\t// };\n\n\t\t// controller.setEditingNoteFlag = function setEditingNoteFlag()\n\t\t// {\n\t\t// \tif (controller.groupNotesForm.encounterNote.uuid == null) return;\n\t\t//\n\t\t// \tcontroller.removeEditingNoteFlag(); //remove any previous flag actions\n\t\t// \teditingNoteId = controller.groupNotesForm.encounterNote.uuid;\n\t\t//\n\t\t// \titvSet = $interval(controller.doSetEditingNoteFlag(), 30000); //set flag every 5 min\n\t\t// \titvCheck = $interval(function()\n\t\t// \t{\n\t\t// \t\tnoteService.checkEditNoteNew(editingNoteId, user.providerNo).then(\n\t\t// \t\t\tfunction success(results)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tif (!results.success)\n\t\t// \t\t\t\t{ //someone else wants to edit this note\n\t\t// \t\t\t\t\talert(\"Warning! Another user tries to edit this note. Your update may be replaced by later revision(s).\");\n\t\t//\n\t\t// \t\t\t\t\t//cancel 10sec check after 1st time warning when another user tries to edit this note\n\t\t// \t\t\t\t\t$interval.cancel(itvCheck);\n\t\t// \t\t\t\t\titvCheck = null;\n\t\t// \t\t\t\t}\n\t\t// \t\t\t},\n\t\t// \t\t\tfunction error(errors)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tconsole.log(errors);\n\t\t// \t\t\t});\n\t\t// \t}, 10000); //check for new edit every 10 sec\n\t\t// };\n\n\t\t// controller.removeEditingNoteFlag = function removeEditingNoteFlag()\n\t\t// {\n\t\t// \tif (editingNoteId != null)\n\t\t// \t{\n\t\t// \t\tnoteService.removeEditingNoteFlag(editingNoteId, user.providerNo);\n\t\t// \t\t$interval.cancel(itvSet);\n\t\t// \t\t$interval.cancel(itvCheck);\n\t\t// \t\titvSet = null;\n\t\t// \t\titvCheck = null;\n\t\t// \t\teditingNoteId = null;\n\t\t// \t}\n\t\t// };\n\n\n\t\tcontroller.removeIssue = function removeIssue(i)\n\t\t{\n\t\t\ti.unchecked = true;\n\t\t};\n\t\tcontroller.restoreIssue = function restoreIssue(i)\n\t\t{\n\t\t\ti.unchecked = false;\n\t\t};\n\n\t\tcontroller.archiveGroupNotes = function archiveGroupNotes()\n\t\t{\n\t\t\tif(controller.isWorking())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//controller.master = angular.copy(controller.groupNotesForm);\n\t\t\tcontroller.groupNotesForm.encounterNote.archived = true;\n\t\t\tcontroller.saveGroupNotes();\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t//temp load into pop-up\n\t\tcontroller.openRevisionHistory = function openRevisionHistory(encounterNote)\n\t\t{\n\t\t\tconsole.log(controller.groupNotesForm);\n\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\twin = \"win\" + rnd;\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + encounterNote.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t\tcontroller.searchIssues = function searchIssues(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\t'term': term\n\t\t\t};\n\t\t\treturn noteService.searchIssues(search, 0, 100).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.content.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push({\n\t\t\t\t\t\t\tissueId: results.content[x].id,\n\t\t\t\t\t\t\tcode: results.content[x].description + '(' + results.content[x].code + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (results.total > results.content.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t//warn user there's more results somehow?\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.assignIssue = function assignIssue(item, model, label)\n\t\t{\n\t\t\tfor (var x = 0; x < controller.groupNotesForm.assignedCMIssues.length; x++)\n\t\t\t{\n\t\t\t\tif (controller.groupNotesForm.assignedCMIssues[x].issue.id == model)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnoteService.getIssue(model).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar cmIssue = {\n\t\t\t\t\t\tacute: false,\n\t\t\t\t\t\tcertain: false,\n\t\t\t\t\t\tissue: results,\n\t\t\t\t\t\tissue_id: item.issueId,\n\t\t\t\t\t\tmajor: false,\n\t\t\t\t\t\tresolved: false,\n\t\t\t\t\t\tunsaved: true\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.groupNotesForm.assignedCMIssues.push(cmIssue);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isSelected = function isSelected(item)\n\t\t{\n\t\t\tif (item.id == action)\n\t\t\t{\n\t\t\t\treturn \"group-note-selected\";\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addToDxRegistry = function addToDxRegistry(issue)\n\t\t{\n\t\t\tdiseaseRegistryService.addToDxRegistry($stateParams.demographicNo, issue).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(results);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t}\n]);","angular.module('Record.Summary').controller('Record.Summary.SaveWarningController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\t'saveSignNote',\n\t'cancelNoteEdit',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t\tsaveSignNote,\n\t\tcancelNoteEdit)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// Cancel warning and maintain note changes\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\t// Save changes to the note\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (angular.isFunction(saveSignNote))\n\t\t\t{\n\t\t\t\tsaveSignNote();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\n\t\t// Clear changes to the note\n\t\tcontroller.clearChanges = function clearChanges()\n\t\t{\n\t\t\tif (angular.isFunction(cancelNoteEdit))\n\t\t\t{\n\t\t\t\tcancelNoteEdit();\n\t\t\t}\n\t\t\t$uibModalInstance.close(true);\n\t\t};\n\t}\n]);","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Record.Summary').component('summaryModule', {\n\ttemplateUrl: \"src/record/summary/summaryModuleTemplate.jsp\",\n\tbindings: {\n\t\tmodule: '<',\n\t\titemDisplayCount: '<', // how many list items to display before requiring expansion\n\t\tmaxItemNameLength: '<',\n\t\thideDate: \"<?\",\n\t\tonclickItem: '&', //callback function\n\t\tonclickAdd: '&', //callback function\n\t\tonclickTitle: '&?', //callback function, called when user clicks the title\n\t\tclickableTitle: '<', //true means title is clickable\n\n\t\tenableFilter: '<',\n\t\tenableAddButton: '<',\n\t},\n\tcontroller: [function ()\n\t{\n\t\tvar ctrl = this;\n\n\t\tctrl.displayDateFormat = Juno.Common.Util.DisplaySettings.dateFormat;\n\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\t// initialize internal variables\n\t\t\tctrl.itemFilter = null;\n\t\t\tctrl.showAllItems = false;\n\n\t\t\t// set default binding values\n\t\t\tctrl.itemDisplayCount = ctrl.itemDisplayCount || 5;\n\t\t\tctrl.enableFilter = ctrl.enableFilter || false;\n\t\t\tctrl.enableAddButton = ctrl.enableAddButton || false;\n\t\t\tctrl.clickableTitle = ctrl.clickableTitle || false;\n\t\t\tctrl.maxItemNameLength = ctrl.maxItemNameLength || 34;\n\t\t\tctrl.onclickItem = ctrl.onclickItem || null;\n\t\t\tctrl.onclickAdd = ctrl.onclickAdd || null;\n\t\t\tctrl.onclickTitle = ctrl.onclickTitle || null;\n\t\t\tctrl.hideDate = ctrl.hideDate || false;\n\t\t};\n\n\t\tctrl.$onChanges = function(bindingHash)\n\t\t{\n\t\t\t// bindingsHash only has data for changed bindings, so check for object existance\n\t\t\tif(Juno.Common.Util.exists(bindingHash.itemDisplayCount))\n\t\t\t{\n\t\t\t\tctrl.itemDisplayCount = bindingHash.itemDisplayCount.currentValue;\n\t\t\t}\n\t\t\tif(Juno.Common.Util.exists(bindingHash.module))\n\t\t\t{\n\t\t\t\tctrl.module = bindingHash.module.currentValue;\n\t\t\t}\n\t\t\tif(Juno.Common.Util.exists(bindingHash.enableAddButton))\n\t\t\t{\n\t\t\t\tctrl.enableAddButton = bindingHash.enableAddButton.currentValue;\n\t\t\t}\n\t\t\tif(Juno.Common.Util.exists(bindingHash.enableFilter))\n\t\t\t{\n\t\t\t\tctrl.enableFilter = bindingHash.enableFilter.currentValue;\n\t\t\t}\n\t\t};\n\n\t\tctrl.itemCallback = function itemCallback(item)\n\t\t{\n\t\t\tctrl.onclickItem({\n\t\t\t\t'module': ctrl.module,\n\t\t\t\t'item': item,\n\t\t\t\tsuccessCallback: function (newItem)\n\t\t\t\t{\n\t\t\t\t\t//TODO could update to the item list here instead of refresh in parent controller\n\t\t\t\t},\n\t\t\t\tdismissCallback: function (reason)\n\t\t\t\t{\n\t\t\t\t\t//do nothing\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tctrl.addBtnCallback = function addBtnCallback()\n\t\t{\n\t\t\tctrl.onclickAdd({\n\t\t\t\t'module': ctrl.module,\n\t\t\t\tsuccessCallback: function (newItem)\n\t\t\t\t{\n\t\t\t\t\t//TODO could add to the item list here instead of refresh in parent controller\n\t\t\t\t},\n\t\t\t\tdismissCallback: function (reason)\n\t\t\t\t{\n\t\t\t\t\t//do nothing\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tctrl.clickTitleCallback = function ()\n\t\t{\n\t\t\tif (ctrl.onclickTitle !== null)\n\t\t\t{\n\t\t\t\tctrl.onclickTitle({'module': ctrl.module});\n\t\t\t}\n\t\t};\n\n\t\tctrl.toggleShowAllItems = function toggleShowAllItems()\n\t\t{\n\t\t\tctrl.showAllItems = !ctrl.showAllItems;\n\t\t}\n\t}]\n});","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Record.Summary').component('encounterNote', {\n\ttemplateUrl: \"src/record/summary/encounterNoteTemplate.jsp\",\n\tbindings: {\n\t\tnote: '<?',\n\t\tonEditCpp: '&?',\n\t\tonEditNote: '&?',\n\t\tonToggleSelect: '&?',\n\n\t\tminimized: '<?',\n\t\tselectedForPrint: '<?',\n\t},\n\tcontroller: [\n\t\t'$scope',\n\t\t'$state',\n\t\t'$stateParams',\n\t\t'formService',\n\t\tfunction ($scope,\n\t\t          $state,\n\t\t          $stateParams,\n\t\t\t\t  formService)\n\t{\n\t\tvar ctrl = this;\n\n\t\tctrl.displayDateFormat = Object.freeze(Juno.Common.Util.DisplaySettings.dateFormat);\n\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\t// initialize internal variables\n\t\t\tctrl.inOpenEdit = false;\n\n\t\t\t// set default binding values\n\t\t\tctrl.note =  ctrl.note || {};\n\t\t\tctrl.onEditCpp =  ctrl.onEditCpp || null;\n\t\t\tctrl.onEditNote =  ctrl.onEditNote || null;\n\t\t\tctrl.onToggleSelect =  ctrl.onToggleSelect || null;\n\n\t\t\tctrl.minimized = ctrl.minimized || false;\n\t\t\tctrl.selectedForPrint = ctrl.selectedForPrint || false;\n\t\t};\n\n\t\tctrl.$onChanges = function(bindingHash)\n\t\t{\n\t\t\t// bindingsHash only has data for changed bindings, so check for object existance\n\t\t\tif(Juno.Common.Util.exists(bindingHash.note))\n\t\t\t{\n\t\t\t\tctrl.note = bindingHash.note.currentValue;\n\t\t\t}\n\t\t\tif(Juno.Common.Util.exists(bindingHash.minimized))\n\t\t\t{\n\t\t\t\tctrl.minimized = bindingHash.minimized.currentValue;\n\t\t\t}\n\t\t};\n\n\n\t\tctrl.showNoteViewButton = function showNoteViewButton()\n\t\t{\n\t\t\treturn (ctrl.note.eformData || ctrl.note.document || ctrl.note.encounterForm);\n\t\t};\n\n\t\tctrl.viewButtonClick = function viewButtonClick()\n\t\t{\n\t\t\tif(ctrl.note.eformData && ctrl.note.eformDataId)\n\t\t\t{\n\t\t\t\tformService.openEFormInstancePopup($stateParams.demographicNo, ctrl.note.eformDataId).then(function () {\n\t\t\t\t\t$scope.$emit('summary_page_refresh', true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if(ctrl.note.document && ctrl.note.documentId)\n\t\t\t{\n\t\t\t\tctrl.viewDocument(ctrl.note.documentId);\n\t\t\t}\n\t\t\tif (ctrl.note.encounterForm)\n\t\t\t{\n\t\t\t\tformService.openFormInstancePopup(ctrl.note.note, $stateParams.demographicNo, null, ctrl.note.encounterFormId).then(function () {\n\t\t\t\t\t$scope.$emit('summary_page_refresh', true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\tctrl.showNoteEditButton = function showNoteEditButton()\n\t\t{\n\t\t\treturn ctrl.note.editable && ((ctrl.isRegularNote()) || (ctrl.note.cpp && !ctrl.note.archived && !ctrl.note.ticklerNote));\n\t\t};\n\n\t\tctrl.editButtonClick = function editButtonClick()\n\t\t{\n\t\t\tif(ctrl.isRegularNote())\n\t\t\t{\n\t\t\t\t// edit note\n\t\t\t\tif(angular.isFunction(ctrl.onEditNote))\n\t\t\t\t{\n\t\t\t\t\tctrl.inOpenEdit = true;\n\t\t\t\t\tctrl.onEditNote({\n\t\t\t\t\t\tnote: angular.copy(ctrl.note),\n\t\t\t\t\t\tsuccessCallback: function successCallback(updatedNote)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.inOpenEdit = false;\n\t\t\t\t\t\t\tconsole.info('callback success', updatedNote);\n\t\t\t\t\t\t\t// clear the existing properties and replace with the updated ones\n\t\t\t\t\t\t\tangular.copy(updatedNote, ctrl.note);\n\t\t\t\t\t\t\tctrl.note.revision = Number(ctrl.note.revision) + 1;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdismissCallback: function dismissCallback(reason)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.inOpenEdit = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (ctrl.note.cpp)\n\t\t\t{\n\t\t\t\t// edit group note\n\t\t\t\tif(angular.isFunction(ctrl.onEditCpp))\n\t\t\t\t{\n\t\t\t\t\tctrl.inOpenEdit = true;\n\t\t\t\t\tctrl.onEditCpp({\n\t\t\t\t\t\tnote: angular.copy(ctrl.note),\n\t\t\t\t\t\tsuccessCallback: function successCallback(updatedNote)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.inOpenEdit = false;\n\t\t\t\t\t\t\tconsole.info('callback success', updatedNote);\n\t\t\t\t\t\t\t// clear the existing properties and replace with the updated ones\n\t\t\t\t\t\t\tangular.copy(updatedNote, ctrl.note);\n\t\t\t\t\t\t\tctrl.note.revision = Number(ctrl.note.revision) + 1;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdismissCallback: function dismissCallback(reason)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.inOpenEdit = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// -----------------------------------------------------------------------------------------------------\n\n\t\tctrl.toggleMinimizeNote = function toggleMinimizeNote()\n\t\t{\n\t\t\tctrl.minimized = !ctrl.minimized;\n\t\t};\n\t\tctrl.isNoteMinimized = function isNoteMinimized()\n\t\t{\n\t\t\treturn ctrl.minimized;\n\t\t};\n\t\tctrl.isNoteExpanded = function isNoteExpanded()\n\t\t{\n\t\t\treturn !ctrl.isNoteMinimized();\n\t\t};\n\n\t\tctrl.toggleIsSelectedForPrint = function toggleIsSelectedForPrint()\n\t\t{\n\t\t\tctrl.selectedForPrint = !ctrl.selectedForPrint;\n\t\t\tif(angular.isFunction(ctrl.onToggleSelect))\n\t\t\t{\n\t\t\t\tctrl.onToggleSelect({\n\t\t\t\t\tnote: ctrl.note,\n\t\t\t\t\tselected: ctrl.selectedForPrint,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tctrl.isSelectedForPrint = function isSelectedForPrint()\n\t\t{\n\t\t\treturn ctrl.selectedForPrint;\n\t\t};\n\n\t\tctrl.getNoteHeader = function firstLine()\n\t\t{\n\t\t\treturn  ctrl.note.note.trim().split('\\n')[0]; // First line of the note text, split by newline\n\t\t};\n\n\t\tctrl.allowNoteExpansion = function allowNoteExpansion()\n\t\t{\n\t\t\treturn !(ctrl.note.cpp === true || ctrl.note.document === true || ctrl.note.eformData === true || ctrl.note.encounterForm);\n\t\t};\n\n\t\t// Returns true if the given note is an unsigned encounter note\n\t\tctrl.isUnsignedEncounterNote = function isUnsignedEncounterNote()\n\t\t{\n\t\t\treturn (!ctrl.note.isSigned && !ctrl.note.cpp && !ctrl.note.document && !ctrl.note.ticklerNote && !ctrl.note.eformData && !ctrl.note.encounterForm);\n\t\t};\n\n\t\t// Check if note regular note\n\t\tctrl.isRegularNote = function isRegularNote()\n\t\t{\n\t\t\treturn !(ctrl.note.document ||\n\t\t\t\tctrl.note.rxAnnotation ||\n\t\t\t\tctrl.note.eformData ||\n\t\t\t\tctrl.note.encounterForm ||\n\t\t\t\tctrl.note.invoice ||\n\t\t\t\tctrl.note.ticklerNote ||\n\t\t\t\tctrl.note.cpp);\n\t\t};\n\n\n\t\tctrl.openRevisionHistory = function openRevisionHistory()\n\t\t{\n\t\t\tvar win = \"revision\";\n\t\t\tvar url = \"../CaseManagementEntry.do?method=notehistory&noteId=\" + ctrl.note.noteId;\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\t\tctrl.viewDocument = function viewDocument(documentId)\n\t\t{\n\t\t\tvar win = \"revision\";\n\t\t\tvar url = \"../dms/showDocument.jsp\" +\n\t\t\t\t\"?inWindow=true\" +\n\t\t\t\t\"&segmentID=\" + documentId +\n\t\t\t\t\"&status=A\";\n\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=647, height=600\", \"\");\n\t\t};\n\n\t}]\n});\n","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nangular.module('Record.Summary').component('encounterNoteList', {\n\ttemplateUrl: \"src/record/summary/encounterNoteListTemplate.jsp\",\n\tbindings: {\n\t\tuserId: '<', // current user provider number\n\t\tselectedNoteHash: '=',\n\t\tonEditCpp: '&',\n\t\tonEditNote: '&',\n\t\tregisterFunctions: '&',\n\t},\n\tcontroller: [\n\t\t'$scope',\n\t\t'$stateParams',\n\t\t'noteService',\n\t\t'providerService',\n\t\tfunction ($scope,\n\t\t          $stateParams,\n\t\t          noteService,\n\t\t          providerService)\n\t{\n\t\tvar ctrl = this;\n\n\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\t// initialize internal variables\n\t\t\tctrl.filter = {\n\t\t\t\tonlyNotes: false,\n\t\t\t\tonlyMine: false,\n\t\t\t\ttextFilter: null,\n\t\t\t};\n\t\t\tctrl.enableFilterHeader = false; // temporarily remove the filters as they are still being developed\n\t\t\tctrl.showFilters = true;\n\n\t\t\tctrl.noteList = [];\n\t\t\tctrl.openNote = {};\n\n\n\t\t\tctrl.index = 0;\n\t\t\tctrl.busy = false;\n\t\t\tctrl.moreNotes = true;\n\n\t\t\t// set default binding values\n\t\t\tctrl.userId =  ctrl.userId || null;\n\t\t\tctrl.selectedNoteHash = ctrl.selectedNoteHash || {};\n\t\t\tctrl.onEditCpp =  ctrl.onEditCpp || null;\n\t\t\tctrl.onEditNote =  ctrl.onEditNote || null;\n\t\t\tctrl.registerFunctions = ctrl.registerFunctions || null;\n\n\t\t\tproviderService.getSettings().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.providerSettings = results;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// call this method with functions that the parent is allowed to call.\n\t\t\tif (angular.isFunction(ctrl.registerFunctions))\n\t\t\t{\n\t\t\t\tctrl.registerFunctions({\n\t\t\t\t\trefresh: ctrl.refresh\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tctrl.bubbleUpEditCppCallback = function bubbleUpEditCppCallback(note, successCallback, dismissCallback)\n\t\t{\n\t\t\tctrl.onEditCpp({\n\t\t\t\tnote: note,\n\t\t\t\tsuccessCallback: successCallback,\n\t\t\t\tdismissCallback: dismissCallback\n\t\t\t});\n\t\t};\n\t\tctrl.bubbleUpEditNoteCallback = function bubbleUpEditNoteCallback(note, successCallback, dismissCallback)\n\t\t{\n\t\t\t//This is a temporary way to hook emits into the old record controller note editing.\n\t\t\t//TODO remove this once the edit note is refactored\n\t\t\tctrl.openNote = {\n\t\t\t\tnoteId: note.noteId,\n\t\t\t\tsuccessCallback: successCallback,\n\t\t\t\tdismissCallback: dismissCallback,\n\t\t\t};\n\t\t\tctrl.onEditNote({\n\t\t\t\tnote: note,\n\t\t\t\tsuccessCallback: successCallback,\n\t\t\t\tdismissCallback: dismissCallback\n\t\t\t});\n\t\t};\n\n\t\t$scope.$on('noteSaved', function(event, updatedNote)\n\t\t{\n\t\t\tvar updateExisting = Juno.Common.Util.exists(ctrl.openNote.noteId) && Number(ctrl.openNote.noteId) > 0;\n\n\t\t\tif(updateExisting) //Edit note\n\t\t\t{\n\t\t\t\tif (angular.isFunction(ctrl.openNote.successCallback))\n\t\t\t\t{\n\t\t\t\t\tctrl.openNote.successCallback(updatedNote);\n\t\t\t\t\tctrl.openNote = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\telse // add new note\n\t\t\t{\n\t\t\t\tupdatedNote.revision = 1;\n\t\t\t\tctrl.noteList.unshift(updatedNote);\n\t\t\t}\n\t\t});\n\n\t\t$scope.$on('stopEditingNote', function()\n\t\t{\n\t\t\tif(angular.isFunction(ctrl.openNote.dismissCallback))\n\t\t\t{\n\t\t\t\tctrl.openNote.dismissCallback();\n\t\t\t\tctrl.openNote = {};\n\t\t\t}\n\t\t});\n\n\t\tctrl.onSelectionStateChange = function onSelectionStateChange(note, selected)\n\t\t{\n\t\t\tif(selected)\n\t\t\t{\n\t\t\t\tctrl.selectedNoteHash[note.noteId] = note;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdelete ctrl.selectedNoteHash[note.noteId];\n\t\t\t}\n\t\t};\n\n\t\t// -----------------------------------------------------------------------------------------------------\n\n\t\tctrl.toggleShowFilters = function toggleShowFilters()\n\t\t{\n\t\t\tctrl.showFilters = !ctrl.showFilters;\n\t\t};\n\t\tctrl.clearFilters = function clearFilters()\n\t\t{\n\t\t\tctrl.filter.onlyMine = false;\n\t\t\tctrl.filter.onlyNotes = false;\n\t\t\tctrl.filter.textFilter = null;\n\t\t};\n\n\t\tctrl.showNote = function showNote(note)\n\t\t{\n\t\t\tif (ctrl.filter.onlyNotes)\n\t\t\t{\n\t\t\t\tif (note.document || note.rxAnnotation || note.eformData || note.encounterForm || note.invoice || note.ticklerNote || note.cpp)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ctrl.filter.onlyMine)\n\t\t\t{\n\t\t\t\t// Hide note if the current user is not in the list of editors.\n\t\t\t\t// TODO: Decide later if we want to filter based on this rather than the author alone\n\t\t\t\t// if (!Juno.Common.Util.isInArray(user.formattedName, note.editorNames))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// Hide the note if the current user's provder number does not match that of the note author\n\t\t\t\tif (ctrl.userId !== note.providerNo)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!Juno.Common.Util.isBlank(ctrl.filter.textFilter) &&\n\t\t\t\t(!note.note.toLowerCase().includes(ctrl.filter.textFilter.toLowerCase())))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !note.deleted;\n\t\t};\n\n\t\tctrl.setNoteMinimized = function setNoteMinimized(note)\n\t\t{\n\t\t\tvar cmeNoteDate = ctrl.providerSettings.cmeNoteDate;\n\t\t\tvar minimizeNote = false;\n\n\t\t\t// if the note observation date is before the cutoff, minimize the note\n\t\t\tif(Juno.Common.Util.exists(cmeNoteDate) && Juno.Common.Util.isIntegerString(cmeNoteDate))\n\t\t\t{\n\t\t\t\t// the property stores a negative number, so add to get a past date\n\t\t\t\tvar cutoffDate = moment().add(cmeNoteDate, 'months');\n\t\t\t\tvar noteDate = moment(note.observationDate);\n\t\t\t\tminimizeNote = (cutoffDate.isAfter(noteDate, 'days'));\n\t\t\t}\n\t\t\treturn minimizeNote;\n\t\t};\n\n\t\t//Note display functions\n\t\tctrl.addMoreItems = function addMoreItems()\n\t\t{\n\t\t\tif (ctrl.busy) return;\n\n\t\t\tctrl.busy = true;\n\n\t\t\tnoteService.getNotesFrom($stateParams.demographicNo, ctrl.index, 20, {}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (angular.isDefined(results.notelist))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (results.notelist instanceof Array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < results.notelist.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tctrl.noteList.push(results.notelist[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.noteList.push(results.notelist);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctrl.index = ctrl.noteList.length;\n\t\t\t\t\t}\n\t\t\t\t\tif(angular.isDefined(results.moreNotes))\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.moreNotes = results.moreNotes;\n\t\t\t\t\t}\n\t\t\t\t\tctrl.busy = false;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\tctrl.error = errors;\n\t\t\t\t\tctrl.busy = false;\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tctrl.refresh = function refresh()\n\t\t{\n\t\t\tctrl.index = 0;\n\t\t\tctrl.noteList = [];\n\t\t\tctrl.moreNotes = true;\n\t\t\tctrl.addMoreItems();\n\t\t}\n\n\t}]\n});","'use strict';\n\nangular.module('Record.Forms', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nimport {FORM_CONTROLLER_STATES, FORM_CONTROLLER_FORM_TYPES, FORM_CONTROLLER_SPECIAL_GROUPS} from \"./formsConstants\";\n\nangular.module('Record.Forms').controller('Record.Forms.FormController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\t'user',\n\t'securityService',\n\t'NgTableParams',\n\t'$uibModal',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService,\n\t\tuser,\n\t\tsecurityService,\n\t\tNgTableParams,\n\t\t$uibModal)\n\t{\n\t\tvar controller = this;\n\n\t\t$scope.FORM_CONTROLLER_STATES = FORM_CONTROLLER_STATES;\n\n\t\tcontroller.demographicNo = $stateParams.demographicNo;\n\t\tcontroller.providerNo = user.providerNo;\n\t\tcontroller.appointmentNo = $stateParams.appointmentNo;\n\n\t\tcontroller.viewState = $stateParams.viewState;\n\t\tcontroller.formSearchStr = \"\";\n\n\t\tcontroller.groupSelection = FORM_CONTROLLER_SPECIAL_GROUPS.SELECT_ALL;\n\t\tcontroller.groupSelectedForms = null;\n\n\t\t// form display list\n\t\t$scope.displayFormList = [];\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_admin',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_admin.eform',\n\t\t\t\tprivilege: 'w'\n\t\t\t}]\n\t\t}).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.adminAccess = results.content[0];\n\t\t\t\tcontroller.adminEformAccess = results.content[1];\n\t\t\t\tif (results.content != null && results.content.length === 2)\n\t\t\t\t{\n\t\t\t\t\tif (controller.adminAccess || controller.adminEformAccess)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.hasAdminAccess = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert('failed to load rights');\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.error(errors);\n\t\t});\n\n\t\t// fill form list with completed forms\n\t\tcontroller.getCompletedForms = function ()\n\t\t{\n\t\t\tformService.getCompletedEncounterForms($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayFormList = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\tcontroller.ensureSubjectNotNull($scope.displayFormList);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// fill form list with all forms (so that the user can add them to the patients chart).\n\t\tcontroller.getFormsToAdd = function ()\n\t\t{\n\t\t\tformService.getAddForms($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayFormList = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\tcontroller.ensureSubjectNotNull($scope.displayFormList);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// fill form list with revisions of all completed forms\n\t\tcontroller.getFormRevisions = function ()\n\t\t{\n\t\t\tformService.getRevisionForms($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayFormList = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\tcontroller.ensureSubjectNotNull($scope.displayFormList);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// fill form list with revisions of all completed forms\n\t\tcontroller.getDeletedForms = function ()\n\t\t{\n\t\t\tformService.getDeletedForms($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayFormList = Juno.Common.Util.toArray(results.list);\n\t\t\t\t\tcontroller.ensureSubjectNotNull($scope.displayFormList);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// null subject values do no sort well. force them to empty string\n\t\tcontroller.ensureSubjectNotNull = function (formList)\n\t\t{\n\t\t\tformList.forEach(function (form)\n\t\t\t{\n\t\t\t\tif (form.subject === null)\n\t\t\t\t{\n\t\t\t\t\tform.subject = '';\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// called on mode change\n\t\tcontroller.onModeChange = function (mode)\n\t\t{\n\t\t\tcontroller.viewState = mode;\n\t\t\tswitch (mode)\n\t\t\t{\n\t\t\t\tcase FORM_CONTROLLER_STATES.ADD:\n\t\t\t\t\t$location.url(\"/record/\" + controller.demographicNo + \"/forms/add\");\n\t\t\t\t\tcontroller.getFormsToAdd();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FORM_CONTROLLER_STATES.COMPLETED:\n\t\t\t\t\t$location.url(\"/record/\" + controller.demographicNo + \"/forms/completed\");\n\t\t\t\t\tcontroller.getCompletedForms();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FORM_CONTROLLER_STATES.REVISION:\n\t\t\t\t\t$location.url(\"/record/\" + controller.demographicNo + \"/forms/revisions\");\n\t\t\t\t\tcontroller.getFormRevisions();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FORM_CONTROLLER_STATES.DELETED:\n\t\t\t\t\t$location.url(\"/record/\" + controller.demographicNo + \"/forms/deleted\");\n\t\t\t\t\tcontroller.getDeletedForms();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\t// called on group change\n\t\tcontroller.onGroupChange = function (groupId, selectedForms)\n\t\t{\n\t\t\tcontroller.groupSelection = groupId;\n\t\t\tcontroller.groupSelectedForms = selectedForms;\n\t\t};\n\n\t\t// filter forms for display\n\t\t$scope.onFilterForms = function (form, index, array)\n\t\t{\n\t\t\t// filter on group\n\t\t\tlet foundInGroup = true;\n\n\t\t\tswitch(controller.groupSelection)\n\t\t\t{\n\t\t\t\tcase FORM_CONTROLLER_SPECIAL_GROUPS.SELECT_ALL:\n\t\t\t\t\tfoundInGroup = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FORM_CONTROLLER_SPECIAL_GROUPS.SELECT_FORM:\n\t\t\t\t\tfoundInGroup = form.type === FORM_CONTROLLER_FORM_TYPES.FORM;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FORM_CONTROLLER_SPECIAL_GROUPS.SELECT_EFORM:\n\t\t\t\t\tfoundInGroup = form.type === FORM_CONTROLLER_FORM_TYPES.EFORM;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet found = controller.groupSelectedForms.find(function (selectedItem) {\n\t\t\t\t\t\treturn selectedItem.id === form.formId\n\t\t\t\t\t});\n\t\t\t\t\tfoundInGroup = (found !== undefined && found !== null);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// filter on search string\n\t\t\tlet foundInSearch = true;\n\t\t\tif (controller.formSearchStr.length > 0)\n\t\t\t{\n\t\t\t\tfoundInSearch = form.name.toUpperCase().search(\".*\" + controller.formSearchStr.toUpperCase()+\".*\") !== -1;\n\t\t\t}\n\n\t\t\treturn foundInGroup && foundInSearch;\n\t\t};\n\n\t\tcontroller.openManageForms = function ()\n\t\t{\n\t\t\twindow.open(\"../administration/?show=Forms\"\n\t\t\t\t,'popUpWindow','height=700,width=1200,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,directories=no');\n\t\t};\n\n\t\tcontroller.showEditPopup = function()\n\t\t{\n\t\t\twindow.open(\"../administration/?show=Forms&load=Groups\"\n\t\t\t\t,'popUpWindow','height=700,width=1200,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,directories=no');\n\t\t};\n\n\t\tswitch (controller.viewState)\n\t\t{\n\t\t\tcase FORM_CONTROLLER_STATES.ADD:\n\t\t\t\tcontroller.getFormsToAdd();\n\t\t\t\tbreak;\n\t\t\tcase FORM_CONTROLLER_STATES.COMPLETED:\n\t\t\t\tcontroller.getCompletedForms();\n\t\t\t\tbreak;\n\t\t\tcase FORM_CONTROLLER_STATES.REVISION:\n\t\t\t\tcontroller.getFormRevisions();\n\t\t\t\tbreak;\n\t\t\tcase FORM_CONTROLLER_STATES.DELETED:\n\t\t\t\tcontroller.getDeletedForms();\n\t\t\t\tbreak;\n\t\t}\n\t}\n]);\n","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\nimport {FORM_CONTROLLER_STATES, FORM_CONTROLLER_SORT_MODES, FORM_CONTROLLER_FORM_TYPES} from \"../../formsConstants\";\n\nangular.module('Record.Forms').component('formViewComponent', {\n    templateUrl: 'src/record/forms/components/formView/formView.jsp',\n    bindings: {\n        formList: '=',\n\n        providerNo: '<',\n        viewState: '<', //FORM_CONTROLLER_STATES\n        instancedForms: '<', // true if forms are instance types\n\n        filterForms: '&',\n        reloadForms: '&'\n\n    },\n    controller:[ 'formService', '$scope', '$stateParams', 'NgTableParams', function (formService, $scope, $stateParams, NgTableParams)\n    {\n        let ctrl = this;\n\n        $scope.FORM_CONTROLLER_FORM_TYPES = FORM_CONTROLLER_FORM_TYPES;\n        ctrl.sortMode = FORM_CONTROLLER_SORT_MODES.FORM_NAME;\n\n        ctrl.openEForm = function (form)\n        {\n            if (ctrl.instancedForms)\n            {\n                formService.openEFormInstancePopup($stateParams.demographicNo, form.id).then(function (val) {\n                    ctrl.reloadForms({});\n                });\n            }\n            else\n            {\n                formService.openEFormPopup($stateParams.demographicNo, form.formId).then(function (val) {\n                    ctrl.reloadForms({});\n                });\n            }\n        };\n\n        ctrl.openForm = function (form)\n        {\n            if (ctrl.instancedForms)\n            {\n                formService.openFormInstancePopup(form.name, $stateParams.demographicNo, $stateParams.appointmentNo, form.id).then(function (val) {\n                    ctrl.reloadForms({});\n                });\n            }\n            else\n            {\n                formService.openFormPopup(ctrl.providerNo, $stateParams.demographicNo, $stateParams.appointmentNo, form.subject).then(function (val) {\n                    ctrl.reloadForms({});\n                });\n            }\n        };\n\n        ctrl.doFilterForms = function(form, index, array)\n        {\n            return ctrl.filterForms({form:form, index:index, array:array});\n        };\n\n        ctrl.deleteForm = function (id, type)\n        {\n            let ok = confirm(\"Are you sure you want to delete this eform?\");\n            if (ok)\n            {\n                formService.deleteForm(id, type).then(\n                    function success (result) {\n                        ctrl.formList.splice(ctrl.formList.findIndex(function (form)\n                        {\n                            return form.id === id && form.type === type;\n                        }),1);\n                    },\n                    function error (result) {\n                        console.error(\"Failed to delete Form, id: \" + id);\n                    }\n                )\n            }\n        };\n\n        ctrl.restoreForm = function (id, type)\n        {\n            let ok = confirm(\"Are you sure you want to restore this eform?\");\n            if (ok)\n            {\n                formService.restoreForm(id, type).then(\n                    function success(result)\n                    {\n                        ctrl.formList.splice(ctrl.formList.findIndex(function (form)\n                        {\n                            return form.id === id && form.type === type;\n                        }),1);\n                    },\n                    function error (result)\n                    {\n                        console.error(\"Failed to restore form: \" + id);\n                    }\n                )\n            }\n        };\n\n        ctrl.$onInit = function () {\n            // configure ngTable\n            ctrl.tableParams = new NgTableParams(\n                {\n                    page: 1, // show first page\n                    count: -1, // unlimited\n                    sorting:\n                        {\n                            name: 'asc',\n                        }\n                },\n                {\n                    // called when sort order changes\n                    getData: function (params) {\n                        ctrl.sortMode = params.orderBy();\n                    }\n                });\n\n            ctrl.cols = [\n                {title: 'Form Name', field: 'name', visible: true, sortable: 'name', displayClass: 'col-md-3'},\n                {title: 'Additional Information', field: 'subject', visible: true, sortable: 'subject', displayClass: 'col-md-5'},\n                {title: 'Modified Date', field: 'date', visible: true, sortable: 'date', displayClass: 'col-md-2'}\n            ];\n\n            switch (ctrl.viewState) {\n                case FORM_CONTROLLER_STATES.COMPLETED:\n                    ctrl.cols.push({title: 'Action', field: 'delete', visible: true, displayClass: 'col-md-1'})\n                    break;\n                case FORM_CONTROLLER_STATES.REVISION:\n                    ctrl.cols.push({title: 'Creation Date', field: 'createDate', sortable: 'createDate', visible: true, displayClass: 'col-md-2'})\n                    break;\n                case FORM_CONTROLLER_STATES.DELETED:\n                    ctrl.cols.push({title: 'Action', field: 'restore', visible: true, displayClass: 'col-md-1'})\n                    break;\n\n            }\n        };\n    }]\n});","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\nimport {FORM_CONTROLLER_STATES} from \"../../formsConstants\";\n\nangular.module('Record.Forms').component('modeSelectorComponent', {\n\ttemplateUrl: 'src/record/forms/components/modeSelector/modeSelector.jsp',\n\tbindings: {\n\t\tmodeChange: '&',\n\t\tviewState: '<'\n\t},\n\tcontroller: function () {\n\t\tlet ctrl = this;\n\n\t\tctrl.FORM_CONTROLLER_STATES = FORM_CONTROLLER_STATES;\n\t\tctrl.onModeChange = function (newMode)\n\t\t{\n\t\t\tctrl.modeChange({mode: newMode});\n\t\t};\n\t}\n});","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\nimport {FORM_CONTROLLER_SPECIAL_GROUPS} from '../../formsConstants'\n\nangular.module('Record.Forms').component('groupSelectorComponent', {\n\ttemplateUrl: 'src/record/forms/components/groupSelector/groupSelector.jsp',\n\tbindings: {\n\t\tgroupChange: '&',\n\t\tgroupSelection: '<'\n\t},\n\tcontroller: ['formService', function (formService) {\n\t\tlet ctrl = this;\n\n\t\tctrl.FORM_CONTROLLER_SPECIAL_GROUPS = FORM_CONTROLLER_SPECIAL_GROUPS;\n\n\t\tctrl.onGroupChange = function (groupId, selectedItems)\n\t\t{\n\t\t\tctrl.groupChange({groupId: groupId, selectedForms: selectedItems});\n\t\t};\n\n\t\tctrl.groups = [];\n\t\tformService.getFormGroups().then(\n\t\t\tfunction success(results) {\n\t\t\t\tctrl.groups = results;\n\t\t\t},\n\t\t\tfunction error(results) {\n\t\t\t\tconsole.error(\"Failed to fetch groups\");\n\t\t\t}\n\t\t);\n\t}]\n});","'use strict';\n\nangular.module('Record.Details', ['Common', 'Common.Services', 'ui.bootstrap.popover']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nimport {INSTANCE_TYPE, SYSTEM_PROPERTIES, BILLING_TYPE} from \"../../common/services/systemPreferenceServiceConstants\";\nimport {SystemPreferenceApi} from \"../../../generated\";\n\nangular.module('Record.Details').controller('Record.Details.DetailsController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$window',\n\t'$uibModal',\n\t'$httpParamSerializer',\n\t'$sce',\n\t'demographicService',\n\t'demographicsService',\n\t'errorsService',\n\t'providersService',\n\t'patientDetailStatusService',\n\t'securityService',\n\t'staticDataService',\n\t'referralDoctorsService',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$window,\n\t\t$uibModal,\n\t\t$httpParamSerializer,\n\t\t$sce,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tmessagesFactory,\n\t\tprovidersService,\n\t\tpatientDetailStatusService,\n\t\tsecurityService,\n\t\tstaticDataService,\n\t\treferralDoctorsService,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\n\t\t// Global variables\n\t\tvar posExtras = {};\n\t\tvar hcParts = {};\n\t\tvar phoneNum = {};\n\t\tvar colorAttn = \"#ffff99\";\n\t\tvar defPhTitle = \"Check to set preferred contact number\";\n\t\tvar prefPhTitle = \"Preferred contact number\";\n\t\tvar hin0;\n\t\tvar ver0;\n\t\tvar chartNo0;\n\t\tvar cytolNum0;\n\t\tvar referralDocNo0;\n\t\tvar familyDocNo0;\n\t\tvar sin0;\n\t\tvar effDate0;\n\t\tvar hcRenewDate0;\n\t\tvar rosterDate0;\n\t\tvar rosterTerminationDate0;\n\t\tvar patientStatusDate0;\n\t\tvar dateJoined0;\n\t\tvar endDate0;\n\t\tvar onWaitingListSinceDate0;\n\t\tvar paperChartArchivedDate0;\n\n\t\tlet systemPreferenceApi = new SystemPreferenceApi($http, $httpParamSerializer,\n\t\t\t\t'../ws/rs');\n\n\t\tcontroller.eligibilityMsg = $sce.trustAsHtml(\"...\");\n\t\tcontroller.showEligibility = false;\n\t\tcontroller.properties = $scope.$parent.recordCtrl.properties;\n\t\tcontroller.displayMessages = messagesFactory.factory();\n\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo = results;\n\t\t\t\t\tcontroller.initDemographicVars();\n\t\t\t\t\tcontroller.checkAccess();\n\n\t\t\t\t\t// retrieve provider types for dropdown selection\n\t\t\t\t\t//TODO - are roles determined by security role or provider type?\n\t\t\t\t\tprovidersService.getBySecurityRole(\"doctor\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.doctors = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"nurse\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.nurses = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tprovidersService.getBySecurityRole(\"midwife\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.midwives = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// retrieve contact lists for demographic\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"personal\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContacts = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicService.getDemographicContacts(controller.page.demo.demographicNo, \"professional\").then(\n\t\t\t\t\t\tfunction success(data) {\n\t\t\t\t\t\t\tcontroller.page.demoContactPros = demoContactShow(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t//show notes\n\t\t\t\t\tif (controller.page.demo.notes != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrNotes = controller.page.demo.notes;\n\t\t\t\t\t\tif (/^<unotes>[\\s\\S]*/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(\"<unotes>\".length);\n\t\t\t\t\t\tif (/[\\s\\S]*<\\/unotes>$/.test(controller.page.demo.scrNotes)) controller.page.demo.scrNotes = controller.page.demo.scrNotes.substring(0, controller.page.demo.scrNotes.lastIndexOf(\"</unotes>\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//show referral doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar referralDoc = controller.formatDocOutput(controller.page.demo.familyDoctor);\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrReferralDoc = referralDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\t//show family doctor\n\t\t\t\t\tif (controller.page.demo.familyDoctor2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar familyDoc = controller.formatDocOutput(controller.page.demo.familyDoctor2);\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDoc.number;\n\t\t\t\t\t\tcontroller.page.demo.scrFamilyDoc = familyDoc.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.page.demo.extras != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.extras = toArray(controller.page.demo.extras);\n\t\t\t\t\t\tfor (var i = 0; i < controller.page.demo.extras.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.extras[i].key == \"demo_cell\") controller.page.demo.scrDemoCell = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"aboriginal\") controller.page.demo.scrAboriginal = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"hPhoneExt\") controller.page.demo.scrHPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"wPhoneExt\") controller.page.demo.scrWPhoneExt = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"cytolNum\") controller.page.demo.scrCytolNum = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"phoneComment\") controller.page.demo.scrPhoneComment = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived\") controller.page.demo.scrPaperChartArchived = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"paper_chart_archived_date\") controller.page.demo.scrPaperChartArchivedDate = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"usSigned\") controller.page.demo.scrUsSigned = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"privacyConsent\") controller.page.demo.scrPrivacyConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"informedConsent\") controller.page.demo.scrInformedConsent = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityQuestion1\") controller.page.demo.scrSecurityQuestion1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"securityAnswer1\") controller.page.demo.scrSecurityAnswer1 = controller.page.demo.extras[i].value;\n\t\t\t\t\t\t\telse if (controller.page.demo.extras[i].key == \"rxInteractionWarningLevel\") controller.page.demo.scrRxInteractionLevel = controller.page.demo.extras[i].value;\n\n\n\t\t\t\t\t\t\t//record array position of extras by keys - to be used on saving\n\t\t\t\t\t\t\tposExtras[controller.page.demo.extras[i].key] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//show phone numbers with preferred check\n\t\t\t\t\tcontroller.page.demo.scrCellPhone = getPhoneNum(controller.page.demo.scrDemoCell);\n\t\t\t\t\tcontroller.page.demo.scrHomePhone = getPhoneNum(controller.page.demo.phone);\n\t\t\t\t\tcontroller.page.demo.scrWorkPhone = getPhoneNum(controller.page.demo.alternativePhone);\n\n\t\t\t\t\t//show waitingListNames\n\t\t\t\t\tif (controller.page.demo.waitingListNames != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.page.demo.waitingListNames.id != null)\n\t\t\t\t\t\t{ //only 1 entry, convert to array\n\t\t\t\t\t\t\tvar tmp = {};\n\t\t\t\t\t\t\ttmp.id = controller.page.demo.waitingListNames.id;\n\t\t\t\t\t\t\ttmp.name = controller.page.demo.waitingListNames.name;\n\t\t\t\t\t\t\ttmp.groupNo = controller.page.demo.waitingListNames.groupNo;\n\t\t\t\t\t\t\ttmp.providerNo = controller.page.demo.waitingListNames.providerNo;\n\t\t\t\t\t\t\ttmp.createDate = controller.page.demo.waitingListNames.createDate;\n\t\t\t\t\t\t\ttmp.isHistory = controller.page.demo.waitingListNames.isHistory;\n\t\t\t\t\t\t\tcontroller.page.demo.waitingListNames = [tmp];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\t\t\tif (isPreferredPhone(controller.page.demo.scrDemoCell))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"C\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.phone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"H\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isPreferredPhone(controller.page.demo.alternativePhone))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.demo.scrPreferredPhone = \"W\";\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.page.dataChanged = false;\n\n\t\t\t\t\t//get static lists to be selected\n\t\t\t\t\tcontroller.page.genders = staticDataService.getGenders();\n\t\t\t\t\tcontroller.page.titles = staticDataService.getTitles();\n\t\t\t\t\tcontroller.page.provinces = staticDataService.getProvinces();\n\t\t\t\t\tcontroller.page.countries = staticDataService.getCountries();\n\t\t\t\t\tcontroller.page.engFre = staticDataService.getEngFre();\n\t\t\t\t\tcontroller.page.spokenlangs = staticDataService.getSpokenLanguages();\n\t\t\t\t\tcontroller.page.rosterTermReasons = staticDataService.getRosterTerminationReasons();\n\t\t\t\t\tcontroller.page.securityQuestions = staticDataService.getSecurityQuestions();\n\t\t\t\t\tcontroller.page.rxInteractionLevels = staticDataService.getRxInteractionLevels();\n\n\t\t\t\t\t//get patient detail status\n\t\t\t\t\tpatientDetailStatusService.getStatus($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.macPHRLoggedIn = results.macPHRLoggedIn;\n\t\t\t\t\t\t\tcontroller.page.macPHRIdsSet = results.macPHRIdsSet;\n\t\t\t\t\t\t\tcontroller.page.macPHRVerificationLevel = results.macPHRVerificationLevel;\n\n\t\t\t\t\t\t\tcontroller.page.integratorEnabled = results.integratorEnabled;\n\t\t\t\t\t\t\tcontroller.page.integratorOffline = results.integratorOffline;\n\t\t\t\t\t\t\tcontroller.page.integratorAllSynced = results.integratorAllSynced;\n\n\t\t\t\t\t\t\tcontroller.page.conformanceFeaturesEnabled = results.conformanceFeaturesEnabled;\n\t\t\t\t\t\t\tcontroller.page.workflowEnhance = results.workflowEnhance;\n\t\t\t\t\t\t\tcontroller.page.billregion = results.billregion;\n\t\t\t\t\t\t\tcontroller.page.defaultView = results.defaultView;\n\t\t\t\t\t\t\tcontroller.page.hospitalView = results.hospitalView;\n\n\t\t\t\t\t\t\tif (controller.page.integratorEnabled)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (controller.page.integratorOffline)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrator is not available at this time\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!controller.page.integratorAllSynced)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusColor = \"#ff5500\";\n\t\t\t\t\t\t\t\t\tcontroller.page.integratorStatusMsg = \"NOTE: Integrated Community is not synced\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.page.billingHistoryLabel = \"Invoice List\";\n\t\t\t\t\t\t\tif (controller.page.billregion == \"ON\") controller.page.billingHistoryLabel = \"Billing History\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//show patientStatusList & rosterStatusList values\n\t\t\t\t\tdemographicsService.getStatusList(\"roster\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FS\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FS - fee for service\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"TE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"TE - terminated\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"NR\",\n\t\t\t\t\t\t\t\t\t\"label\": \"NR - not rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.rosterStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"RO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"RO - rostered\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tdemographicsService.getStatusList(\"patient\").then(\n\t\t\t\t\t\tfunction success(data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.page.patientStatusList = toArray(data);\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"FI\",\n\t\t\t\t\t\t\t\t\t\"label\": \"FI - Fired\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"MO\",\n\t\t\t\t\t\t\t\t\t\"label\": \"MO - Moved\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"DE\",\n\t\t\t\t\t\t\t\t\t\"label\": \"DE - Deceased\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"IN\",\n\t\t\t\t\t\t\t\t\t\"label\": \"IN - Inactive\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.page.patientStatusList.unshift(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"AC\",\n\t\t\t\t\t\t\t\t\t\"label\": \"AC - Active\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tcontroller.formatDate(\"DobM\"); //done on page load\n\t\t\t\t\tcontroller.formatDate(\"DobD\"); //done on page load\n\t\t\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\t\t\tcontroller.formatLastName(); //done on page load\n\t\t\t\t\tcontroller.formatFirstName(); //done on page load\n\t\t\t\t\tcontroller.validateHCSave();\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// show eligibility check button only if instance is BC OR (ON AND billing type CLINICAID)\n\t\t\tsystemPreferenceApi.getPropertyValue(SYSTEM_PROPERTIES.INSTANCE_TYPE, INSTANCE_TYPE.BC).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result.data.body === INSTANCE_TYPE.BC)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.showEligibility = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (result.data.body === INSTANCE_TYPE.ON)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsystemPreferenceApi.getPropertyValue(SYSTEM_PROPERTIES.BILLING_TYPE, BILLING_TYPE.CLINICAID).then(\n\t\t\t\t\t\t\t\t\tfunction success(result)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (result.data.body === BILLING_TYPE.CLINICAID)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcontroller.showEligibility = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction error(result)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.error(\"Failed to fetch instance billing type with error: \" + result);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to fetch instance type with error: \" + result);\n\t\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\tcontroller.initDemographicVars = function initDemographicVars()\n\t\t{\n\t\t\tvar effDateMoment = moment(controller.page.demo.effDate);\n\t\t\tif(effDateMoment.isValid())\n\t\t\t{\n\t\t\t\tcontroller.page.demo.effDate = Juno.Common.Util.formatMomentDate(effDateMoment);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.demo.effDate = null;\n\t\t\t}\n\t\t\tvar hcRenewDateMoment = moment(controller.page.demo.hcRenewDate);\n\t\t\tif(hcRenewDateMoment.isValid())\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcRenewDate = Juno.Common.Util.formatMomentDate(hcRenewDateMoment);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hcRenewDate = null;\n\t\t\t}\n\n\t\t\tphoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\tphoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\tphoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\tphoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\tphoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tver0 = controller.page.demo.ver;\n\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\tsin0 = controller.page.demo.sin;\n\t\t\teffDate0 = controller.page.demo.effDate;\n\t\t\thcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t\trosterDate0 = controller.page.demo.rosterDate;\n\t\t\trosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t\tpatientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t\tdateJoined0 = controller.page.demo.dateJoined;\n\t\t\tendDate0 = controller.page.demo.endDate;\n\t\t\tonWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t\tpaperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\tcontroller.checkAccess = function checkAccess()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_demographic\", \"r\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.canRead = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_demographic\", \"u\", controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.cannotChange = !results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t};\n\n\t\t// Is there a shared location where this could be accessed from any controller? i.e. a utils file\n\t\tcontroller.isNaN = function(num)\n\t\t{\n\t\t\treturn isNaN(num);\n\t\t};\n\n\t\t//disable click and keypress if user only has read-access\n\t\tcontroller.checkAction = function checkAction(event)\n\t\t{\n\t\t\tif (controller.page.cannotChange)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t//----------------------//\n\t\t// on-screen operations //\n\t\t//----------------------//\n\t\t//monitor data changed\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn controller.page.demo;\n\t\t}, function(newValue, oldValue)\n\t\t{\n\t\t\tif (newValue !== oldValue && angular.isDefined(oldValue) && angular.isDefined(newValue))\n\t\t\t{\n\t\t\t\tcontroller.page.dataChanged = true;\n\t\t\t}\n\n\t\t}, true);\n\n\t\t$window.onbeforeunload = function ()\n\t\t{\n\t\t\t/* Have to check if we are on the details page since the controller is\n\t\t\t\tnot necessarily destroyed upon leaving the page\n\t\t\t*/\n\t\t\tif (controller.page.dataChanged === true && $state.current.name === 'record.details')\n\t\t\t{\n\t\t\t\treturn 'You have unsaved patient data. Are you sure you want to leave?';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', function() {\n\t\t\tdelete $window.onbeforeunload;\n\t\t});\n\n\t\t// Warn user about unsaved data before a state change\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.page.dataChanged === true)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You have unsaved patient data. Are you sure you want to leave?\");\n\t\t\t\tif (!discard)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// TODO: Celebrate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert('Error loading demographic: ', errors) // TODO: Display actual error message\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//format lastname, firstname\n\t\tcontroller.formatLastName = function formatLastName()\n\t\t{\n\t\t\tcontroller.page.demo.lastName = controller.page.demo.lastName.toUpperCase();\n\t\t};\n\t\tcontroller.formatFirstName = function formatFirstName()\n\t\t{\n\t\t\tcontroller.page.demo.firstName = controller.page.demo.firstName.toUpperCase();\n\t\t};\n\n\t\tcontroller.openSwipecardModal = function openSwipecardModal()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/record/details/swipecard.jsp',\n\t\t\t\t\tcontroller: 'Record.Details.SwipecardController as swipecardController',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\twindowClass: 'juno-modal',\n\t\t\t\t});\n\t\t\tmodalInstance.result.then(\n\t\t\t\t// the object passed back on closing\n\t\t\t\tfunction success(cardInfo)\n\t\t\t\t{\n\t\t\t\t\t// console.info(cardInfo);\n\t\t\t\t\tcontroller.fillDataFromSwipecard(cardInfo.data);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t// do nothing on dismissal\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.checkEligibility = function ()\n\t\t{\n\t\t\tpatientDetailStatusService.getEligibilityInfo(controller.page.demo.demographicNo).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.eligibilityMsg = $sce.trustAsHtml(result);\n\t\t\t\t},\n\t\t\t\tfunction error(result)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"Failed to check eligibility with error: \" + result);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.fillDataFromSwipecard = function fillDataFromSwipecard(cardData)\n\t\t{\n\t\t\tcontroller.displayMessages.clear();\n\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.province))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.province = cardData.province;\n\t\t\t\tcontroller.page.demo.hcType = cardData.province;\n\t\t\t\tcontroller.displayMessages.add_field_warning('province', \"Province Changed\");\n\t\t\t\tcontroller.displayMessages.add_field_warning('hcType', \"Health Card Type Changed\");\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.lastName))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.lastName = cardData.lastName;\n\t\t\t\tcontroller.displayMessages.add_field_warning('lastName', \"Last Name Changed\");\n\t\t\t\tcontroller.formatLastName();\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.firstName))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.firstName = cardData.firstName;\n\t\t\t\tcontroller.displayMessages.add_field_warning('firstName', \"First Name Changed\");\n\t\t\t\tcontroller.formatFirstName();\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.hin))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.hin = cardData.hin;\n\t\t\t\tcontroller.displayMessages.add_field_warning('hin', \"HIN Changed\");\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.versionCode))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.ver = cardData.versionCode;\n\t\t\t\tcontroller.displayMessages.add_field_warning('ver', \"Version Code Changed\");\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.sex))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sex = cardData.sex;\n\t\t\t\tcontroller.displayMessages.add_field_warning('sex', \"Sex Changed\");\n\t\t\t}\n\t\t\tif (Oscar.HealthCardParser.validateDate(cardData.dobYear, cardData.dobMonth, cardData.dobDay))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = cardData.dobYear;\n\t\t\t\tcontroller.page.demo.dobMonth = cardData.dobMonth;\n\t\t\t\tcontroller.page.demo.dobDay = cardData.dobDay;\n\t\t\t\tcontroller.displayMessages.add_field_warning('dob', \"Date of Birth Changed\");\n\t\t\t}\n\t\t\tif (Oscar.HealthCardParser.validateDate(cardData.effYear, cardData.effMonth, cardData.effDay))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.effDate = Juno.Common.Util.formatMomentDate(\n\t\t\t\t\tJuno.Common.Util.getDateMomentFromComponents(cardData.effYear, cardData.effMonth, cardData.effDay));\n\t\t\t\tcontroller.displayMessages.add_field_warning('effDate', \"Effective Date Changed\");\n\t\t\t}\n\t\t\tif (Oscar.HealthCardParser.validateDate(cardData.endYear, cardData.endMonth, cardData.endDay))\n\t\t\t{\n\t\t\t\tvar expireDate = Juno.Common.Util.getDateMomentFromComponents(cardData.endYear, cardData.endMonth, cardData.endDay);\n\n\t\t\t\tcontroller.page.demo.hcRenewDate = Juno.Common.Util.formatMomentDate(expireDate);\n\t\t\t\tcontroller.displayMessages.add_field_warning('endDate', \"Hin End Date Changed\");\n\n\t\t\t\tvar now = moment();\n\t\t\t\tif(now.isAfter(expireDate))\n\t\t\t\t{\n\t\t\t\t\tcontroller.displayMessages.add_field_warning('endDate', \"Health Card Expired\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.address))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.address = cardData.address;\n\t\t\t\tcontroller.displayMessages.add_field_warning('address', \"Address Changed\");\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.city))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.city = cardData.city;\n\t\t\t\tcontroller.displayMessages.add_field_warning('city', \"City Changed\");\n\t\t\t}\n\t\t\tif (!Juno.Common.Util.isBlank(cardData.postal))\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = cardData.postal;\n\t\t\t\tcontroller.displayMessages.add_field_warning('postal', \"Postal Code Changed\");\n\t\t\t}\n\t\t};\n\n\t\t//HCValidation\n\t\tcontroller.validateHC = function validateHC()\n\t\t{\n\t\t\tcontroller.displayMessages.remove_field_error('hin');\n\n\t\t\tif (controller.page.demo.hcType != \"ON\" || controller.page.demo.hin == null || controller.page.demo.hin == \"\") return;\n\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = \"Done Health Card Action\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.page.HCValidation = results.valid ? \"valid\" : \"invalid\";\n\t\t\t\t\t\tcontroller.page.swipecardMsg = results.responseDescription + \" (\" + results.responseCode + \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!results.valid)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.displayMessages.add_field_error('hin', controller.page.swipecardMsg);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//manage hin/hinVer entries\n\t\tcontroller.checkHin = function checkHin()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\" && controller.page.demo.hin != null && controller.page.demo.hin != \"\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.hin.length > 10) controller.page.demo.hin = hin0;\n\t\t\t\tif (!isNumber(controller.page.demo.hin)) controller.page.demo.hin = hin0;\n\t\t\t}\n\t\t\thin0 = controller.page.demo.hin;\n\t\t\tcontroller.page.HCValidation = null;\n\t\t};\n\t\tcontroller.checkHinVer = function checkHinVer()\n\t\t{\n\t\t\tif (controller.page.demo.hcType == \"ON\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.ver.length > 2) controller.page.demo.ver = ver0;\n\t\t\t\tif (!(/^[a-zA-Z()]*$/.test(controller.page.demo.ver))) controller.page.demo.ver = ver0;\n\t\t\t\tcontroller.page.demo.ver = controller.page.demo.ver.toUpperCase();\n\t\t\t}\n\t\t\tver0 = controller.page.demo.ver;\n\t\t};\n\n\t\t//manage date entries\n\t\tcontroller.checkDate = function checkDate(id)\n\t\t{\n\t\t\tif (id == \"DobY\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobYear = checkYear(controller.page.demo.dobYear);\n\t\t\t}\n\t\t\telse if (id == \"DobM\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = checkMonth(controller.page.demo.dobMonth);\n\t\t\t}\n\t\t\telse if (id == \"DobD\")\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = checkDay(controller.page.demo.dobDay, controller.page.demo.dobMonth, controller.page.demo.dobYear);\n\t\t\t}\n\t\t\tconsole.log('MONTH: ', controller.page.demo.dobMonth);\n\t\t\tcontroller.page.demo.age = Juno.Common.Util.calcAge(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t};\n\n\t\tcontroller.formatDate = function formatDate(id)\n\t\t{\n\t\t\t// controller.calculateAge();\n\n\t\t\tif (id == \"DobM\" && controller.page.demo.dobMonth != null && String(controller.page.demo.dobMonth).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobMonth = \"0\" + controller.page.demo.dobMonth;\n\t\t\t}\n\t\t\telse if (id == \"DobD\" && controller.page.demo.dobDay != null && String(controller.page.demo.dobDay).length == 1)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.dobDay = \"0\" + controller.page.demo.dobDay;\n\t\t\t}\n\t\t};\n\n\t\t//check Patient Status if endDate is entered\n\t\tcontroller.checkPatientStatus = function checkPatientStatus()\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tif (controller.page.demo.patientStatus == \"AC\")\n\t\t\t{\n\t\t\t\tif (controller.page.demo.endDate != null && controller.page.demo.endDate != \"\")\n\t\t\t\t{\n\t\t\t\t\tif (dateValid(controller.page.demo.endDate))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar datePart = controller.page.demo.endDate.split(\"-\");\n\t\t\t\t\t\tvar endDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\t\t\t\t\t\tif (now > endDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"Patient Status cannot be Active after End Date.\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalComplete = function isPostalComplete()\n\t\t{\n\t\t\tvar province = controller.page.demo.address.province;\n\t\t\tvar postal = controller.page.demo.address.postal;\n\t\t\t// If Canadian province is selected, proceed with validation\n\t\t\tif (postal !== null && province !== null && province !== \"OT\" && province.indexOf(\"US\") !== 0)\n\t\t\t{\n\t\t\t\tif (controller.isPostalValid())\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.resetEditState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.isPostalValid = function isPostalValid()\n\t\t{\n\t\t\tvar postal = controller.page.demo.address.postal.replace(/\\s/g, \"\"); // Trim whitespace\n\n\t\t\t// If postal code is an empty string, set it to null and continue\n\t\t\tif(postal.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.address.postal = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar regex = new RegExp(/^[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$/); // Match to Canadian postal code standard (minus the space)\n\t\t\tif (regex.test(postal))\n\t\t\t{\n\t\t\t\t// Format postal code to Canadian standard\n\t\t\t\tcontroller.page.demo.address.postal = postal.substring(0, 3) + \" \" + postal.substring(3);\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\talert(\"Invalid/Incomplete Postal Code\"); // TODO: Display proper error message\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t//check email\n\t\tcontroller.checkEmail = function checkEmail()\n\t\t{\n\t\t\tif (controller.page.demo.email == null || controller.page.demo.email == \"\") return true;\n\n\t\t\tvar regex = /^[^@]+@[^@]+$/;\n\t\t\tif (regex.test(controller.page.demo.email))\n\t\t\t{\n\t\t\t\tvar email = controller.page.demo.email.split(\"@\");\n\n\t\t\t\tregex = /^[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+(\\.[!#%&'=`~\\{}\\-\\$\\*\\+\\/\\?\\^\\|\\w]+)*$/;\n\t\t\t\tif (regex.test(email[0]))\n\t\t\t\t{ //test email local address part\n\n\t\t\t\t\tregex = /^[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*(\\.[^\\W_]+(([^\\W_]|-)+[^\\W_]+)*)*\\.[^\\W_]{2,3}$/;\n\t\t\t\t\tif (regex.test(email[1])) return true; //test email address domain part\n\t\t\t\t}\n\t\t\t}\n\t\t\talert(\"Invalid email address\");\n\t\t\treturn false;\n\t\t};\n\n\t\t//check Chart No (length)\n\t\tcontroller.checkChartNo = function checkChartNo()\n\t\t{\n\t\t\tif (controller.page.demo.chartNo == null || controller.page.demo.chartNo == \"\")\n\t\t\t{\n\t\t\t\tchartNo0 = controller.page.demo.chartNo;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (controller.page.demo.chartNo.length > 10) controller.page.demo.chartNo = chartNo0;\n\t\t\telse chartNo0 = controller.page.demo.chartNo;\n\t\t};\n\n\t\t//check Cytology Number\n\t\tcontroller.checkCytoNum = function checkCytoNum()\n\t\t{\n\t\t\tif (controller.page.demo.scrCytolNum == null || controller.page.demo.scrCytolNum == \"\")\n\t\t\t{\n\t\t\t\tcytolNum0 = controller.page.demo.scrCytolNum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isNumber(controller.page.demo.scrCytolNum)) controller.page.demo.scrCytolNum = cytolNum0;\n\t\t\telse cytolNum0 = controller.page.demo.scrCytolNum;\n\t\t};\n\n\t\t//check Referral Doctor No\n\t\tcontroller.checkReferralDocNo = function checkReferralDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrReferralDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\treferralDocNo0 = controller.page.demo.scrReferralDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrReferralDocNo = referralDocNo0;\n\t\t};\n\n\t\t//check Family Doctor No\n\t\tcontroller.checkFamilyDocNo = function checkFamilyDocNo()\n\t\t{\n\t\t\tvar isValid = controller.validateDocNo(controller.page.demo.scrFamilyDocNo, true);\n\t\t\tif (isValid)\n\t\t\t\tfamilyDocNo0 = controller.page.demo.scrFamilyDocNo;\n\t\t\telse\n\t\t\t\tcontroller.page.demo.scrFamilyDocNo = familyDocNo0;\n\t\t};\n\n\t\tcontroller.validateDocNo = function validateDocNo(docNo, quiet)\n\t\t{\n\t\t\tif (docNo == null || docNo === \"\" || (isNumber(docNo) && docNo.length < 10))\n\t\t\t\treturn true;\n\n\t\t\tif (!quiet)\n\t\t\t\talert(\"Invalid Doctor Number\");\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//check SIN\n\t\tcontroller.checkSin = function checkSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\")\n\t\t\t{\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (!isNumber(sin) || sin.length > 9)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.sin = sin0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (sin.length > 6)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3, 6) + \" \" + sin.substring(6);\n\t\t\t\t}\n\t\t\t\telse if (sin.length > 3)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.demo.sin = sin.substring(0, 3) + \" \" + sin.substring(3);\n\t\t\t\t}\n\t\t\t\tsin0 = controller.page.demo.sin;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.validateSin = function validateSin()\n\t\t{\n\t\t\tif (controller.page.demo.sin == null || controller.page.demo.sin == \"\") return true;\n\n\t\t\tvar sin = controller.page.demo.sin.replace(/\\s/g, \"\");\n\t\t\tif (isNumber(sin) && sin.length == 9)\n\t\t\t{\n\t\t\t\tvar sinNumber = 0;\n\t\t\t\tfor (var i = 0; i < sin.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar n = Number(sin.charAt(i)) * (i % 2 + 1);\n\t\t\t\t\tsinNumber += n % 10 + Math.floor(n / 10);\n\t\t\t\t}\n\t\t\t\tif (sinNumber % 10 == 0) return true;\n\t\t\t}\n\t\t\talert(\"Invalid SIN #\");\n\t\t\treturn false;\n\t\t};\n\n\t\t//prevent manual input dates\n\t\tcontroller.preventManualEffDate = function preventManualEffDate()\n\t\t{\n\t\t\tif (controller.page.demo.effDate == null) controller.page.demo.effDate = effDate0;\n\t\t\telse effDate0 = controller.page.demo.effDate;\n\t\t};\n\t\tcontroller.preventManualHcRenewDate = function preventManualHcRenewDate()\n\t\t{\n\t\t\tif (controller.page.demo.hcRenewDate == null) controller.page.demo.hcRenewDate = hcRenewDate0;\n\t\t\telse hcRenewDate0 = controller.page.demo.hcRenewDate;\n\t\t};\n\t\tcontroller.preventManualRosterDate = function preventManualRosterDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterDate == null) controller.page.demo.rosterDate = rosterDate0;\n\t\t\telse rosterDate0 = controller.page.demo.rosterDate;\n\t\t};\n\t\tcontroller.preventManualRosterTerminationDate = function preventManualRosterTerminationDate()\n\t\t{\n\t\t\tif (controller.page.demo.rosterTerminationDate == null) controller.page.demo.rosterTerminationDate = rosterTerminationDate0;\n\t\t\telse rosterTerminationDate0 = controller.page.demo.rosterTerminationDate;\n\t\t};\n\t\tcontroller.preventManualPatientStatusDate = function preventManualPatientStatusDate()\n\t\t{\n\t\t\tif (controller.page.demo.patientStatusDate == null) controller.page.demo.patientStatusDate = patientStatusDate0;\n\t\t\telse patientStatusDate0 = controller.page.demo.patientStatusDate;\n\t\t};\n\t\tcontroller.preventManualDateJoined = function preventManualDateJoined()\n\t\t{\n\t\t\tif (controller.page.demo.dateJoined == null) controller.page.demo.dateJoined = dateJoined0;\n\t\t\telse dateJoined0 = controller.page.demo.dateJoined;\n\t\t};\n\t\tcontroller.preventManualEndDate = function preventManualEndDate()\n\t\t{\n\t\t\tif (controller.page.demo.endDate == null) controller.page.demo.endDate = endDate0;\n\t\t\telse endDate0 = controller.page.demo.endDate;\n\t\t};\n\t\tcontroller.preventManualOnWaitingListSinceDate = function preventManualOnWaitingListSinceDate()\n\t\t{\n\t\t\tif (controller.page.demo.onWaitingListSinceDate == null) controller.page.demo.onWaitingListSinceDate = onWaitingListSinceDate0;\n\t\t\telse onWaitingListSinceDate0 = controller.page.demo.onWaitingListSinceDate;\n\t\t};\n\t\tcontroller.preventManualPaperChartArchivedDate = function preventManualPaperChartArchivedDate()\n\t\t{\n\t\t\tif (controller.page.demo.scrPaperChartArchivedDate == null) controller.page.demo.scrPaperChartArchivedDate = paperChartArchivedDate0;\n\t\t\telse paperChartArchivedDate0 = controller.page.demo.scrPaperChartArchivedDate;\n\t\t};\n\n\t\t//show/hide items\n\t\t// TODO: FIGURE OUT BETTER WAY TO SYNCHRONIZE THIS WITH DEMOGRAPHIC LOADING\n\t\tcontroller.isRosterTerminated = function isRosterTerminated()\n\t\t{\n\t\t\tif(controller.page.demo !== null && controller.page.demo !== undefined)\n\t\t\t\treturn (controller.page.demo.rosterStatus === \"TE\");\n\n\t\t\treturn null;\n\t\t};\n\t\tcontroller.showReferralDocList = function showReferralDocList()\n\t\t{\n\t\t\tcontroller.page.showReferralDocList = !controller.page.showReferralDocList;\n\t\t};\n\n\t\tcontroller.searchReferralDocsName = function searchReferralDocsName(searchName)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(searchName, null);\n\t\t};\n\t\tcontroller.searchReferralDocsRefNo = function searchReferralDocsRefNo(searchRefNo)\n\t\t{\n\t\t\treturn controller.searchReferralDocs(null, searchRefNo);\n\t\t};\n\t\tcontroller.searchReferralDocs = function searchReferralDocs(searchName, searchRefNo)\n\t\t{\n\t\t\treturn referralDoctorsService.searchReferralDoctors(searchName, searchRefNo, 1, 10).then(\n\t\t\t\tfunction success(results) {\n\n\t\t\t\t\tvar referralDoctors = new Array(results.length);\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar displayName = results[i].lastName + ', ' + results[i].firstName;\n\t\t\t\t\t\treferralDoctors[i] = {\n\t\t\t\t\t\t\tlabel: displayName,\n\t\t\t\t\t\t\tname: displayName,\n\t\t\t\t\t\t\treferralNo: results[i].referralNo\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (results[i].specialtyType != null && results[i].specialtyType != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treferralDoctors[i].label += \" [\" + results[i].specialtyType + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn referralDoctors;\n\t\t\t\t},\n\t\t\t\tfunction failure(errors) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.chooseReferralDoc = function chooseReferralDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrReferralDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrReferralDoc = item.name;\n\t\t\tcontroller.checkReferralDocNo();\n\t\t};\n\t\tcontroller.chooseFamilyDoc = function chooseFamilyDoc(item, model, label)\n\t\t{\n\t\t\tcontroller.page.demo.scrFamilyDocNo = item.referralNo;\n\t\t\tcontroller.page.demo.scrFamilyDoc = item.name;\n\t\t\tcontroller.checkFamilyDocNo();\n\t\t};\n\t\tcontroller.showAddNewRosterStatus = function showAddNewRosterStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewRosterStatus = !controller.page.showAddNewRosterStatus;\n\t\t\tcontroller.page.newRosterStatus = null;\n\t\t};\n\t\tcontroller.showAddNewPatientStatus = function showAddNewPatientStatus()\n\t\t{\n\t\t\tcontroller.page.showAddNewPatientStatus = !controller.page.showAddNewPatientStatus;\n\t\t\tcontroller.page.newPatientStatus = null;\n\t\t};\n\n\t\t//add new Roster Status\n\t\tcontroller.addNewRosterStatus = function addNewRosterStatus()\n\t\t{\n\t\t\tif (controller.page.newRosterStatus != null && controller.page.newRosterStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.rosterStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newRosterStatus,\n\t\t\t\t\t\"label\": controller.page.newRosterStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.rosterStatus = controller.page.newRosterStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewRosterStatus();\n\t\t};\n\n\t\t//add new Patient Status\n\t\tcontroller.addNewPatientStatus = function addNewPatientStatus()\n\t\t{\n\t\t\tif (controller.page.newPatientStatus != null && controller.page.newPatientStatus != \"\")\n\t\t\t{\n\t\t\t\tcontroller.page.patientStatusList.push(\n\t\t\t\t{\n\t\t\t\t\t\"value\": controller.page.newPatientStatus,\n\t\t\t\t\t\"label\": controller.page.newPatientStatus\n\t\t\t\t});\n\t\t\t\tcontroller.page.demo.patientStatus = controller.page.newPatientStatus;\n\t\t\t}\n\t\t\tcontroller.showAddNewPatientStatus();\n\t\t};\n\n\t\t//check phone numbers\n\t\tcontroller.checkPhone = function checkPhone(type)\n\t\t{\n\t\t\tif (type == \"C\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrCellPhone)) controller.page.demo.scrCellPhone = phoneNum[\"C\"];\n\t\t\t\telse phoneNum[\"C\"] = controller.page.demo.scrCellPhone;\n\t\t\t}\n\t\t\telse if (type == \"H\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrHomePhone)) controller.page.demo.scrHomePhone = phoneNum[\"H\"];\n\t\t\t\telse phoneNum[\"H\"] = controller.page.demo.scrHomePhone;\n\t\t\t}\n\t\t\telse if (type == \"W\")\n\t\t\t{\n\t\t\t\tif (invalidPhoneNumber(controller.page.demo.scrWorkPhone)) controller.page.demo.scrWorkPhone = phoneNum[\"W\"];\n\t\t\t\telse phoneNum[\"W\"] = controller.page.demo.scrWorkPhone;\n\t\t\t}\n\t\t\telse if (type == \"HX\" && controller.page.demo.scrHPhoneExt != null && controller.page.demo.scrHPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrHPhoneExt)) controller.page.demo.scrHPhoneExt = phoneNum[\"HX\"];\n\t\t\t\telse phoneNum[\"HX\"] = controller.page.demo.scrHPhoneExt;\n\t\t\t}\n\t\t\telse if (type == \"WX\" && controller.page.demo.scrWPhoneExt != null && controller.page.demo.scrWPhoneExt != \"\")\n\t\t\t{\n\t\t\t\tif (!isNumber(controller.page.demo.scrWPhoneExt)) controller.page.demo.scrWPhoneExt = phoneNum[\"WX\"];\n\t\t\t\telse phoneNum[\"WX\"] = controller.page.demo.scrWPhoneExt;\n\t\t\t}\n\t\t};\n\n\t\t//set preferred contact phone number\n\t\tcontroller.setPreferredPhone = function setPreferredPhone()\n\t\t{\n\t\t\tcontroller.page.cellPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.cellPhonePreferredColor = \"\";\n\t\t\tcontroller.page.homePhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.homePhonePreferredColor = \"\";\n\t\t\tcontroller.page.workPhonePreferredMsg = defPhTitle;\n\t\t\tcontroller.page.workPhonePreferredColor = \"\";\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrCellPhone;\n\t\t\t\tcontroller.page.cellPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.cellPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrHomePhone;\n\t\t\t\tcontroller.page.homePhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.homePhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\")\n\t\t\t{\n\t\t\t\tcontroller.page.preferredPhoneNumber = controller.page.demo.scrWorkPhone;\n\t\t\t\tcontroller.page.workPhonePreferredMsg = prefPhTitle;\n\t\t\t\tcontroller.page.workPhonePreferredColor = colorAttn;\n\t\t\t}\n\t\t};\n\n\t\t//disable set-preferred if phone number empty\n\t\tcontroller.isPhoneVoid = function isPhoneVoid(phone)\n\t\t{\n\t\t\treturn (phone == null || phone == \"\");\n\t\t};\n\n\t\t//show enrollment history (roster staus history)\n\t\tcontroller.showEnrollmentHistory = function showEnrollmentHistory()\n\t\t{\n\t\t\tvar url = \"../demographic/EnrollmentHistory.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"enrollmentHistory\", \"width=650, height=1000\");\n\t\t};\n\n\t\t//upload photo\n\t\tcontroller.launchPhoto = function launchPhoto()\n\t\t{\n\t\t\tvar url = \"../casemgmt/uploadimage.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"uploadWin\", \"width=500, height=300\");\n\t\t};\n\n\t\t//manage contacts\n\t\tcontroller.manageContacts = function manageContacts()\n\t\t{\n\t\t\tvar discard = true;\n\t\t\tif (controller.page.dataChanged > 0)\n\t\t\t{\n\t\t\t\tdiscard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t}\n\t\t\tif (discard)\n\t\t\t{\n\t\t\t\tvar url = \"../demographic/Contact.do?method=manage&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t\twindow.open(url, \"ManageContacts\", \"width=960, height=700\");\n\t\t\t}\n\t\t};\n\n\t\t//print buttons\n\t\tcontroller.printLabel = function printLabel(label)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (label === \"PDFLabel\") url = \"../demographic/printDemoLabelAction.do?appointment_no=null&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label === \"PDFAddress\") url = \"../demographic/printDemoAddressLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label === \"PDFChart\") url = \"../demographic/printDemoChartLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label === \"PrintLabel\") url = \"../demographic/demographiclabelprintsetting.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (label === \"ClientLab\") url = \"../demographic/printClientLabLabelAction.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Print\", \"width=960, height=700\");\n\t\t};\n\n\t\t//integrator buttons\n\t\tcontroller.integratorDo = function integratorDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ViewCommunity\") url = \"../admin/viewIntegratedCommunity.jsp\";\n\t\t\telse if (func == \"Linking\") url = \"../integrator/manage_linked_clients.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Compare\") url = \"../demographic/DiffRemoteDemographics.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"Update\") url = \"../demographic/copyLinkedDemographicInfoAction.jsp?displaymode=edit&dboperation=search_detail&demographicId=\" + controller.page.demo.demographicNo + \"&demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\telse if (func == \"SendNote\") url = \"../demographic/followUpSelection.jsp?demographicId=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Integrator\", \"width=960, height=700\");\n\t\t};\n\n\t\t//MacPHR buttons\n\t\tcontroller.macPHRDo = function macPHRDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"Register\")\n\t\t\t{\n\t\t\t\tif (!controller.page.macPHRLoggedIn)\n\t\t\t\t{\n\t\t\t\t\talert(\"Please login to PHR first\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turl = \"../phr/indivo/RegisterIndivo.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"SendMessage\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PhrMessage.do?method=createMessage&providerNo=\" + user.providerNo + \"&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"ViewRecord\")\n\t\t\t{\n\t\t\t\turl = \"../demographic/viewPhrRecord.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\telse if (func == \"Verification\")\n\t\t\t{\n\t\t\t\turl = \"../phr/PHRVerification.jsp?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\t}\n\t\t\twindow.open(url, \"MacPHR\", \"width=960, height=700\");\n\t\t};\n\n\t\t//appointment buttons\n\t\tcontroller.appointmentDo = function appointmentDo(func)\n\t\t{\n\t\t\tvar url = null;\n\t\t\tif (func == \"ApptHistory\") url = \"../demographic/demographiccontrol.jsp?displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=25&orderby=appttime&demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName);\n\t\t\telse if (func == \"WaitingList\") url = \"../oscarWaitingList/SetupDisplayPatientWaitingList.do?demographic_no=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"Appointment\", \"width=960, height=700\");\n\t\t};\n\n\t\tcontroller.isClinicaidBilling = function isClinicaidBilling()\n\t\t{\n\t\t\treturn controller.page.billregion == \"CLINICAID\";\n\t\t};\n\n\t\t//billing buttons\n\t\tcontroller.billingDo = function billingDo(func)\n\t\t{\n\t\t\tvar now = new Date();\n\t\t\tvar url = null;\n\t\t\tif (func === \"BillingHistory\")\n\t\t\t{\n\t\t\t\tif (controller.page.billregion === \"CLINICAID\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing.do?billRegion=CLINICAID&action=invoice_reports&patient_remote_id=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t\telse if (controller.page.billregion === \"ON\")\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/ON/billinghistory.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&last_name=\" + encodeURI(controller.page.demo.lastName) + \"&first_name=\" + encodeURI(controller.page.demo.firstName) + \"&orderby=appointment_date&displaymode=appt_history&dboperation=appt_history&limit1=0&limit2=10\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = \"../billing/CA/BC/billcontroller.page.jsp?lastName=\" + encodeURI(controller.page.demo.lastName) + \"&firstName=\" + encodeURI(controller.page.demo.firstName) + \"&filterPatient=true&demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (func === \"CreateInvoice\")\n\t\t\t{\n\t\t\t\turl = \"../billing.do?billRegion=\" + controller.page.billregion + \"&billForm=\" + controller.page.defaultView + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear() + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func === \"FluBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/specialtyBilling/fluBilling/addFluBilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&demo_sex=\" + controller.page.demo.sex + \"&demo_hctype=\" + controller.page.demo.hcType + \"&rd=\" + encodeURI(controller.page.demo.scrReferralDoc) + \"&rdohip=\" + controller.page.demo.scrReferralDocNo + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay + \"&mrp=\" + controller.page.demo.providerNo;\n\t\t\t}\n\t\t\telse if (func === \"HospitalBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/billingShortcutPg1.jsp?billRegion=\" + controller.page.billregion + \"&billForm=\" + encodeURI(controller.page.hospitalView) + \"&hotclick=&appointment_no=0&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&demographic_no=\" + controller.page.demo.demographicNo + \"&providerview=\" + controller.page.demo.providerNo + \"&user_no=\" + user.providerNo + \"&apptProvider_no=none&appointment_date=\" + now.getFullYear + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + \"&start_time=00:00:00&bNewForm=1&status=t\";\n\t\t\t}\n\t\t\telse if (func === \"AddBatchBilling\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/addBatchBilling.jsp?demographic_no=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func === \"AddINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/addINRbilling.jsp?function=demographic&functionid=\" + controller.page.demo.demographicNo + \"&creator=\" + user.providerNo + \"&demographic_name=\" + encodeURI(controller.page.demo.lastName) + encodeURI(\",\") + encodeURI(controller.page.demo.firstName) + \"&hin=\" + controller.page.demo.hin + controller.page.demo.ver + \"&dob=\" + controller.page.demo.dobYear + controller.page.demo.dobMonth + controller.page.demo.dobDay;\n\t\t\t}\n\t\t\telse if (func === \"BillINR\")\n\t\t\t{\n\t\t\t\turl = \"../billing/CA/ON/inr/reportINR.jsp?provider_no=\" + user.providerNo;\n\t\t\t}\n\t\t\twindow.open(url, \"Billing\", \"width=960, height=700\");\n\t\t};\n\n\t\t//export demographic\n\t\tcontroller.exportDemographic = function exportDemographic()\n\t\t{\n\t\t\tvar url = \"../demographic/demographicExport.jsp?demographicNo=\" + controller.page.demo.demographicNo;\n\t\t\twindow.open(url, \"DemographicExport\", \"width=960, height=700\");\n\t\t};\n\n\t\tcontroller.formatDocOutput = function formatDocOutput(value)\n\t\t{\n\t\t\tvar number, name;\n\t\t\tvar begin = value.indexOf(\"<rdohip>\") + \"<rdohip>\".length;\n\t\t\tvar end = value.indexOf(\"</rdohip>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) number = value.substring(begin, end);\n\n\t\t\tbegin = value.indexOf(\"<rd>\") + \"<rd>\".length;\n\t\t\tend = value.indexOf(\"</rd>\");\n\t\t\tif (end > begin && end >= 0 && begin >= 0) name = value.substring(begin, end);\n\n\t\t\treturn {\"number\": number, \"name\": name};\n\t\t};\n\n\t\tcontroller.formatDocInput = function formatDocInput(name, number)\n\t\t{\n\t\t\tvar docNo = \"<rdohip></rdohip>\";\n\t\t\tvar doc = \"<rd></rd>\";\n\t\t\tif (number != null && number !== \"\")\n\t\t\t{\n\t\t\t\tdocNo = \"<rdohip>\" + number + \"</rdohip>\";\n\t\t\t}\n\t\t\tif (name != null && name !== \"\")\n\t\t\t{\n\t\t\t\tdoc = \"<rd>\" + name + \"</rd>\";\n\t\t\t}\n\t\t\treturn docNo + doc;\n\t\t};\n\n\t\t//HCValidation on open & save\n\t\tcontroller.validateHCSave = function validateHCSave(doSave)\n\t\t{\n\t\t\tif (controller.page.demo.hin == null || controller.page.demo.hin == \"\")\n\t\t\t{\n\t\t\t\tif (doSave) controller.save();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpatientDetailStatusService.isUniqueHC(controller.page.demo.hin, controller.page.demo.demographicNo).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!results.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(\"HIN is already in use!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (controller.page.demo.hcType != \"ON\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (controller.page.demo.ver == null) controller.page.demo.ver = \"\";\n\t\t\t\t\t\t\tpatientDetailStatusService.validateHC(controller.page.demo.hin, controller.page.demo.ver).then(\n\t\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (results.valid == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcontroller.page.HCValidation = \"n/a\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (!results.valid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\talert(\"Health Card Validation failed: \" + results.responseDescription + \" (\" + results.responseCode + \")\");\n\t\t\t\t\t\t\t\t\t\tdoSave = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (doSave) controller.save();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t//-----------------//\n\t\t// save operations //\n\t\t//-----------------//\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tcontroller.page.saving = true;\n\t\t\tcontroller.displayMessages.clear();\n\n\t\t\t//check required fields\n\t\t\tif (controller.page.demo.lastName == null || controller.page.demo.lastName == \"\")\n\t\t\t{\n\t\t\t\talert(\"Last Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.firstName == null || controller.page.demo.firstName == \"\")\n\t\t\t{\n\t\t\t\talert(\"First Name is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (controller.page.demo.sex == null || controller.page.demo.sex == \"\")\n\t\t\t{\n\t\t\t\talert(\"Sex is required\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dateEmpty(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay))\n\t\t\t{\n\t\t\t\talert(\"Date of Birth is required\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//validate field inputs\n\t\t\tcontroller.page.demo.dateOfBirth = buildDate(controller.page.demo.dobYear, controller.page.demo.dobMonth, controller.page.demo.dobDay);\n\t\t\tif (controller.page.demo.dateOfBirth == null)\n\t\t\t{\n\t\t\t\talert(\"Invalid Date of Birth\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!controller.checkPatientStatus()) return;\n\t\t\tif (!controller.isPostalComplete()) return;\n\t\t\tif (!controller.validateSin()) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrReferralDocNo)) return;\n\t\t\tif (!controller.validateDocNo(controller.page.demo.scrFamilyDocNo)) return;\n\n\t\t\t//save notes\n\t\t\tif (controller.page.demo.scrNotes != null)\n\t\t\t{\n\t\t\t\tcontroller.page.demo.notes = \"<unotes>\" + controller.page.demo.scrNotes + \"</unotes>\";\n\t\t\t}\n\n\t\t\t//save referral doctor (familyDoctor)\n\t\t\tcontroller.page.demo.familyDoctor = controller.formatDocInput(controller.page.demo.scrReferralDoc, controller.page.demo.scrReferralDocNo);\n\n\t\t\t//save family doctor (familyDoctor2)\n\t\t\tcontroller.page.demo.familyDoctor2 = controller.formatDocInput(controller.page.demo.scrFamilyDoc, controller.page.demo.scrFamilyDocNo);\n\n\t\t\t//save phone numbers\n\t\t\tcontroller.page.demo.scrDemoCell = controller.page.demo.scrCellPhone;\n\t\t\tcontroller.page.demo.phone = controller.page.demo.scrHomePhone;\n\t\t\tcontroller.page.demo.alternativePhone = controller.page.demo.scrWorkPhone;\n\n\t\t\tif (controller.page.demo.scrPreferredPhone == \"C\") controller.page.demo.scrDemoCell += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"H\") controller.page.demo.phone += \"*\";\n\t\t\telse if (controller.page.demo.scrPreferredPhone == \"W\") controller.page.demo.alternativePhone += \"*\";\n\n\t\t\t//save extras\n\t\t\tvar newDemoExtras = [];\n\t\t\tnewDemoExtras = updateDemoExtras(\"demo_cell\", controller.page.demo.scrDemoCell, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"aboriginal\", controller.page.demo.scrAboriginal, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"hPhoneExt\", controller.page.demo.scrHPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"wPhoneExt\", controller.page.demo.scrWPhoneExt, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"cytolNum\", controller.page.demo.scrCytolNum, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"phoneComment\", controller.page.demo.scrPhoneComment, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived\", controller.page.demo.scrPaperChartArchived, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"paper_chart_archived_date\", controller.page.demo.scrPaperChartArchivedDate, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"usSigned\", controller.page.demo.scrUsSigned, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"privacyConsent\", controller.page.demo.scrPrivacyConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"informedConsent\", controller.page.demo.scrInformedConsent, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityQuestion1\", controller.page.demo.scrSecurityQuestion1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"securityAnswer1\", controller.page.demo.scrSecurityAnswer1, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tnewDemoExtras = updateDemoExtras(\"rxInteractionWarningLevel\", controller.page.demo.scrRxInteractionLevel, posExtras, controller.page.demo.extras, newDemoExtras);\n\t\t\tcontroller.page.demo.extras = newDemoExtras;\n\n\t\t\t//save to database\n\t\t\tdemographicService.updateDemographic(controller.page.demo).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tcontroller.resetEditState();\n\t\t\t\t},\n\n\t\t\t\tfunction error()\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.saving = false;\n\t\t\t\t\talert('Failed to save demographic');\n\t\t\t\t\t// TODO: handle error\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.resetEditState = function resetEditState()\n\t\t{\n\t\t\tcontroller.page.saving = false;\n\t\t\tcontroller.page.dataChanged = false;\n\t\t};\n\n\t\tcontroller.init(); // Initialize the controller\n\t}\n]);\n\n\n// Move these?\nfunction updateDemoExtras(extKey, newVal, posExtras, oldExtras, newExtras)\n{\n\tif (newVal == null) return newExtras;\n\n\tvar pos = posExtras[extKey];\n\tif (pos != null && oldExtras[pos] != null)\n\t{ //existing ext\n\t\tif (oldExtras[pos].value != newVal)\n\t\t{\n\t\t\tnewExtras.push(\n\t\t\t{\n\t\t\t\tid: oldExtras[pos].id,\n\t\t\t\tkey: extKey,\n\t\t\t\tvalue: newVal,\n\t\t\t\thidden: oldExtras[pos].hidden\n\t\t\t});\n\t\t}\n\t}\n\telse\n\t{ //newly added ext\n\t\tnewExtras.push(\n\t\t{\n\t\t\tkey: extKey,\n\t\t\tvalue: newVal\n\t\t});\n\t}\n\treturn newExtras;\n}\n\nfunction buildDate(year, month, day)\n{\n\tif (dateEmpty(year, month, day)) return \"\";\n\tif (date3Valid(year, month, day)) return year + \"-\" + month + \"-\" + day;\n\treturn null;\n}\n\nfunction checkYear(year)\n{\n\tfor (var i = 0; i < year.length; i++)\n\t{\n\t\tif (!isNumber(year.charAt(i)))\n\t\t{\n\t\t\tyear = year.substring(0, i) + year.substring(i + 1);\n\t\t}\n\t}\n\tif (year != \"\")\n\t{\n\t\tyear = parseInt(year).toString();\n\t\tif (year.length > 4) year = year.substring(0, 4);\n\t\tif (year == 0) year = \"\";\n\t}\n\treturn year;\n}\n\nfunction checkMonth(month)\n{\n\tfor (var i = 0; i < month.length; i++)\n\t{\n\t\tif (!isNumber(month.charAt(i)))\n\t\t{\n\t\t\tmonth = month.substring(0, i) + month.substring(i + 1);\n\t\t}\n\t}\n\tif (month != \"\")\n\t{\n\t\tif (month.length > 2) month = month.substring(0, 2);\n\t\tif (month > 12) month = month.substring(0, 1);\n\t}\n\treturn month;\n}\n\nvar daysOfMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction checkDay(day, month, year)\n{\n\tfor (var i = 0; i < day.length; i++)\n\t{\n\t\tif (!isNumber(day.charAt(i)))\n\t\t{\n\t\t\tday = day.substring(0, i) + day.substring(i + 1);\n\t\t}\n\t}\n\tif (day != \"\")\n\t{\n\t\tif (day.length > 2) day = day.substring(0, 2);\n\n\t\tif (month == null)\n\t\t{\n\t\t\tif (day > 31) day = day.substring(0, 1);\n\t\t}\n\t\telse if (year == null)\n\t\t{\n\t\t\tif (day > daysOfMonth[month - 1]) day.substring(0, 1);\n\t\t}\n\t\telse if (!date3Valid(year, month, day))\n\t\t{\n\t\t\tday = day.substring(0, 1);\n\t\t}\n\t}\n\treturn day;\n}\n\nfunction date3Valid(year, month, day)\n{\n\tif (year != null && year != \"\" && month != null && month != \"\" && day != null && day != \"\")\n\t{\n\t\tvar maxDaysOfMonth = daysOfMonth[month - 1];\n\t\tif (month == 2)\n\t\t{\n\t\t\tif ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n\t\t\t{\n\t\t\t\tmaxDaysOfMonth = 29;\n\t\t\t}\n\t\t}\n\t\treturn (day > 0 && day <= maxDaysOfMonth);\n\t}\n\treturn dateEmpty(year, month, day);\n}\n\nfunction dateEmpty(year, month, day)\n{\n\treturn ((year == null || year == \"\") && (month == null || month == \"\") && (day == null || day == \"\"));\n}\n\nfunction dateValid(dateStr)\n{ //valid date format: yyyy-MM-dd\n\tif (dateStr == null || dateStr == \"\") return true;\n\n\tvar datePart = dateStr.toString().split(\"-\");\n\tif (datePart.length != 3) return false;\n\n\tvar dateDate = new Date(datePart[0], datePart[1] - 1, datePart[2]);\n\tif (isNaN(dateDate.getTime())) return false;\n\n\tif (dateDate.getFullYear() != datePart[0]) return false;\n\tif (dateDate.getMonth() != datePart[1] - 1) return false;\n\tif (dateDate.getDate() != datePart[2]) return false;\n\n\treturn true;\n}\n\nfunction isNumber(s)\n{\n\treturn /^[0-9]+$/.test(s);\n}\n\nfunction invalidPhoneNumber(phone)\n{\n\tif (phone == null) return false; //phone number is NOT invalid\n\treturn !(/^[0-9 \\-\\()]*$/.test(phone));\n}\n\nfunction isPreferredPhone(phone)\n{\n\tphone = String(phone);\n\tif (phone != null && phone != \"\")\n\t{\n\t\tif (phone.charAt(phone.length - 1) == \"*\") return true;\n\t}\n\treturn false;\n}\n\nfunction getPhoneNum(phone)\n{\n\tif (isPreferredPhone(phone))\n\t{\n\t\tphone = phone.substring(0, phone.length - 1);\n\t}\n\treturn phone;\n}\n\nfunction demoContactShow(demoContact)\n{\n\tvar contactShow = demoContact;\n\tif (demoContact.role != null)\n\t{ //only 1 entry\n\t\tvar tmp = {};\n\t\ttmp.role = demoContact.role;\n\t\ttmp.sdm = demoContact.sdm;\n\t\ttmp.ec = demoContact.ec;\n\t\ttmp.category = demoContact.category;\n\t\ttmp.lastName = demoContact.lastName;\n\t\ttmp.firstName = demoContact.firstName;\n\t\ttmp.phone = demoContact.phone;\n\t\tcontactShow = [tmp];\n\t}\n\tfor (var i = 0; i < contactShow.length; i++)\n\t{\n\t\tif (contactShow[i].sdm == true) contactShow[i].role += \" /sdm\";\n\t\tif (contactShow[i].ec == true) contactShow[i].role += \" /ec\";\n\t\tif (contactShow[i].role == null || contactShow[i].role == \"\") contactShow[i].role = \"-\";\n\n\t\tif (contactShow[i].phone == null || contactShow[i].phone == \"\")\n\t\t{\n\t\t\tcontactShow[i].phone = \"-\";\n\t\t}\n\t\telse if (contactShow[i].phone.charAt(contactShow[i].phone.length - 1) == \"*\")\n\t\t{\n\t\t\tcontactShow[i].phone = contactShow[i].phone.substring(0, contactShow[i].phone.length - 1);\n\t\t}\n\t}\n\treturn contactShow;\n}\n\nfunction toArray(obj)\n{ //convert single object to array\n\tif (obj instanceof Array) return obj;\n\telse if (obj == null) return [];\n\telse return [obj];\n}","export * from './AppointmentApi';\nimport { AppointmentApi } from './AppointmentApi';\nexport * from './IceFallApi';\nimport { IceFallApi } from './IceFallApi';\nexport * from './ProviderPreferenceApi';\nimport { ProviderPreferenceApi } from './ProviderPreferenceApi';\nexport * from './ScheduleApi';\nimport { ScheduleApi } from './ScheduleApi';\nexport * from './SitesApi';\nimport { SitesApi } from './SitesApi';\nexport * from './SystemPreferenceApi';\nimport { SystemPreferenceApi } from './SystemPreferenceApi';\nexport const APIS = [AppointmentApi, IceFallApi, ProviderPreferenceApi, ScheduleApi, SitesApi, SystemPreferenceApi];\n","export * from './AbstractSearchResponseAppointmentStatusTo1';\nexport * from './AbstractSearchResponseProviderSettings';\nexport * from './AddressTo1';\nexport * from './AppointmentEditRecord';\nexport * from './AppointmentStatusTo1';\nexport * from './AppointmentTo1';\nexport * from './AppointmentTypeTo1';\nexport * from './AvailabilityType';\nexport * from './CalendarAppointment';\nexport * from './CalendarAppointmentRepeating';\nexport * from './CalendarAppointmentStatus';\nexport * from './CalendarEvent';\nexport * from './CalendarSchedule';\nexport * from './Demographic';\nexport * from './DemographicExt';\nexport * from './GenericRESTResponse';\nexport * from './IceFallLogEntryListTo1';\nexport * from './IceFallLogEntryTo1';\nexport * from './IceFallSendFormTo1';\nexport * from './IceFallSettingsTo1';\nexport * from './LookupListItemTo1';\nexport * from './PatientListItemTransfer';\nexport * from './Provider';\nexport * from './ProviderData';\nexport * from './ProviderSettings';\nexport * from './ProviderTo1';\nexport * from './QuickLink';\nexport * from './RestResponseAppointmentTo1';\nexport * from './RestResponseBoolean';\nexport * from './RestResponseCalendarAppointment';\nexport * from './RestResponseCalendarSchedule';\nexport * from './RestResponseError';\nexport * from './RestResponseHeaders';\nexport * from './RestResponseIceFallLogEntryListTo1';\nexport * from './RestResponseIceFallSettingsTo1';\nexport * from './RestResponseInteger';\nexport * from './RestResponseSiteTransfer';\nexport * from './RestResponseString';\nexport * from './RestSearchResponseAppointmentEditRecord';\nexport * from './RestSearchResponseAppointmentTypeTo1';\nexport * from './RestSearchResponseCalendarAppointmentStatus';\nexport * from './RestSearchResponseHeaders';\nexport * from './RestSearchResponseLookupListItemTo1';\nexport * from './RestSearchResponsePatientListItemTransfer';\nexport * from './RestSearchResponseScheduleGroup';\nexport * from './RestSearchResponseScheduleSearchResult';\nexport * from './RestSearchResponseScheduleTemplateCode';\nexport * from './RestSearchResponseSiteTransfer';\nexport * from './ScheduleGroup';\nexport * from './ScheduleSearchResult';\nexport * from './ScheduleSlot';\nexport * from './ScheduleTemplateCode';\nexport * from './SchedulingResponse';\nexport * from './SiteTransfer';\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\nexport interface AppointmentTo1 {\n    \"id\"?: number;\n    \"providerNo\"?: string;\n    \"appointmentDate\"?: Date;\n    \"startTime\"?: Date;\n    \"endTime\"?: Date;\n    \"name\"?: string;\n    \"demographicNo\"?: number;\n    \"programId\"?: number;\n    \"notes\"?: string;\n    \"reason\"?: string;\n    \"location\"?: string;\n    \"resources\"?: string;\n    \"type\"?: string;\n    \"style\"?: string;\n    \"billing\"?: string;\n    \"status\"?: string;\n    \"importedStatus\"?: string;\n    \"createDateTime\"?: Date;\n    \"updateDateTime\"?: Date;\n    \"creator\"?: string;\n    \"lastUpdateUser\"?: string;\n    \"remarks\"?: string;\n    \"urgency\"?: string;\n    \"creatorSecurityId\"?: number;\n    \"bookingSource\"?: AppointmentTo1.BookingSourceEnum;\n    \"reasonCode\"?: number;\n    \"demographic\"?: models.Demographic;\n    \"provider\"?: models.Provider;\n}\n\nexport namespace AppointmentTo1 {\n    export enum BookingSourceEnum {\n        OSCAR = <any> 'OSCAR',\n        MYOSCARSELFBOOKING = <any> 'MYOSCAR_SELF_BOOKING'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\nexport interface ProviderTo1 {\n    \"providerNo\"?: string;\n    \"lastName\"?: string;\n    \"firstName\"?: string;\n    \"name\"?: string;\n    \"comments\"?: string;\n    \"phone\"?: string;\n    \"billingNo\"?: string;\n    \"workPhone\"?: string;\n    \"address\"?: models.AddressTo1;\n    \"team\"?: string;\n    \"enabled\"?: boolean;\n    \"providerType\"?: string;\n    \"sex\"?: ProviderTo1.SexEnum;\n    \"ohipNo\"?: string;\n    \"specialty\"?: string;\n    \"dob\"?: Date;\n    \"hsoNo\"?: string;\n    \"providerActivity\"?: string;\n    \"rmaNo\"?: string;\n    \"signedConfidentiality\"?: Date;\n    \"practitionerNo\"?: string;\n    \"email\"?: string;\n    \"title\"?: string;\n    \"lastUpdateUser\"?: string;\n    \"lastUpdateDate\"?: Date;\n}\n\nexport namespace ProviderTo1 {\n    export enum SexEnum {\n        M = <any> 'M',\n        F = <any> 'F'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseAppointmentTo1 {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: models.AppointmentTo1;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseAppointmentTo1.StatusEnum;\n}\n\nexport namespace RestResponseAppointmentTo1 {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseBoolean {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: boolean;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseBoolean.StatusEnum;\n}\n\nexport namespace RestResponseBoolean {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseCalendarAppointment {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: models.CalendarAppointment;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseCalendarAppointment.StatusEnum;\n}\n\nexport namespace RestResponseCalendarAppointment {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseCalendarSchedule {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: models.CalendarSchedule;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseCalendarSchedule.StatusEnum;\n}\n\nexport namespace RestResponseCalendarSchedule {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseIceFallLogEntryListTo1 {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: models.IceFallLogEntryListTo1;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseIceFallLogEntryListTo1.StatusEnum;\n}\n\nexport namespace RestResponseIceFallLogEntryListTo1 {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseIceFallSettingsTo1 {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: models.IceFallSettingsTo1;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseIceFallSettingsTo1.StatusEnum;\n}\n\nexport namespace RestResponseIceFallSettingsTo1 {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseInteger {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: number;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseInteger.StatusEnum;\n}\n\nexport namespace RestResponseInteger {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseSiteTransfer {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: models.SiteTransfer;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseSiteTransfer.StatusEnum;\n}\n\nexport namespace RestResponseSiteTransfer {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for single results\n */\nexport interface RestResponseString {\n    \"headers\"?: models.RestResponseHeaders;\n    \"body\"?: string;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestResponseString.StatusEnum;\n}\n\nexport namespace RestResponseString {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseAppointmentEditRecord {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.AppointmentEditRecord>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseAppointmentEditRecord.StatusEnum;\n}\n\nexport namespace RestSearchResponseAppointmentEditRecord {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseAppointmentTypeTo1 {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.AppointmentTypeTo1>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseAppointmentTypeTo1.StatusEnum;\n}\n\nexport namespace RestSearchResponseAppointmentTypeTo1 {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseCalendarAppointmentStatus {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.CalendarAppointmentStatus>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseCalendarAppointmentStatus.StatusEnum;\n}\n\nexport namespace RestSearchResponseCalendarAppointmentStatus {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseLookupListItemTo1 {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.LookupListItemTo1>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseLookupListItemTo1.StatusEnum;\n}\n\nexport namespace RestSearchResponseLookupListItemTo1 {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponsePatientListItemTransfer {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.PatientListItemTransfer>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponsePatientListItemTransfer.StatusEnum;\n}\n\nexport namespace RestSearchResponsePatientListItemTransfer {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseScheduleGroup {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.ScheduleGroup>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseScheduleGroup.StatusEnum;\n}\n\nexport namespace RestSearchResponseScheduleGroup {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseScheduleSearchResult {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.ScheduleSearchResult>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseScheduleSearchResult.StatusEnum;\n}\n\nexport namespace RestSearchResponseScheduleSearchResult {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseScheduleTemplateCode {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.ScheduleTemplateCode>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseScheduleTemplateCode.StatusEnum;\n}\n\nexport namespace RestSearchResponseScheduleTemplateCode {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\n/**\n * Response wrapper object for list results\n */\nexport interface RestSearchResponseSiteTransfer {\n    \"headers\"?: models.RestSearchResponseHeaders;\n    \"body\"?: Array<models.SiteTransfer>;\n    \"error\"?: models.RestResponseError;\n    \"status\"?: RestSearchResponseSiteTransfer.StatusEnum;\n}\n\nexport namespace RestSearchResponseSiteTransfer {\n    export enum StatusEnum {\n        SUCCESS = <any> 'SUCCESS',\n        ERROR = <any> 'ERROR'\n    }\n}\n","/**\n * \n * \n *\n * \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as models from './models';\n\nexport interface ScheduleGroup {\n    \"name\"?: string;\n    \"identifier\"?: string;\n    \"identifierType\"?: ScheduleGroup.IdentifierTypeEnum;\n    \"providerNos\"?: Array<number>;\n}\n\nexport namespace ScheduleGroup {\n    export enum IdentifierTypeEnum {\n        GROUP = <any> 'GROUP',\n        PROVIDER = <any> 'PROVIDER'\n    }\n}\n","angular.module('Record.Details').controller('Record.Details.SwipecardController', [\n\n\t'$scope',\n\t'$uibModal',\n\t'$uibModalInstance',\n\n\tfunction (\n\t\t$scope,\n\t\t$uibModal,\n\t\t$uibModalInstance,\n\t)\n\t{\n\t\tlet controller = this;\n\n\t\tcontroller.cardDataString = null;\n\t\tcontroller.focusInput = null;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\t// setting this triggers the ca-focus-field directive to set the focus on the card-data element\n\t\t\tcontroller.focusInput = \"card-data\";\n\t\t};\n\n\t\tcontroller.parseDataAndClose = function parseDataAndClose(dataString)\n\t\t{\n\t\t\tif(!Juno.Common.Util.isBlank(dataString))\n\t\t\t{\n\t\t\t\tvar cardInfo = Oscar.HealthCardParser.parse(dataString);\n\n\t\t\t\t//TODO detect and display any errors\n\t\t\t\t$uibModalInstance.close(cardInfo);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.onEnterKeyDown = function onEnterKeyDown()\n\t\t{\n\t\t\tcontroller.parseDataAndClose(controller.cardDataString);\n\t\t};\n\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","'use strict';\n\nangular.module('Record.PHR', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\nangular.module('Record.PHR').controller('Record.PHR.PHRController', [\n\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$state',\n\t'$stateParams',\n\t'demographicService',\n\t'demo',\n\t'formService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$state,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemo,\n\t\tformService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tconsole.log(\"phr ctrl \", $stateParams, $state);\n\n\t\tcontroller.page = {};\n\t\tcontroller.page.currentFormList = [];\n\t\tcontroller.page.currentForm = {};\n\t\tcontroller.page.currentlistId = 0;\n\n\t\tconsole.log(\"What is the state \" + $state.params.type + \" : \" + angular.isUndefined($state.params.type) + \" id \" + $state.params.id, $state); // Use this to load the current form if the page is refreshed\n\n\n\t\tcontroller.page.formlists = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Data'\n\t\t}]; //,{id:1,label:'Msgs'}];  //Need to get this from the server.\n\n\t\tcontroller.page.currentFormList[0] = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: 'Glucose',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_glucose.do?type=GLUCOSE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'BP',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_blood_pressure.do?type=BLOOD_PRESSURE&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Height & Weight',\n\t\t\turl: '../oscarEncounter/myoscar/measurements_height_and_weight.do?type=HEIGHT_AND_WEIGHT&demoNo=',\n\t\t\ttype: 'frame'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'Open Record',\n\t\t\turl: '../demographic/viewPhrRecord.do?demographic_no=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tname: 'Send a Message',\n\t\t\turl: '../phr/PhrMessage.do?method=createMessage&demographicNo=',\n\t\t\ttype: 'window'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tname: 'Data Sync',\n\t\t\turl: '../admin/oscar_myoscar_sync_config_redirect.jsp?uselessParam=',\n\t\t\ttype: 'window'\n\t\t}];\n\n\n\n\t\t/*controller.page.formlists.forEach(function (item, index) {\n\t\t\tconsole.log('What is the item ',item);\n\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo,item.label).then(function(data) {\n\t\t        console.debug('whats the index'+index,data);\n\t\t        controller.page.currentFormList[index] = data.list;\n\t\t    });\n\t\t});\n\t\t*/\n\n\t\tcontroller.changeTo = function changeTo(listId)\n\t\t{\n\t\t\tcontroller.page.currentlistId = listId;\n\t\t\tconsole.log('set currentlist to ' + listId);\n\t\t\tif (listId == 0)\n\t\t\t{\n\t\t\t\tformService.getAllFormsByHeading($stateParams.demographicNo, 'Completed').then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.debug('whats the index' + 0, results);\n\t\t\t\t\t\tcontroller.page.currentFormList[0] = results.list;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewFormState = function viewFormState(item)\n\t\t{\n\n\t\t\twhile (document.getElementById('formInViewFrame').hasChildNodes())\n\t\t\t{\n\t\t\t\tdocument.getElementById('formInViewFrame').removeChild(document.getElementById('formInViewFrame').firstChild);\n\t\t\t}\n\n\t\t\tvar url = item.url + $stateParams.demographicNo;\n\t\t\tconsole.log(\"item\", item);\n\n\t\t\tif (item.type == 'frame')\n\t\t\t{\n\t\t\t\tcontroller.page.currentForm = item;\n\t\t\t\tvar pymParent = new pym.Parent('formInViewFrame', url,\n\t\t\t\t{});\n\t\t\t\tcontroller.pymParent = pymParent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rnd = Math.round(Math.random() * 1000);\n\t\t\t\twin = \"win\" + rnd;\n\t\t\t\twindow.open(url, win, \"scrollbars=yes, location=no, width=900, height=600\", \"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t};\n\n\n\n\t\t/*\n\t\t * Used to make the left side list tab be active\n\t\t */\n\t\tcontroller.getListClass = function getListClass(listId)\n\t\t{\n\t\t\tif (listId === controller.page.currentlistId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Used to mark which form is active.\n\t\t */\n\t\tcontroller.getActiveFormClass = function getActiveFormClass(item)\n\t\t{\n\t\t\tif (item.type == controller.page.currentForm.type && item.id == controller.page.currentForm.id && angular.isDefined(item.id))\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t\telse if (item.type == controller.page.currentForm.type && angular.isUndefined(item.id) && item.formId == controller.page.currentForm.formId)\n\t\t\t{\n\t\t\t\treturn \"active\";\n\t\t\t}\n\t\t};\n\n\t\t// Remove this?\n\t\tfunction handleError(errorMessage)\n\t\t{\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\n\t\t/*\n\t\t * This still needs to be tested\n\t\t */\n\t\tcontroller.keypress = function keypress(event)\n\t\t{\n\t\t\tif (event.altKey == true && event.key == \"Up\")\n\t\t\t{\n\t\t\t\tconsole.log(\"up\", event);\n\t\t\t\tconsole.log(controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm));\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tif (currIdx > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx - 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.altKey == true && event.key == \"Down\")\n\t\t\t{\n\t\t\t\tconsole.log(\"down\", event);\n\t\t\t\tvar currIdx = controller.page.currentFormList[controller.page.currentlistId].indexOf(controller.page.currentForm);\n\t\t\t\tconsole.log(currIdx, controller.page.currentFormList[controller.page.currentlistId].length);\n\t\t\t\tif (currIdx <= controller.page.currentFormList[controller.page.currentlistId].length)\n\t\t\t\t{\n\t\t\t\t\tcontroller.page.currentForm = controller.page.currentFormList[controller.page.currentlistId][currIdx + 1];\n\t\t\t\t\tcontroller.viewFormState(controller.page.currentForm);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(\"keypress\", event.altKey, event.key, event);\n\t\t\t}\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Record.Tracker', ['Common', 'Common.Services']);","/*\n\n    Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n    This software is published under the GPL GNU General Public License.\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n    This software was written for the\n    Department of Family Medicine\n    McMaster University\n    Hamilton\n    Ontario, Canada\n\n*/\n\nangular.module('Record.Tracker').controller('Record.Tracker.TrackerController', [\n\n\t'$rootScope',\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'$stateParams',\n\t'$state',\n\t'$timeout',\n\t'demographicService',\n\t'noteService',\n\t'uxService',\n\n\tfunction(\n\t\t$rootScope,\n\t\t$scope,\n\t\t$http,\n\t\t$location,\n\t\t$stateParams,\n\t\t$state,\n\t\t$timeout,\n\t\tdemographicService,\n\t\tnoteService,\n\t\tuxService)\n\t{\n\n\t\tvar controller = this;\n\t\tcontroller.getTrackerUrl = function getTrackerUrl()\n\t\t{\n\n\t\t\turl = '../oscarEncounter/oscarMeasurements/HealthTrackerPage.jspf?template=tracker&demographic_no=' + $stateParams.demographicNo;\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tcontroller.resizeIframe = function resizeIframe(iframe)\n\t\t{\n\n\t\t\tvar h = iframe.contentWindow.document.body.scrollHeight;\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tiframe.height = h + \"px\";\n\t\t\t\t//alert(\"h > 0\");\n\t\t\t}\n\t\t\t//alert(\"h\" + h);\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Tickler', ['Common', 'Common.Services', 'Common.Filters']);","angular.module('Tickler').controller('Tickler.TicklerListController', [\n\n\t'$scope',\n\t'$state',\n\t'$timeout',\n\t'$resource',\n\t'$uibModal',\n\t'$http',\n\t'$stateParams',\n\t'$filter',\n\t'NgTableParams',\n\t'securityService',\n\t'ticklerService',\n\t'noteService',\n\t'providerService',\n\t'providers',\n\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$timeout,\n\t\t$resource,\n\t\t$uibModal,\n\t\t$http,\n\t\t$stateParams,\n\t\t$filter,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tticklerService,\n\t\tnoteService,\n\t\tproviderService,\n\t\tproviders)\n\t{\n\n\t\tvar controller = this;\n\n\t\tvar ticklerAPI = $resource('../ws/rs/tickler/ticklers');\n\n\t\tcontroller.lastResponse = \"\"; // Can be removed?\n\t\tcontroller.providers = providers;\n\n\t\tsecurityService.hasRights(\n\t\t{\n\t\t\titems: [\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'w'\n\t\t\t},\n\t\t\t{\n\t\t\t\tobjectName: '_tickler',\n\t\t\t\tprivilege: 'r'\n\t\t\t}]\n\t\t}).then(function(result)\n\t\t{\n\t\t\tif (result.content != null && result.content.length == 2)\n\t\t\t{\n\t\t\t\tcontroller.ticklerWriteAccess = result.content[0];\n\t\t\t\tcontroller.ticklerReadAccess = result.content[1];\n\n\t\t\t\tif (controller.ticklerReadAccess)\n\t\t\t\t{\n\n\t\t\t\t\t//object which represents all the filters, initialize status.\n\t\t\t\t\tcontroller.search = {\n\t\t\t\t\t\tstatus: 'A',\n\t\t\t\t\t};\n\n\t\t\t\t\tif ($state.current.name === 'ticklers')\n\t\t\t\t\t{// only default to current day for serviceEndDate on the global tickler page.\n\t\t\t\t\t\tcontroller.search.serviceEndDate = moment().startOf('day').toDate();\n\t\t\t\t\t}\n\n\t\t\t\t\tproviderService.getSettings().then(\n\t\t\t\t\t\tfunction(settings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (settings.ticklerViewOnlyMine)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\t\t\t\t\t\tfunction(user)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcontroller.search.taskAssignedTo = user.providerNo;\n\t\t\t\t\t\t\t\t\t\t\tcontroller.loadTable();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.loadTable();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\talert('failed to load rights');\n\t\t\t}\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.doSearch = function()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function()\n\t\t{\n\t\t\tcontroller.search = angular.copy(\n\t\t\t{\n\t\t\t\tstatus: 'A'\n\t\t\t});\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = true;\n\t\t\t});\n\t\t};\n\n\t\t// controller.checkAll = function()\n\t\t// {\n\n\t\t// \tangular.forEach(controller.lastResponse, function(item)\n\t\t// \t{\n\t\t// \t\titem.checked = true;\n\t\t// \t});\n\t\t// };\n\n\t\tcontroller.checkNone = function checkNone(data)\n\t\t{\n\t\t\tangular.forEach(data, function(tickler)\n\t\t\t{\n\t\t\t\ttickler.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.loadTable = function()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1, // show first page\n\t\t\t\t\t\tcount: 10,// initial count per page\n\t\t\t\t\t\tsorting: {\n\t\t\t\t\t\t\tServiceDate: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// total: 0, // length of data\n\t\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ajax request to api\n\t\t\t\t\t\t\tcontroller.search.count = params.url().count;\n\t\t\t\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\t\t\t\tcontroller.search.includeLinks = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeComments = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeUpdates = 'true';\n\t\t\t\t\t\t\tcontroller.search.includeProgram = true;\n\n\t\t\t\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t\t\t\t// for use in our get parameters.\n\t\t\t\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (angular.isDefined($stateParams.demographicNo))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.search.demographicNo = $stateParams.demographicNo;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ticklerAPI.get(controller.search).$promise.then(function(data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparams.total(data.total); // recal. page nav controls\n\t\t\t\t\t\t\t\tvar ticklerList = data.content;\n\t\t\t\t\t\t\t\t// Grab URLs for tickler links\n\t\t\t\t\t\t\t\tfor (var i = 0; i < ticklerList.length; i++){\n\t\t\t\t\t\t\t\t\tif (ticklerList[i].ticklerLinks.length > 0 )\n\t\t\t\t\t\t\t\t\t\tticklerList[i].ticklerLinkUrl = controller.getLinkUrl(ticklerList[i].ticklerLinks[0]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn data.content;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t}\n\n\t\tcontroller.completeTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setCompleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\n\t\tcontroller.deleteTicklers = function()\n\t\t{\n\t\t\tvar selectedTicklers = [];\n\t\t\tangular.forEach(controller.tableParams.data, function(item)\n\t\t\t{\n\t\t\t\tif (item.checked)\n\t\t\t\t{\n\t\t\t\t\tselectedTicklers.push(item.id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tticklerService.setDeleted(selectedTicklers).then(function(data)\n\t\t\t{\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.addTickler = function()\n\t\t{\n\t\t\tvar windowProps = \"height=400,width=600,location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes\";\n\t\t\t//window.open('../tickler/ticklerAdd.jsp','ticklerAdd',windowProps);\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerAdd.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerAddController as ticklerAddCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.editTickler = function(tickler)\n\t\t{\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerView.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerViewController as ticklerViewCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tsize: 'lg',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t},\n\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn noteService.getTicklerNote(tickler.id);\n\t\t\t\t\t},\n\t\t\t\t\tticklerWriteAccess: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.ticklerWriteAccess;\n\t\t\t\t\t},\n\t\t\t\t\tme: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn providerService.getMe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(data)\n\t\t\t{\n\t\t\t\tconsole.log('data from modalInstance ' + data);\n\t\t\t\tif (data != null && data == true)\n\t\t\t\t{\n\t\t\t\t\tcontroller.tableParams.reload();\n\t\t\t\t}\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.editNote2 = function(tickler)\n\t\t{\n\n\t\t\tnoteService.getTicklerNote(tickler.id).then(function(data)\n\t\t\t{\n\t\t\t\tif (data.ticklerNote != null)\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = data.ticklerNote;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.ticklerNote = {\n\t\t\t\t\t\t\"editor\": \"you\",\n\t\t\t\t\t\t\"note\": \"\",\n\t\t\t\t\t\t\"noteId\": 0,\n\t\t\t\t\t\t\"observationDate\": \"now\",\n\t\t\t\t\t\t\"revision\": 0\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/tickler/ticklerNote.jsp',\n\t\t\t\t\tcontroller: 'Tickler.TicklerNoteController as ticklerNoteCtrl',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tresolve:\n\t\t\t\t\t{\n\t\t\t\t\t\tticklerNote: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn controller.ticklerNote;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickler: function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tickler;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.showComments = function(tickler)\n\t\t{\n\t\t\tcontroller.tickler = tickler;\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/tickler/ticklerComments.jsp',\n\t\t\t\tcontroller: 'Tickler.TicklerCommentController as ticklerCommentCtrl',\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\ttickler: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn controller.tickler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.printArea = function()\n\t\t{\n\t\t\twindow.print();\n\t\t};\n\n\t\tcontroller.getLinkUrl = function getLinkUrl(input)\n\t\t{\n            if (input !== null && input.id !== null)\n            {\n                var url = \"\";\n\n                if (input.tableName === 'CML')\n                {\n                    url = \"../lab/CA/ON/CMLDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'MDS')\n                {\n                    url = \"../oscarMDS/SegmentDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'HL7')\n                {\n                    url = \"../lab/CA/ALL/labDisplay.jsp?segmentID=\" + input.tableId;\n                }\n                else if (input.tableName === 'DOC')\n                {\n                    url = \"../dms/ManageDocument.do?method=display&doc_no=\" + input.tableId;\n                }\n                return url;\n            }\n\n\t\t};\n\t\tcontroller.inDemographicView = function()\n\t\t{\n\t\t\treturn ($state.params.demographicNo != null);\n\t\t}\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerViewController', [\n\n\t'$scope',\n\t'$filter',\n\t'$uibModalInstance',\n\t'$timeout',\n\t'tickler',\n\t'ticklerService',\n\t'ticklerNote',\n\t'ticklerWriteAccess',\n\t'providerService',\n\t'me',\n\n\tfunction(\n\t\t$scope,\n\t\t$filter,\n\t\t$uibModalInstance,\n\t\t$timeout,\n\t\ttickler,\n\t\tticklerService,\n\t\tticklerNote,\n\t\tticklerWriteAccess,\n\t\tproviderService,\n\t\tme)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerUpdate = angular.copy(tickler);\n\n\t\tcontroller.serviceDateInput = moment(controller.ticklerUpdate.serviceDate).toDate();\n\t\tcontroller.serviceTimeInput = moment(controller.ticklerUpdate.serviceDate).format(\"hh:mm A\");\n\n\t\tcontroller.me = me;\n\t\tcontroller.ticklerWriteAccess = ticklerWriteAccess;\n\n\t\t//this object keeps track of the changes being made\n\t\t// controller.ticklerUpdate = {\n\t\t// \tmessage: controller.tickler.message,\n\n\t\t// \ttaskAssignedTo: controller.tickler.taskAssignedTo,\n\t\t// \ttaskAssignedToName: controller.tickler.taskAssignedName,\n\t\t// \tserviceDate: $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd'),\n\t\t// \tserviceTime: $filter('date')(controller.tickler.serviceDate, 'HH:mm'),\n\n\t\t// };\n\n\t\tcontroller.needsUpdate = false;\n\t\tcontroller.showUpdates = false;\n\t\tcontroller.showComments = false;\n\t\tcontroller.showCommentFormControl = false;\n\n\t\t// controller.taskAssignedToName = controller.tickler.taskAssignedName;\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\t\tcontroller.statuses = [\n\t\t{\n\t\t\tid: 'A',\n\t\t\tlabel: 'Active'\n\t\t},\n\t\t{\n\t\t\tid: 'C',\n\t\t\tlabel: 'Completed'\n\t\t},\n\t\t{\n\t\t\tid: 'D',\n\t\t\tlabel: 'Deleted'\n\t\t}];\n\n\t\tif (ticklerNote != null)\n\t\t{\n\t\t\tcontroller.ticklerNote = ticklerNote.ticklerNote;\n\t\t}\n\n\t\t// Keep track of the current status as an object containing id and label\n\t\tif (tickler != null)\n\t\t{\n\t\t\tcontroller.selectedStatus = controller.statuses.find(function(status)\n\t\t\t{\n\t\t\t\treturn status.id == tickler.status;\n\t\t\t});\n\t\t}\n\n\t\t// $scope.$watch('controller.ticklerUpdate.serviceDate',\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('change', new_value);\n\n\t\t// \t\tif (controller.ticklerUpdate.serviceDate instanceof Date && controller.ticklerUpdate.serviceTime instanceof Date)\n\t\t// \t\t{\n\n\t\t// \t\t\tcontroller.ticklerUpdate.serviceDate = new Date(controller.ticklerUpdate.serviceDate.getTime() + controller.ticklerUpdate.serviceTime.getTime());\n\n\t\t// \t\t\tconsole.log('new val', controller.ticklerUpdate.serviceDate);\n\t\t// \t\t}\n\n\n\t\t// \t}\n\t\t// );\n\n\t\t// Watches the date input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceDateInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar newDate = moment(newValue.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(newDate + \"-\" + controller.serviceTimeInput, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\t// Watches the time input and updates serviceDate when a change is made\n\t\t$scope.$watch(function()\n\t\t\t{\n\t\t\t\treturn controller.serviceTimeInput;\n\t\t\t},\n\t\t\tfunction(newValue)\n\t\t\t{\n\t\t\t\tvar date = moment(controller.serviceDateInput.getTime()).format(\"MM-DD-YYYY\");\n\t\t\t\tvar finalVal = moment(date + \"-\" + newValue, 'MM-DD-YYYY-hh:mm A').toDate().getTime();\n\n\t\t\t\tcontroller.ticklerUpdate.serviceDate = finalVal;\n\t\t\t}\n\t\t);\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tif (confirm(\"You have unsaved changes, are you sure?\"))\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate = undefined;\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\tcontroller.updateTaskAssignedTo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = model;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = label;\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelTaskAssignedToUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.taskAssignedTo = null;\n\t\t\tcontroller.ticklerUpdate.taskAssignedToName = null;\n\n\t\t\tcontroller.showTaskAssignedToFormControl = false;\n\n\t\t};\n\n\t\tcontroller.editServiceDateAndTime = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.serviceDate = $filter('date')(controller.tickler.serviceDate, 'yyyy-MM-dd');\n\t\t\t// controller.ticklerUpdate.serviceTime = $filter('date')(controller.tickler.serviceDate, 'HH:mm');\n\n\t\t\tcontroller.showServiceDateAndTimeFormControl = true;\n\t\t};\n\n\n\t\tcontroller.updateServiceDateAndTime = function()\n\t\t{\n\t\t\tvar dp = controller.ticklerUpdate.serviceDate.split(\"-\");\n\t\t\tvar tp = controller.ticklerUpdate.serviceTime.split(\":\");\n\n\t\t\tif (dp.length != 3 || tp.length != 2)\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date(dp[0], parseInt(dp[1]) - 1, dp[2], tp[0], tp[1], 0, 0);\n\n\t\t\tif (d == null || isNaN(d.getTime()))\n\t\t\t{\n\t\t\t\talert('Invalid Date/time. Please use yyyy-MM-dd and HH:mm formats');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.tickler.serviceDate = d;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelServiceDateAndTimeUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.serviceDate = null;\n\t\t\tcontroller.showServiceDateAndTimeFormControl = false;\n\t\t};\n\n\t\tcontroller.editPriority = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.priority = controller.tickler.priority;\n\t\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t\tcontroller.showPriorityFormControl = true;\n\t\t};\n\n\t\tcontroller.updatePriority = function(newPriority)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\t// controller.ticklerUpdate.priority = newPriority; // Don't need this anymore?\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\n\t\tcontroller.cancelPriorityUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.priority = null;\n\t\t\tcontroller.showPriorityFormControl = false;\n\t\t};\n\n\t\tcontroller.editStatus = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.statusName = controller.tickler.statusName;\n\t\t\t// controller.ticklerUpdate.status = controller.tickler.statusName;\n\t\t\tcontroller.showStatusFormControl = true;\n\t\t};\n\n\t\tcontroller.updateStatus = function(selectedStatus)\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tcontroller.ticklerUpdate.status = selectedStatus.id;\n\t\t\tcontroller.ticklerUpdate.statusName = selectedStatus.label;\n\t\t\tcontroller.showStatusFormControl = false;\n\t\t};\n\n\t\tcontroller.cancelStatusUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.statusName = null;\n\t\t\tcontroller.ticklerUpdate.status = null;\n\n\t\t\tcontroller.showStatusFormControl = false;\n\n\t\t};\n\n\t\tcontroller.addComment = function()\n\t\t{\n\t\t\t// controller.ticklerUpdate.comment = '';\n\t\t\tcontroller.showCommentFormControl = true;\n\n\t\t};\n\n\t\tcontroller.saveComment = function()\n\t\t{\n\t\t\tcontroller.needsUpdate = true;\n\t\t\tif (controller.ticklerUpdate.ticklerComments == null)\n\t\t\t{\n\t\t\t\tcontroller.ticklerUpdate.ticklerComments = [];\n\t\t\t}\n\t\t\tvar comment = {\n\t\t\t\tmessage: controller.ticklerUpdate.comment,\n\t\t\t\tproviderName: me.formattedName,\n\t\t\t\tproviderNo: me.providerNo,\n\t\t\t\tupdateDate: new Date(),\n\t\t\t\tnewComment: true\n\t\t\t};\n\t\t\tcontroller.ticklerUpdate.ticklerComments.unshift(comment);\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t\tcontroller.showComments = true;\n\t\t};\n\n\t\tcontroller.cancelCommentUpdate = function()\n\t\t{\n\t\t\tcontroller.ticklerUpdate.comment = null;\n\t\t\tcontroller.showCommentFormControl = false;\n\t\t};\n\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.saveChanges = function()\n\t\t{\n\t\t\tif (tickler.message != controller.ticklerUpdate.message)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\t\t\t// if (tickler.serviceDate != controller.ticklerUpdate.serviceDate.getTime())\n\t\t\t// {\n\t\t\t// \tcontroller.needsUpdate = true;\n\t\t\t// }\n\n\t\t\tif (tickler.serviceDate != controller.ticklerUpdate.serviceDate)\n\t\t\t{\n\t\t\t\tcontroller.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (controller.needsUpdate)\n\t\t\t{\n\t\t\t\tvar postData = angular.copy(controller.ticklerUpdate);\n\t\t\t\t// if (Juno.Common.Util.exists(postData.serviceDate))\n\t\t\t\t// {\n\t\t\t\t// \t// postData.serviceDate = postData.serviceDate.getTime();\n\t\t\t\t// \tconsole.log('POST DATA: ', postData);\n\t\t\t\t// }\n\n\t\t\t\tconsole.log('Post DATA: ', postData);\n\n\t\t\t\tticklerService.update(postData).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t$uibModalInstance.close(true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(false);\n\t\t\t}\n\n\t\t};\n\n\n\t\tcontroller.completeTickler = function()\n\t\t{\n\t\t\tticklerService.setCompleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.deleteTickler = function()\n\t\t{\n\t\t\tticklerService.setDeleted([tickler.id]).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\t\t};\n\n\t\tcontroller.printTickler = function()\n\t\t{\n\t\t\twindow.open('../Tickler.do?method=print&id=' + tickler.id);\n\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerAddController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$filter',\n\t'$stateParams',\n\t'demographicService',\n\t'demographicsService',\n\t'providerService',\n\t'ticklerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$filter,\n\t\t$stateParams,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tproviderService,\n\t\tticklerService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t// holds the patient typeahead selection\n\t\tcontroller.demographicSearch = null;\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================\n\n\t\t// $scope.$watch('controller.demographicSearch',\n\n\t\t// \tfunction(new_value)\n\t\t// \t{\n\t\t// \t\tconsole.log('watching demographicSearch: ', new_value);\n\n\t\t// \t\tif (Juno.Common.Util.exists(new_value))\n\t\t// \t\t{\n\t\t// \t\t\tcontroller.updateDemographicNo(new_value);\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\t// no selection\n\t\t// \t\t\tcontroller.updateDemographicNo(null);\n\t\t// \t\t}\n\t\t// \t}, true);\n\n\t\tcontroller.tickler = {\n\t\t\ttemplate:\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\tserviceDateDate: new Date(),\n\t\t\tserviceDateTime: \"12:00 AM\",\n\t\t\tsuggestedTextId: 0\n\t\t};\n\n\t\tcontroller.priorities = ['Low', 'Normal', 'High'];\n\n\t\t// initialization\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif (Juno.Common.Util.exists($stateParams.demographicNo))\n\t\t\t{\n\t\t\t\tconsole.log('initializing demographicSearch pre-selected', $stateParams.demographicNo);\n\t\t\t\tdemographicService.getDemographic($stateParams.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.demographicSearch = {\n\t\t\t\t\t\tdemographicNo: data.demographicNo,\n\t\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\t\tname: data.lastName + \",\" + data.firstName // For display purposes\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.updateDemographicNo(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#timepicker').timepicker({defaultTime: controller.tickler.serviceDateTime});\n\t\t};\n\n\t\tticklerService.getTextSuggestions().then(function(data)\n\t\t{\n\t\t\tcontroller.textSuggestions = data.content;\n\t\t\tcontroller.textSuggestions.unshift(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tsuggestedText: ''\n\t\t\t});\n\t\t}, function(reason)\n\t\t{\n\t\t\talert(reason);\n\t\t});\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(false);\n\t\t};\n\n\t\tcontroller.validate = function()\n\t\t{\n\t\t\tvar t = controller.tickler;\n\t\t\tcontroller.errors = [];\n\n\t\t\tif (t.demographic == null)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must select a patient');\n\t\t\t}\n\t\t\tif (t.taskAssignedTo == null || t.taskAssignedTo.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('You must assign a provider');\n\t\t\t}\n\t\t\tif (t.message == null || t.message.length == 0)\n\t\t\t{\n\t\t\t\tcontroller.errors.push('Message is required');\n\t\t\t}\n\t\t\tif (controller.errors.length > 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tcontroller.showErrors = true;\n\t\t\tif (!controller.validate())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar t = {};\n\t\t\tt.demographicNo = controller.tickler.demographic.demographicNo;\n\t\t\tt.taskAssignedTo = controller.tickler.taskAssignedTo;\n\t\t\tt.priority = controller.tickler.priority;\n\t\t\tt.status = 'A';\n\t\t\tt.message = controller.tickler.message;\n\n\t\t\tvar givenDate = controller.tickler.serviceDateDate;\n\t\t\tvar givenTime = moment(controller.tickler.serviceDateTime, 'hh:mm A');\n\t\t\tgivenDate.setHours(givenTime.get('hour'));\n\t\t\tgivenDate.setMinutes(givenTime.get('minute'));\n\n\t\t\tt.serviceDate = givenDate;\n\t\t\tticklerService.add(t).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(true);\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\n\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(demo)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(demo))\n\t\t\t{\n\t\t\t\tdemographicService.getDemographic(demo.demographicNo).then(function(data)\n\t\t\t\t{\n\t\t\t\t\t// update the selected value on the tickler object\n\t\t\t\t\tcontroller.tickler.demographic = data;\n\t\t\t\t\tconsole.log('set controller.tickler.demographic: ', controller.tickler.demographic);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.tickler.demographic = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: demographicsService.SEARCH_MODE.Name,\n\t\t\t\tterm: term,\n\t\t\t\tstatus: demographicsService.STATUS_MODE.ACTIVE,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.data.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.data[x].demographicNo,\n\t\t\t\t\t\t\tname: results.data[x].lastName + ',' + results.data[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchProviders = function(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(function(response)\n\t\t\t{\n\t\t\t\tvar resp = [];\n\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t{\n\t\t\t\t\tresp.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn resp;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.updateProviderNo = function(item, model, label)\n\t\t{\n\t\t\tcontroller.tickler.taskAssignedTo = model;\n\t\t\tcontroller.tickler.taskAssignedToName = label;\n\t\t};\n\n\t\tcontroller.setSuggestedText = function()\n\t\t{\n\t\t\tvar results = $filter('filter')(controller.textSuggestions,\n\t\t\t{\n\t\t\t\tid: controller.tickler.suggestedTextId\n\t\t\t}, true);\n\n\t\t\tif (results != null)\n\t\t\t{\n\t\t\t\tcontroller.tickler.message = results[0].suggestedText;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.addMonthsFromNow = function(num)\n\t\t{\n\t\t\tcontroller.tickler.serviceDateDate = moment().add(num, 'months').toDate();\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerNoteController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'$http',\n\t'ticklerNote',\n\t'tickler',\n\t'noteService',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\t$http,\n\t\tticklerNote,\n\t\ttickler,\n\t\tnoteService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.ticklerNote = ticklerNote;\n\t\tcontroller.originalNote = ticklerNote.note;\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar updatedNote = controller.ticklerNote.note;\n\t\t\tcontroller.ticklerNote.tickler = controller.tickler;\n\n\t\t\tnoteService.saveTicklerNote(controller.ticklerNote).then(function(data)\n\t\t\t{\n\t\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t\t}, function(reason)\n\t\t\t{\n\t\t\t\talert(reason);\n\t\t\t});\n\t\t};\n\t}\n]);","angular.module('Tickler').controller('Tickler.TicklerCommentController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\t'tickler',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\ttickler)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.tickler = tickler;\n\n\t\tcontroller.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Schedule', ['Common', 'Common.Services', 'Common.Components', 'Patient']);","import {AppointmentApi} from '../../generated/api/AppointmentApi';\nimport {ScheduleApi} from '../../generated/api/ScheduleApi';\nimport {SitesApi} from '../../generated/api/SitesApi';\nimport {ProviderPreferenceApi} from '../../generated/api/ProviderPreferenceApi';\nimport {SystemPreferenceApi} from \"../../generated/api/SystemPreferenceApi\";\n\nangular.module('Schedule').controller('Schedule.ScheduleController', [\n\n\t'$scope',\n\t'$stateParams',\n\t'$q',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$uibModal',\n\t'$state',\n\t'loadedSettings',\n\t'providerService',\n\t'providersService',\n\t'formService',\n\t'focusService',\n\t'securityService',\n\t'scheduleService',\n\t'uiCalendarConfig',\n\t'errorsService',\n\t'globalStateService',\n\n\tfunction (\n\t\t$scope,\n\t\t$stateParams,\n\t\t$q,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$uibModal,\n\t\t$state,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tprovidersService,\n\t\tformService,\n\t\tfocusService,\n\t\tsecurityService,\n\t\tscheduleService,\n\t\tuiCalendarConfig,\n\t\tmessagesFactory,\n\t\tglobalStateService\n\t)\n\t{\n\t\tlet controller = this;\n\n\t\t// XXX: put this address somewhere else\n\t\t$scope.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t$scope.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t$scope.sitesApi = new SitesApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t$scope.providerPreferenceApi = new ProviderPreferenceApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\tcontroller.systemPreferencesApi = new SystemPreferenceApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\tcontroller.providerSettings = loadedSettings;\n\t\tcontroller.calendarMinColumnWidth = 250;\n\n\t\t//=========================================================================\n\t\t// Local scope variables\n\t\t//=========================================================================/\n\n\t\t$scope.calendarName = 'cpCalendar';\n\t\t$scope.initialized = false;\n\t\t$scope.calendarLoading = false;\n\t\t$scope.customLoading = false;\n\t\t$scope.displayMessages = messagesFactory.factory();\n\n\t\t$scope.uiConfig = {};\n\t\t$scope.uiConfigApplied = {\n\t\t\tcalendar: {}\n\t\t};\n\t\t$scope.eventSources = [];\n\n\t\t// cpCalendar control object.  The cpCalendar directive puts its control API methods in this object.\n\t\t$scope.cpCalendarControl = {};\n\n\t\t// Parameters from directive controller\n\t\t$scope.scheduleOptions = [];\n\t\t$scope.resourceOptionHash = {};\n\t\t$scope.selectedResources = false;\n\t\t$scope.showNoResources = false;\n\n\t\t$scope.timeIntervalOptions = [\n\t\t\t{\n\t\t\t\tlabel: '5 min intervals',\n\t\t\t\tvalue: '00:05:00'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '10 min intervals',\n\t\t\t\tvalue: '00:10:00'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '15 min intervals',\n\t\t\t\tvalue: '00:15:00'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '20 min intervals',\n\t\t\t\tvalue: '00:20:00'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '30 min intervals',\n\t\t\t\tvalue: '00:30:00'\n\t\t\t}];\n\t\t$scope.defaultTimeInterval = $scope.timeIntervalOptions[2].value;\n\t\t$scope.selectedTimeInterval = $scope.defaultTimeInterval;\n\t\t$scope.scheduleTimeInterval = null;\n\n\t\t$scope.selectedSlotLabelInterval = {hours: 1};\n\t\t$scope.availabilityTypes = {};\n\t\t$scope.events = [];\n\t\t$scope.scheduleTemplates = {};\n\t\t$scope.sites = {};\n\t\t$scope.siteOptions = [];\n\t\t$scope.sitesEnabled = false;\n\t\t$scope.selectedSiteName = null;\n\t\t$scope.telehealthEnabled = false;\n\n\t\t$scope.openingDialog = false;\n\t\t$scope.dialog = null;\n\n\t\t// Global State parameters\n\t\tcontroller.calendarViewEnum = Object.freeze({\n\t\t\tagendaDay: 'agendaDay',\n\t\t\tagendaWeek: 'agendaWeek',\n\t\t\tagendaMonth: 'month',\n\t\t});\n\t\t$scope.calendarViewDefault = controller.calendarViewEnum.agendaDay;\n\t\t$scope.calendarViewName = null;\n\n\t\tcontroller.scheduleViewEnum = Object.freeze({\n\t\t\tschedule: 'schedule',\n\t\t\tall: 'all',\n\t\t});\n\t\tcontroller.selectedScheduleView = controller.scheduleViewEnum.all;\n\t\tcontroller.scheduleTypeEnum = Object.freeze({\n\t\t\tgroup: 'GROUP',\n\t\t\tprovider: 'PROVIDER',\n\t\t});\n\t\t$scope.selectedSchedule = null;\n\n\t\tcontroller.refreshSettings = {\n\t\t\ttimerVariable: null,\n\t\t\tdefaultAutoRefreshMinutes: 3,\n\t\t\tpreferredAutoRefreshMinutes: null\n\t\t};\n\n\t\t$scope.defaultDate = globalStateService.global_settings.schedule.date_selected;\n\t\t$scope.datepickerSelectedDate = null;\n\n\t\tcontroller.formLinks = {\n\t\t\tenabled: true,\n\t\t\tmaxLength: 2,\n\t\t\tformNameMap: {},\n\t\t\teFormNameMap: {},\n\t\t\tquickLinkMap: {},\n\t\t};\n\n\t\t$scope.init = function init()\n\t\t{\n\t\t\t$scope.uiConfig.calendar.defaultView = $scope.getCalendarViewName();\n\n\t\t\t$scope.loadAvailabilityTypes().then(function ()\n\t\t\t{\n\t\t\t\tscheduleService.loadEventStatuses().then(function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.loadScheduleOptions().then(function ()\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loadResourceHash().then(function ()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.loadSiteOptions().then(function ()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.loadExtraLinkData().then(function ()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.loadTelehealthEnabled().then(function()\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$scope.loadDefaultSelections();\n\t\t\t\t\t\t\t\t\t\t$scope.setEventSources();\n\n\t\t\t\t\t\t\t\t\t\tcontroller.initEventsAutoRefresh();\n\n\t\t\t\t\t\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\n\t\t\t\t\t\t\t\t\t\tcontroller.loadWatches();\n\t\t\t\t\t\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Public Methods\n\t\t//=========================================================================/\n\n\t\t$scope.calendar = function calendar()\n\t\t{\n\t\t\treturn uiCalendarConfig.calendars[$scope.calendarName];\n\t\t};\n\n\t\t$scope.isSchedulingEnabled = function isSchedulingEnabled()\n\t\t{\n\t\t\treturn true;\n\t\t};\n\n\t\t$scope.isInitialized = function isInitialized()\n\t\t{\n\t\t\treturn $scope.initialized && Juno.Common.Util.exists($scope.calendar());\n\t\t};\n\n\t\t$scope.hasSites = function hasSites()\n\t\t{\n\t\t\treturn $scope.sitesEnabled;\n\t\t};\n\n\t\t$scope.getTimeIntervalOptions = function getTimeIntervalOptions()\n\t\t{\n\t\t\treturn $scope.timeIntervalOptions;\n\t\t};\n\n\t\t$scope.getScheduleOptions = function getScheduleOptions()\n\t\t{\n\t\t\treturn $scope.scheduleOptions;\n\t\t};\n\n\t\t$scope.getSiteOptions = function getSiteOptions()\n\t\t{\n\t\t\treturn $scope.siteOptions;\n\t\t};\n\n\t\t$scope.getCalendarViewName = function calendarViewName()\n\t\t{\n\t\t\tvar viewName = $scope.calendarViewName;\n\n\t\t\tif (!Juno.Common.Util.exists(viewName))\n\t\t\t{\n\t\t\t\tviewName = globalStateService.global_settings.schedule.view_selected;\n\t\t\t\tif (!Juno.Common.Util.exists(viewName))\n\t\t\t\t{\n\t\t\t\t\tviewName = $scope.calendarViewDefault;\n\t\t\t\t}\n\t\t\t\treturn viewName;\n\t\t\t}\n\n\t\t\treturn viewName;\n\t\t};\n\n\t\t$scope.calendarEvents = function calendarEvents(start, end, timezone, callback)\n\t\t{\n\t\t\t$scope.loadScheduleEvents($scope.selectedSchedule, $scope.selectedSiteName, start, end).then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcallback($scope.events);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err)\n\t\t\t\t\t{\n\t\t\t\t\t\t// the callback throws an error on first load, ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.showTimeIntervals = function showTimeIntervals()\n\t\t{\n\t\t\treturn $scope.getCalendarViewName() !== controller.calendarViewEnum.agendaMonth;\n\t\t};\n\n\t\tcontroller.changeToSchedule = function (resourceId, view)\n\t\t{\n\t\t\t$scope.selectedSchedule = null;\n\t\t\tvar scheduleOptions = $scope.getScheduleOptions();\n\n\t\t\tfor (var i = 0; i < scheduleOptions.length; i++)\n\t\t\t{\n\t\t\t\tif (scheduleOptions[i].uuid === resourceId)\n\t\t\t\t{\n\t\t\t\t\t$scope.selectedSchedule = scheduleOptions[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set the selected schedule to an object not in the options list.\n\t\t\t// this will show as an empty option when selected, but will be removed once de-selected.\n\t\t\t// this allows selection of inactive providers schedules\n\t\t\tif($scope.selectedSchedule === null)\n\t\t\t{\n\t\t\t\tvar scheduleData = $scope.resourceOptionHash[resourceId];\n\n\t\t\t\tscheduleData.label = scheduleData.title;\n\t\t\t\tscheduleData.uuid = scheduleData.id;\n\t\t\t\tscheduleData.value = scheduleData.id;\n\t\t\t\tscheduleData.identifier = scheduleData.id;\n\t\t\t\tscheduleData.identifierType = controller.scheduleTypeEnum.provider;\n\t\t\t\tscheduleData.providerNos = [resourceId];\n\n\t\t\t\t$scope.selectedSchedule = scheduleData;\n\t\t\t}\n\n\t\t\t$scope.calendarViewName = view;\n\t\t\t$scope.onScheduleChanged();\n\t\t};\n\n\t\t/* changes the calender view\n\t\tview must be one of agendaDay, agendaWeek, agendaMonth enum values*/\n\t\t$scope.changeCalendarView = function changeCalendarView(view)\n\t\t{\n\t\t\tif ($scope.calendarViewName !== view)\n\t\t\t{\n\t\t\t\t// save the new view to global state so it gets picked up in rendering\n\t\t\t\t$scope.calendarViewName = view;\n\t\t\t\tglobalStateService.global_settings.schedule.view_selected = $scope.calendarViewName;\n\n\t\t\t\t$scope.calendar().fullCalendar('changeView', $scope.getCalendarViewName());\n\t\t\t}\n\t\t};\n\n\t\t/* chances the schedule view type\n\t\t* must be one of the all or schedule enum values*/\n\t\tcontroller.changeScheduleView = function (view)\n\t\t{\n\t\t\tif (controller.selectedScheduleView !== view)\n\t\t\t{\n\t\t\t\t$scope.providerPreferenceApi.updateProviderSetting(securityService.getUser().providerNo, \"schedule.view\", view)\n\t\t\t\t\t.then(\n\t\t\t\t\t\tfunction success()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.selectedScheduleView = view;\n\t\t\t\t\t\t\t$scope.refetchEvents();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction failure()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to update provider setting\");\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$scope.stepBack = function stepBack()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('prev');\n\t\t};\n\t\t$scope.stepForward = function stepForward()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('next');\n\t\t};\n\n\t\t$scope.refetchEvents = function refetchEvents()\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('refetchEvents');\n\t\t};\n\n\t\t$scope.$on('schedule:refreshEvents', function (event, data)\n\t\t{\n\t\t\t$scope.refetchEvents();\n\t\t});\n\n\t\t$scope.changeDate = function changeDate(date)\n\t\t{\n\t\t\tglobalStateService.global_settings.schedule.date_selected = date;\n\t\t\t$scope.uiConfig.calendar.defaultDate = date;\n\t\t\t$scope.calendar().fullCalendar('gotoDate', date);\n\t\t};\n\n\t\t$scope.isAgendaView = function isAgendaView()\n\t\t{\n\t\t\treturn ($scope.uiConfigApplied.calendar.resources === null || $scope.uiConfigApplied.calendar.resources === false)\n\t\t};\n\t\t$scope.isResourceView = function isResourceView()\n\t\t{\n\t\t\treturn ($scope.uiConfigApplied.calendar.resources !== null && $scope.uiConfigApplied.calendar.resources !== false)\n\t\t};\n\t\t$scope.isScheduleView = function ()\n\t\t{\n\t\t\treturn (controller.selectedScheduleView === controller.scheduleViewEnum.schedule);\n\t\t};\n\t\t$scope.isAgendaDayView = function()\n\t\t{\n\t\t\treturn ( $scope.isAgendaView() && $scope.getCalendarViewName() === controller.calendarViewEnum.agendaDay)\n\t\t};\n\t\t$scope.isAgendaWeekView = function()\n\t\t{\n\t\t\treturn ( $scope.isAgendaView() && $scope.getCalendarViewName() === controller.calendarViewEnum.agendaWeek)\n\t\t};\n\t\t$scope.isAgendaMonthView = function()\n\t\t{\n\t\t\treturn ( $scope.isAgendaView() && $scope.getCalendarViewName() === controller.calendarViewEnum.agendaMonth)\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Private methods\n\t\t//=========================================================================/\n\n\t\t$scope.getSelectedSchedule = function getSelectedSchedule(scheduleOptions)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default (first in the list)\n\t\t\tif ($scope.selectedSchedule !== null)\n\t\t\t{\n\t\t\t\treturn $scope.selectedSchedule;\n\t\t\t}\n\n\t\t\tvar selectedUuid = controller.providerSettings.groupNo;\n\t\t\tif (Juno.Common.Util.exists(selectedUuid))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor (var i = 0; i < scheduleOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (selectedUuid === scheduleOptions[i].uuid)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheduleOptions[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (scheduleOptions.length > 0)\n\t\t\t{\n\t\t\t\t// select the first schedule in the list by default\n\t\t\t\treturn scheduleOptions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.getSelectedScheduleView = function ()\n\t\t{\n\t\t\tvar preference = controller.providerSettings.viewSelected;\n\t\t\tif (Juno.Common.Util.exists(preference) && (preference === controller.scheduleViewEnum.schedule))\n\t\t\t{\n\t\t\t\treturn controller.scheduleViewEnum.schedule;\n\t\t\t}\n\t\t\treturn controller.scheduleViewEnum.all;\n\t\t};\n\n\t\tcontroller.getSelectedSite = function ()\n\t\t{\n\t\t\tvar preference = controller.providerSettings.siteSelected;\n\t\t\tif (Juno.Common.Util.exists(preference))\n\t\t\t{\n\t\t\t\treturn preference;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tcontroller.hasPatientSelected = function hasPatientSelected(calEvent)\n\t\t{\n\t\t\treturn Juno.Common.Util.exists(calEvent.data.demographicNo)\n\t\t\t\t&& Number(calEvent.data.demographicNo) > 0;\n\t\t};\n\n\t\t$scope.setCalendarLoading = function setCalendarLoading(isLoading)\n\t\t{\n\t\t\t$scope.calendarLoading = isLoading;\n\t\t};\n\t\t$scope.setCustomLoading = function setCustomLoading(isLoading)\n\t\t{\n\t\t\t$scope.customLoading = isLoading;\n\t\t};\n\n\t\t$scope.setEventSources = function setEventSources()\n\t\t{\n\t\t\t$scope.eventSources.push($scope.calendarEvents);\n\t\t};\n\n\t\t$scope.updateEvent = function updateEvent(calEvent)\n\t\t{\n\t\t\t$scope.calendar().fullCalendar('updateEvent', calEvent);\n\t\t};\n\n\t\t$scope.timeIntervalMinutes = function timeIntervalMinutes()\n\t\t{\n\t\t\treturn parseInt($scope.selectedTimeInterval.split(\":\")[1]);\n\t\t};\n\n\t\t$scope.getSelectedTimeInterval = function getSelectedTimeInterval(\n\t\t\ttimeIntervalOptions, defaultTimeInterval)\n\t\t{\n\t\t\t// priority: last used from global state, then preference setting,\n\t\t\t// then default\n\n\t\t\tvar selectedTimeInterval = null;\n\n\t\t\tvar timeInterval = $scope.scheduleTimeInterval;\n\t\t\tif (timeInterval === null)\n\t\t\t{\n\t\t\t\tvar preference = controller.providerSettings.period;\n\t\t\t\tif (Juno.Common.Util.exists(preference) && Juno.Common.Util.isIntegerString(preference))\n\t\t\t\t{\n\t\t\t\t\ttimeInterval = \"00:\" + Juno.Common.Util.pad0(preference) + \":00\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Juno.Common.Util.exists(timeInterval))\n\t\t\t{\n\t\t\t\t// only choose it if it can be found in the options list\n\t\t\t\tfor (var i = 0; i < timeIntervalOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (timeInterval === timeIntervalOptions[i].value)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedTimeInterval = timeIntervalOptions[i].value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectedTimeInterval === null)\n\t\t\t{\n\t\t\t\treturn defaultTimeInterval;\n\t\t\t}\n\n\t\t\treturn selectedTimeInterval;\n\t\t};\n\n\t\t$scope.getScheduleMinTime = function getScheduleMinTime()\n\t\t{\n\t\t\tvar timeStr = \"08:00\";\n\t\t\tvar preference = controller.providerSettings.startHour;\n\t\t\tif (Juno.Common.Util.exists(preference) && Juno.Common.Util.isIntegerString(preference)\n\t\t\t\t&& Number(preference) > 0 && Number(preference) < 24)\n\t\t\t{\n\t\t\t\ttimeStr = Juno.Common.Util.pad0(preference) + \":00\";\n\t\t\t}\n\t\t\treturn timeStr;\n\t\t};\n\n\t\t$scope.getScheduleMaxTime = function getScheduleMaxTime()\n\t\t{\n\t\t\tvar timeStr = \"20:00\";\n\t\t\tvar preference = controller.providerSettings.endHour;\n\t\t\tif (Juno.Common.Util.exists(preference) && Juno.Common.Util.isIntegerString(preference)\n\t\t\t\t&& Number(preference) > 0 && Number(preference) < 24)\n\t\t\t{\n\t\t\t\ttimeStr = Juno.Common.Util.pad0(preference) + \":00\";\n\t\t\t}\n\t\t\treturn timeStr;\n\t\t};\n\n\t\t$scope.loadScheduleEvents = function loadScheduleEvents(selectedSchedule, siteName, start, end)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.setCustomLoading(true);\n\t\t\tif($scope.isAgendaWeekView())\n\t\t\t{\n\t\t\t\t// full calendar likes to ask for a subset of the week days when hidden days are set,\n\t\t\t\t// but we need to always ask for the whole week here so that we know what days to hide\n\t\t\t\tend = angular.copy(start).endOf('week');\n\t\t\t\tstart = angular.copy(start).startOf('week');\n\t\t\t}\n\n\t\t\t// Get date strings to pass to the backend.  The calendar provides datetime that describe\n\t\t\t// and inclusive start time and exclusive end time, so one second is removed from\n\t\t\t// the end time to convert to the correct date.\n\t\t\tvar startDateString = start.format(Juno.Common.Util.settings.date_format);\n\t\t\tvar endDateString = end.subtract(1, 'seconds').format(Juno.Common.Util.settings.date_format);\n\n\t\t\t$scope.scheduleApi.getCalendarSchedule(\n\t\t\t\tselectedSchedule.identifier,\n\t\t\t\tselectedSchedule.identifierType,\n\t\t\t\t$scope.isScheduleView(),\n\t\t\t\tstartDateString,\n\t\t\t\tendDateString,\n\t\t\t\t$scope.getScheduleMinTime(),\n\t\t\t\t$scope.getScheduleMaxTime(),\n\t\t\t\tsiteName,\n\t\t\t\t$scope.timeIntervalMinutes()\n\t\t\t).then(\n\t\t\t\tfunction (results)\n\t\t\t\t{\n\t\t\t\t\t// console.info('================== load events ===================');\n\t\t\t\t\tvar hasVisibleSchedules = results.data.body.visibleSchedules;\n\t\t\t\t\t$scope.showNoResources = !hasVisibleSchedules;\n\t\t\t\t\t$scope.uiConfig.calendar.hiddenDays = [];\n\n\t\t\t\t\tif (selectedSchedule.identifierType === controller.scheduleTypeEnum.group)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar providerNos = results.data.body.providerIdList;\n\n\t\t\t\t\t\t// Set the calendar to resource mode.  All of these values need to be set.\n\t\t\t\t\t\t$scope.selectedResources = controller.buildSelectedResources(providerNos);\n\t\t\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\n\t\t\t\t\t\t// always show day view in resource mode\n\t\t\t\t\t\t$scope.uiConfig.calendar.defaultView = controller.calendarViewEnum.agendaDay;\n\t\t\t\t\t\t$scope.calendarViewName = controller.calendarViewEnum.agendaDay;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Reset everything to single-provider view mode\n\t\t\t\t\t\t$scope.uiConfig.calendar.defaultView = $scope.getCalendarViewName();\n\t\t\t\t\t\t$scope.calendarViewName = $scope.getCalendarViewName();\n\t\t\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\n\t\t\t\t\t\tvar hiddenDays = results.data.body.hiddenDaysList;\n\t\t\t\t\t\t// only hide days in week/month views. limiting day view causes re-fetch errors when changing to week view\n\t\t\t\t\t\t// hiding all days causes an error in fullCalendar, rely on the no schedules screen to hide it\n\t\t\t\t\t\tif (hiddenDays.length !== 7 && ($scope.isAgendaWeekView() || $scope.isAgendaMonthView()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.uiConfig.calendar.hiddenDays = hiddenDays; // hide days without schedules\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t\t\t$scope.events = results.data.body.eventList;\n\n\t\t\t\t\t$scope.setCustomLoading(false);\n\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t},\n\t\t\t\tfunction failure(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load events\");\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// TODO: change this, perhaps?  It is getting the resource details from the groups\n\t\tcontroller.buildSelectedResources = function buildSelectedResources(providerNos)\n\t\t{\n\t\t\tvar selectedResources = [];\n\n\t\t\tfor (var i = 0; i < providerNos.length; i++)\n\t\t\t{\n\t\t\t\tvar resourceOption = $scope.resourceOptionHash[providerNos[i]];\n\t\t\t\tif (resourceOption)\n\t\t\t\t{\n\t\t\t\t\tselectedResources.push(resourceOption);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.warn('Attempt to load invalid resource id: ' + providerNos[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn selectedResources;\n\t\t};\n\t\t$scope.setCalendarResources = function setCalendarResources(resourceView)\n\t\t{\n\t\t\tif (resourceView)\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = $scope.selectedResources;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.uiConfig.calendar.resources = false;\n\t\t\t}\n\n\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t};\n\n\t\t$scope.saveEvent = function saveEvent(editMode, calendarAppointment, repeatOnDateList)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tif (editMode)\n\t\t\t{\n\t\t\t\tthis.appointmentApi.updateAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure(result)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to update appointment\");\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (repeatOnDateList && repeatOnDateList.length > 0)\n\t\t\t{\n\t\t\t\tvar calendarAppointmentRepeating = {\n\t\t\t\t\tappointment: calendarAppointment,\n\t\t\t\t\tdateList: repeatOnDateList,\n\t\t\t\t};\n\n\t\t\t\t$scope.appointmentApi.addRepeatingAppointment(calendarAppointmentRepeating).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure(result)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to add reoccurring appointment\");\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.appointmentApi.addAppointment(calendarAppointment).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve(result.data);\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure(result)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to add appointment\");\n\t\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.moveEvent = function moveEvent(appointment, delta, adjustStartTime)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.startTime);\n\t\t\tvar endMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(appointment.endTime);\n\n\t\t\tvar movedAppointment = angular.copy(appointment);\n\n\t\t\tif (adjustStartTime)\n\t\t\t{\n\t\t\t\tmovedAppointment.startTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(startMoment.add(delta.asMinutes(), 'minutes'));\n\t\t\t}\n\t\t\tmovedAppointment.endTime = Juno.Common.Util.formatMomentDateTimeNoTimezone(endMoment.add(delta.asMinutes(), 'minutes'));\n\n\t\t\t$scope.saveEvent(true, movedAppointment).then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(data.body);\n\t\t\t\t},\n\t\t\t\tfunction failure(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject(data.body);\n\t\t\t\t}\n\t\t\t);\n\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tcontroller.moveEventSuccess = function (eventData, calEvent)\n\t\t{\n\t\t\tvar startMoment = moment(eventData.startTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\t\t\tvar endMoment = moment(eventData.endTime, \"YYYY-MM-DDTHH:mm:ss.SSS+ZZZZ\", false);\n\n\t\t\tcalEvent.start = Juno.Common.Util.formatMomentTime(\n\t\t\t\tstartMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\t\t\tcalEvent.end = Juno.Common.Util.formatMomentTime(\n\t\t\t\tendMoment, Juno.Common.Util.settings.datetime_no_timezone_format);\n\n\t\t\tcalEvent.data.startTime = calEvent.start;\n\t\t\tcalEvent.data.endTime = calEvent.end;\n\n\t\t\tcalEvent.data.providerNo = eventData.providerNo;\n\t\t\tcalEvent.resourceId = eventData.providerNo;\n\n\t\t\t/* update the event in the main list of events.\n\t\t\tthis gets passed to the modal and used for date collision checking*/\n\t\t\tfor (var i = 0; i < $scope.events.length; i++)\n\t\t\t{\n\t\t\t\tif ($scope.events[i].rendering !== \"background\" && $scope.events[i].data.appointmentNo === calEvent.data.appointmentNo)\n\t\t\t\t{\n\t\t\t\t\t$scope.events[i] = angular.copy(calEvent);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Read the implementation-specific results and return a calendar-compatible object.\n\t\t$scope.processSaveResults = function processSaveResults(results, displayErrors)\n\t\t{\n\t\t\tvar status = (results || {}).status;\n\n\t\t\tif (status === 'SUCCESS')\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar errorMessage = ((results || {}).error || {}).message;\n\t\t\tvar validationErrorArray = ((results || {}).error || {}).validationErrors;\n\n\t\t\tif (Array.isArray(validationErrorArray))\n\t\t\t{\n\t\t\t\tdisplayErrors.add_standard_error(errorMessage);\n\t\t\t\t//for(var error in validationErrorArray)\n\t\t\t\tfor (var i = 0; i < validationErrorArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar error = validationErrorArray[i];\n\t\t\t\t\tdisplayErrors.add_field_error(error.path, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$scope.deleteEvent = function deleteEvent(appointmentNo)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.appointmentApi.deleteAppointment(appointmentNo).then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(result.data);\n\n\t\t\t\t},\n\t\t\t\tfunction failure(result)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to delete appointment\");\n\t\t\t\t\tdeferred.reject(result.data);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.openCreateInvoice = function openCreateInvoice(\n\t\t\tevent_uuid, schedule_uuid, demographics_patient_uuid)\n\t\t{\n\t\t\tvar schedule =\n\t\t\t\t$scope.get_loaded_schedule(schedule_uuid);\n\n\t\t\tvar url = $scope.calendar_api_adapter.get_create_invoice_url(event_uuid,\n\t\t\t\tschedule.demographics_practitioner_uuid, demographics_patient_uuid);\n\n\t\t\twindow.window_scope = $scope;\n\t\t\t$window.open(url, '_blank');\n\t\t};\n\n\t\t$scope.rotateEventStatus = function rotateEventStatus(calEvent)\n\t\t{\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointmentNo = calEvent.data.appointmentNo;\n\n\t\t\t$scope.appointmentApi.setNextStatus(appointmentNo).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar newStatus = response.data.body;\n\n\t\t\t\t\tcalEvent.color = scheduleService.getStatusByCode(newStatus).color;\n\t\t\t\t\tcalEvent.data.eventStatusCode = newStatus;\n\n\t\t\t\t\t$scope.updateEvent(calEvent);\n\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t},\n\t\t\t\tfunction failure()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to update status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Event Handlers\n\t\t//=========================================================================/\n\n\t\tcontroller.buildEventLink = function buildEventLink($rootElem, map, className)\n\t\t{\n\t\t\tfor(var id in map)\n\t\t\t{\n\t\t\t\tvar displayName = map[id] || \"NA\";\n\t\t\t\tvar shortName = Juno.Common.Util.trimToLength(displayName, controller.formLinks.maxLength);\n\n\t\t\t\t$rootElem.append($(\"<div>\", {\n\t\t\t\t\tclass: \"event-item event-blk-label event-form-link\",\n\t\t\t\t}).append($(\"<a>\", {\n\t\t\t\t\tclass: \"event-label \" + className,\n\t\t\t\t\ttext: shortName,\n\t\t\t\t\ttitle: displayName,\n\t\t\t\t\t'data-id': id\n\t\t\t\t})));\n\t\t\t}\n\t\t};\n\n\t\t$scope.onEventRender = function onEventRender(event, element, view)\n\t\t{\n\t\t\t// appointment event type\n\t\t\tif (event.rendering !== 'background')\n\t\t\t{\n\t\t\t\tlet eventElement = element.find('.fc-content');\n\t\t\t\teventElement.html(require('./view-event.html'));\n\n\t\t\t\tlet statusElem = eventElement.find('.icon-status');\n\t\t\t\tlet labelElem = eventElement.find('.event-label');\n\t\t\t\tlet detailElem = eventElement.find('.event-details');\n\t\t\t\tlet selfBookElem = eventElement.find('.self-book-indicator');\n\t\t\t\tlet telehealthElem = eventElement.find('.event-telehealth');\n\t\t\t\t// By default this element is hidden\n\t\t\t\ttelehealthElem.hide();\n\t\t\t\t// var eventSite = $scope.sites[event.data.site];\n\n\t\t\t\t/* set up status icon + color/hover etc. */\n\t\t\t\tlet eventStatus = scheduleService.eventStatuses[event.data.eventStatusCode];\n\t\t\t\tif (Juno.Common.Util.exists(eventStatus))\n\t\t\t\t{\n\t\t\t\t\tstatusElem.attr(\"title\", eventStatus.name);\n\n\t\t\t\t\tif (Juno.Common.Util.exists(eventStatus.icon))\n\t\t\t\t\t{\n\t\t\t\t\t\t// class matches the icon name without the extension\n\t\t\t\t\t\tstatusElem.addClass(\"icon-\" + eventStatus.icon.substr(0, eventStatus.icon.indexOf('.')));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstatusElem.text(eventStatus.displayLetter);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Juno.Common.Util.exists(eventStatus.sortOrder))\n\t\t\t\t\t{\n\t\t\t\t\t\tstatusElem.addClass(\"rotate\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstatusElem.attr(\"title\", \"Unknown\").text(\"?\");\n\t\t\t\t}\n\n\t\t\t\t/* set up event display text (name, reason, notes, etc.)*/\n\t\t\t\tlet eventName = \"\";\n\t\t\t\tlet eventReason = \"\";\n\t\t\t\tlet eventNotes = \"\";\n\n\t\t\t\t// Only show telehealth icon if it's both on for the instance and the appointment has the virtual flag\n\t\t\t\tif (controller.telehealthEnabled && event.data.virtual)\n\t\t\t\t{\n\t\t\t\t\ttelehealthElem.show();\n\t\t\t\t}\n\n\t\t\t\tif (event.data.doNotBook)\n\t\t\t\t{\n\t\t\t\t\teventName = \"Do Not Book\";\n\t\t\t\t}\n\t\t\t\telse if (!Juno.Common.Util.isBlank(event.data.demographicName))\n\t\t\t\t{\n\t\t\t\t\teventName = event.data.demographicName;\n\t\t\t\t}\n\t\t\t\telse if (!Juno.Common.Util.isBlank(event.data.appointmentName))\n\t\t\t\t{\n\t\t\t\t\teventName = event.data.appointmentName;\n\t\t\t\t}\n\n\t\t\t\tif (!Juno.Common.Util.isBlank(event.data.reason))\n\t\t\t\t{\n\t\t\t\t\teventReason = event.data.reason;\n\t\t\t\t}\n\t\t\t\tif (!Juno.Common.Util.isBlank(event.data.notes))\n\t\t\t\t{\n\t\t\t\t\teventNotes = event.data.notes;\n\t\t\t\t}\n\n\t\t\t\tvar detailText = \"\";\n\t\t\t\tif (!Juno.Common.Util.isBlank(eventReason))\n\t\t\t\t{\n\t\t\t\t\tdetailText += \"(\" + eventReason + \")\";\n\t\t\t\t}\n\n\t\t\t\tlet eventTitle = eventName + \"\\n\" +\n\t\t\t\t\t\"Reason: \" + eventReason + \"\\n\" +\n\t\t\t\t\t\"Notes: \" + eventNotes;\n\t\t\t\teventElement.attr(\"title\", eventTitle);\n\n\t\t\t\t//disable demographic specific links if there is no attached demographic;\n\t\t\t\tif (!controller.hasPatientSelected(event))\n\t\t\t\t{\n\t\t\t\t\tvar linkElements = eventElement.find('.event-encounter, .event-invoice, .event-demographic, .event-rx');\n\t\t\t\t\tlinkElements.hide();\n\t\t\t\t}\n\n\t\t\t\t// mark self booked appointments\n\t\t\t\tif(Juno.Common.Util.exists(event.data.tagSelfBooked) && event.data.tagSelfBooked)\n\t\t\t\t{\n\t\t\t\t\tselfBookElem.addClass('visible');\n\t\t\t\t\tselfBookElem.attr(\"title\", \"Self Booked\");\n\t\t\t\t\tdetailElem.parent().addClass('show-self-booked');\n\t\t\t\t}\n\n\t\t\t\tvar maxNameLengthProp = controller.providerSettings.patientNameLength;\n\t\t\t\tif (Juno.Common.Util.exists(maxNameLengthProp)\n\t\t\t\t\t&& Juno.Common.Util.isIntegerString(maxNameLengthProp)\n\t\t\t\t\t&& Number(maxNameLengthProp) > 0)\n\t\t\t\t{\n\t\t\t\t\teventName = Juno.Common.Util.trimToLength(eventName, Number(maxNameLengthProp));\n\t\t\t\t}\n\n\t\t\t\tlabelElem.text(eventName);\n\t\t\t\tdetailElem.append(detailText);\n\n\t\t\t\t/* generate html links for forms/eForms based off the provider settings */\n\t\t\t\tif(controller.formLinks.enabled && controller.hasPatientSelected(event))\n\t\t\t\t{\n\t\t\t\t\tlet formContainerElem = eventElement.find('.inline-flex');\n\t\t\t\t\t/* generate form links */\n\t\t\t\t\tcontroller.buildEventLink(formContainerElem, controller.formLinks.formNameMap, \"onclick-open-form\");\n\t\t\t\t\t/* generate eForm links */\n\t\t\t\t\tcontroller.buildEventLink(formContainerElem, controller.formLinks.eFormNameMap, \"onclick-open-eform\");\n\t\t\t\t\t/* generate quick links */\n\t\t\t\t\tcontroller.buildEventLink(formContainerElem, controller.formLinks.quickLinkMap, \"onclick-open-quicklink\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse //background events (appointment slots)\n\t\t\t{\n\t\t\t\telement.html(require('./view-backgroundEvent.html'));\n\t\t\t\tvar scheduleCodeElement = element.find(\".background-event-schedulecode\");\n\n\t\t\t\tif (Juno.Common.Util.exists(event.color))\n\t\t\t\t{\n\t\t\t\t\tscheduleCodeElement.css(\"background-color\", event.color)\n\t\t\t\t}\n\n\t\t\t\tvar availabilityType = event.availabilityType;\n\t\t\t\tif(Juno.Common.Util.exists(availabilityType))\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(availabilityType.systemCode))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(availabilityType.systemCodeVisible)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscheduleCodeElement.text(availabilityType.systemCode);\n\t\t\t\t\t\t\t// scheduleCodeElement.addClass(\"code-visible\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Juno.Common.Util.exists(availabilityType.name))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscheduleCodeElement.attr(\"title\", availabilityType.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Juno.Common.Util.exists(event.start) && event.start.minute() === 0) // on the hour\n\t\t\t\t{\n\t\t\t\t\telement.find(\".background-event-schedulecode,.background-event-body\").addClass(\"hour-marker\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.onViewRender = function onViewRender(view, element)\n\t\t{\n\t\t\tif ($scope.isInitialized())\n\t\t\t{\n\t\t\t\t$scope.datepickerSelectedDate = Juno.Common.Util.formatMomentDate(moment($scope.calendar().fullCalendar('getDate')));\n\t\t\t}\n\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$(\"#ca-calendar\").css('min-width', $('.fc-resource-cell,.fc-day-header').length * controller.calendarMinColumnWidth);\n\t\t\telement.addClass('calendar-background');\n\t\t};\n\n\t\t$scope.onResourceRender = function onResourceRender(resourceObj, labelTds, bodyTds)\n\t\t{\n\t\t\tlabelTds.html(require('./view-columnControl.html'));\n\n\t\t\tlabelTds.find(\".hdr-label\").text(resourceObj.display_name);\n\n\t\t\t// append data to the root element so it can be accessed by click events\n\t\t\tlabelTds.find(\".column-ctl-root\").attr(\"data-resourceId\", resourceObj.id);\n\t\t\tlabelTds.on('click', $scope.onHeaderClick);\n\t\t};\n\n\t\t$scope.afterRender = function afterRender()\n\t\t{\n\t\t\t// Voodoo to set the resource view column width from https://stackoverflow.com/a/39297864\n\t\t\t$('.fc-agendaDay-button').click(function ()\n\t\t\t{\n\t\t\t\t$(\"#schedule_container\").css('min-width', $('.fc-resource-cell,.fc-day-header').length * controller.calendarMinColumnWidth);\n\t\t\t});\n\t\t};\n\n\t\t$scope.onHeaderClick = function onHeaderClick(jsEvent)\n\t\t{\n\t\t\tvar resourceId = jsEvent.currentTarget.dataset.resourceId;\n\t\t\tif ($(jsEvent.target).is(\".onclick-daysheet\"))\n\t\t\t{\n\t\t\t\tcontroller.openDaysheet(resourceId);\n\t\t\t}\n\t\t\telse if ($(jsEvent.target).is(\".onclick-search\"))\n\t\t\t{\n\t\t\t\tconsole.info(\"onclick-search clicked\");\n\t\t\t\tcontroller.openScheduleSearchDialog(resourceId);\n\t\t\t}\n\t\t\telse if ($(jsEvent.target).is(\".onclick-day-view\"))\n\t\t\t{\n\t\t\t\tconsole.info(\"onclick-day-view clicked\");\n\t\t\t\tcontroller.changeToSchedule(resourceId, controller.calendarViewEnum.agendaDay);\n\t\t\t}\n\t\t\telse if ($(jsEvent.target).is(\".onclick-week-view\"))\n\t\t\t{\n\t\t\t\tconsole.info(\"onclick-week-view clicked\");\n\t\t\t\tcontroller.changeToSchedule(resourceId, controller.calendarViewEnum.agendaWeek);\n\t\t\t}\n\t\t\telse if ($(jsEvent.target).is(\".onclick-month-view\"))\n\t\t\t{\n\t\t\t\tconsole.info(\"onclick-month-view clicked\");\n\t\t\t\tcontroller.changeToSchedule(resourceId, controller.calendarViewEnum.agendaMonth);\n\t\t\t}\n\t\t};\n\n\t\t$scope.onEventClick = function onEventClick(calEvent, jsEvent, view)\n\t\t{\n\t\t\tvar $target = $(jsEvent.target);\n\t\t\tif ($target.is(\".onclick-event-status:not(.disabled)\"))\n\t\t\t{\n\t\t\t\t$scope.rotateEventStatus(calEvent);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-event-encounter:not(.disabled)\"))\n\t\t\t{\n\t\t\t\tcontroller.openEncounterPage(calEvent);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-event-invoice:not(.disabled)\"))\n\t\t\t{\n\t\t\t\tcontroller.openBillingPage(calEvent);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-event-demographic:not(.disabled)\"))\n\t\t\t{\n\t\t\t\tcontroller.openMasterRecord(calEvent);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-event-rx:not(.disabled)\"))\n\t\t\t{\n\t\t\t\tcontroller.openRxPage(calEvent);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-open-form\"))\n\t\t\t{\n\t\t\t\tcontroller.openFormLink($target.attr('data-id'), calEvent.data.demographicNo, calEvent.data.appointmentNo);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-open-eform\"))\n\t\t\t{\n\t\t\t\tformService.openEFormInstancePopup(calEvent.data.demographicNo, $target.attr('data-id'));\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-open-quicklink\"))\n\t\t\t{\n\t\t\t\tcontroller.openQuickLink($target.attr('data-id'), calEvent.data.demographicNo, calEvent.data.appointmentNo);\n\t\t\t}\n\t\t\telse if ($target.is(\".onclick-event-telehealth\"))\n\t\t\t{\n\t\t\t\tcontroller.openTelehealthLink(calEvent);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope.openEditEventDialog(calEvent);\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openEncounterPage = function openEncounterPage(calEvent)\n\t\t{\n\t\t\tif (loadedSettings.hideOldEchartLinkInAppointment)\n\t\t\t{\n\t\t\t\tif (calEvent.data.demographicNo !== 0)\n\t\t\t\t{\n\t\t\t\t\tlet params = {\n\t\t\t\t\t\tdemographicNo: calEvent.data.demographicNo,\n\t\t\t\t\t\tappointmentNo: calEvent.data.appointmentNo,\n\t\t\t\t\t\tencType: \"face to face encounter with client\",\n\t\t\t\t\t};\n\t\t\t\t\t$state.go('record.summary', params);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (calEvent.data.demographicNo !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\t\t\t\t\tvar params = {\n\t\t\t\t\t\tproviderNo: calEvent.resourceId,\n\t\t\t\t\t\tcurProviderNo: calEvent.data.userProviderNo,\n\t\t\t\t\t\tdemographicNo: calEvent.data.demographicNo,\n\t\t\t\t\t\tuserName: calEvent.data.userFirstName + \" \" + calEvent.data.userLastName,\n\t\t\t\t\t\treason: calEvent.data.reason,\n\t\t\t\t\t\tcurDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\t\t\t\tproviderview: calEvent.resourceId,\n\n\t\t\t\t\t\tappointmentNo: calEvent.data.appointmentNo,\n\t\t\t\t\t\tappointmentDate: Juno.Common.Util.formatMomentDate(startMoment),\n\t\t\t\t\t\tstartTime: Juno.Common.Util.formatMomentTime(startMoment),\n\t\t\t\t\t\tstatus: calEvent.data.eventStatusCode,\n\t\t\t\t\t\tapptProvider_no: calEvent.resourceId,\n\t\t\t\t\t\tencType: \"face to face encounter with client\",\n\t\t\t\t\t};\n\t\t\t\t\twindow.open(scheduleService.getEncounterLink(params), 'popupWindow',\n\t\t\t\t\t\t\t'height=800,width=1000,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,directories=no');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcontroller.openBillingPage = function openBillingPage(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo !== 0)\n\t\t\t{\n\t\t\t\tvar startMoment = Juno.Common.Util.getDatetimeNoTimezoneMoment(calEvent.data.startTime);\n\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographic_no: calEvent.data.demographicNo,\n\t\t\t\t\tdemographic_name: calEvent.data.demographicName,\n\t\t\t\t\tproviderNo: calEvent.resourceId,\n\t\t\t\t\tproviderview: calEvent.resourceId,\n\t\t\t\t\tuser_no: calEvent.data.userProviderNo,\n\n\t\t\t\t\tbillRegion: calEvent.data.billingRegion,\n\t\t\t\t\tbillForm: calEvent.data.billingForm,\n\t\t\t\t\thotclick: \"\",\n\t\t\t\t\tbNewForm: 1,\n\n\t\t\t\t\tapptProvider_no: calEvent.resourceId,\n\t\t\t\t\tappointment_no: calEvent.data.appointmentNo,\n\t\t\t\t\tappointmentDate: Juno.Common.Util.formatMomentDate(startMoment),\n\t\t\t\t\tstatus: calEvent.data.eventStatusCode,\n\t\t\t\t\tstart_time: Juno.Common.Util.formatMomentTime(startMoment),\n\n\t\t\t\t\treferral_no_1: calEvent.data.billingRdohip,\n\t\t\t\t};\n\t\t\t\twindow.open(scheduleService.getBillingLink(params));\n\t\t\t}\n\t\t};\n\t\tcontroller.openMasterRecord = function openMasterRecord(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo !== 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: calEvent.data.demographicNo\n\t\t\t\t};\n\t\t\t\t$state.go('record.details', params);\n\t\t\t}\n\t\t};\n\t\tcontroller.openRxPage = function openRxPage(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo !== 0)\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: calEvent.data.demographicNo,\n\t\t\t\t\tproviderNo: calEvent.resourceId,\n\t\t\t\t};\n\t\t\t\twindow.open(scheduleService.getRxLink(params));\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openTelehealthLink = function openTelehealthLink(calEvent)\n\t\t{\n\t\t\tif (calEvent.data.demographicNo !== 0 && calEvent.data.virtual)\n\t\t\t{\n\t\t\t\twindow.open(\"../integrations/myhealthaccess.do?method=connect\"\n\t\t\t\t\t+ \"&demographicNo=\" + encodeURIComponent(calEvent.data.demographicNo)\n\t\t\t\t\t+ \"&siteName=\" + encodeURIComponent(calEvent.data.site)\n\t\t\t\t\t+ \"&appt=\" + encodeURIComponent(calEvent.data.appointmentNo), \"_blank\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openDaysheet = function openDaysheet(resourceId)\n\t\t{\n\t\t\tvar formattedDate = $scope.datepickerSelectedDate;\n\t\t\tvar win = window.open('../report/reportdaysheet.jsp' +\n\t\t\t\t'?dsmode=all' +\n\t\t\t\t'&provider_no=' + encodeURIComponent(resourceId) +\n\t\t\t\t'&sdate=' + encodeURIComponent(formattedDate) +\n\t\t\t\t'&edate=' + encodeURIComponent(formattedDate),\n\t\t\t\t'daysheet', 'height=700,width=1024,scrollbars=1');\n\t\t\twin.focus();\n\t\t};\n\n\t\tcontroller.openFormLink = function openFormLink(formName, demographicNo, appointmentNo)\n\t\t{\n\t\t\tvar url = \"../form/forwardshortcutname.jsp\" +\n\t\t\t\t\"?formname=\" + encodeURIComponent(formName) +\n\t\t\t\t\"&demographic_no=\"+ encodeURIComponent(demographicNo) +\n\t\t\t\t\"&appointmentNo=\"+ encodeURIComponent(appointmentNo);\n\n\t\t\tif(formName === \"__intakeForm\")\n\t\t\t{\n\t\t\t\turl = \"../provider/formIntake.jsp?demographic_no=\" + encodeURIComponent(demographicNo);\n\t\t\t}\n\n\t\t\tvar win = window.open(url,\n\t\t\t\t\"Form_\"+ encodeURIComponent(demographicNo) +\"_\" + encodeURIComponent(formName),\n\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\twin.focus();\n\t\t};\n\t\tcontroller.openEFormLink = function openEFormLink(eFormId, demographicNo, appointmentNo)\n\t\t{\n\t\t\tvar url = \"../eform/efmformadd_data.jsp\" +\n\t\t\t\t\"?fid=\" + encodeURIComponent(eFormId) +\n\t\t\t\t\"&demographic_no=\"+ encodeURIComponent(demographicNo) +\n\t\t\t\t\"&appointment=\" + encodeURIComponent(appointmentNo);\n\t\t\tvar win = window.open(url,\n\t\t\t\t\"Eform_\"+ encodeURIComponent(demographicNo) +\"_\" + encodeURIComponent(eFormId),\n\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\twin.focus();\n\t\t};\n\t\tcontroller.openQuickLink = function openQuickLink(url, demographicNo, appointmentNo)\n\t\t{\n\t\t\tif(!url.startsWith(\"http://\") || !url.startsWith(\"https://\"))\n\t\t\t{\n\t\t\t\turl = \"https://\" + url;\n\t\t\t}\n\t\t\tvar win = window.open(url,\n\t\t\t\t\"quickLink_\"+ url,\n\t\t\t\t'height=700,width=1024,scrollbars=1');\n\t\t\twin.focus();\n\t\t};\n\n\t\t// Make a list of the types of appointments available for this moment\n\t\t$scope.getActiveTemplateEvents = function getActiveTemplateEvents(momentStart, eventList, scheduleId)\n\t\t{\n\t\t\t// Get templates that happen during the time period\n\t\t\tvar activeEvents = [];\n\n\t\t\t// Loop through the events for this day\n\t\t\tfor(var i = 0; i < eventList.length; i++)\n\t\t\t{\n\t\t\t\t// filter events that should not be checked (non-background, wrong schedule, etc.)\n\t\t\t\tif(eventList[i].rendering !== \"background\" || eventList[i].resourceId !== scheduleId)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar event = angular.copy(eventList[i]);\n\n\t\t\t\t// if start time is between event start and end\n\t\t\t\tevent.start = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.start);\n\t\t\t\tevent.end = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.end);\n\n\t\t\t\tif(momentStart.isValid() && event.start.isValid() && event.end.isValid() &&\n\t\t\t\t\tmomentStart.isBefore(event.end) && momentStart.isSameOrAfter(event.start))\n\t\t\t\t{\n\t\t\t\t\t//TODO refactor availability type lists\n\t\t\t\t\tvar extendedAvailabilityType = $scope.availabilityTypes[event.scheduleTemplateCode];\n\t\t\t\t\tif(Juno.Common.Util.exists(extendedAvailabilityType))\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.availabilityType = extendedAvailabilityType;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.availabilityType.duration = event.availabilityType.preferredEventLengthMinutes;\n\t\t\t\t\t}\n\t\t\t\t\tactiveEvents.push(event);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn activeEvents;\n\t\t};\n\n\t\t$scope.openCreateEventDialog = function openCreateEventDialog(start, end, jsEvent, view, resource)\n\t\t{\n\t\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar scheduleUuid = null;\n\t\t\tif (Juno.Common.Util.exists(resource))\n\t\t\t{\n\t\t\t\tscheduleUuid = resource.id;\n\t\t\t}\n\t\t\telse if ($scope.selectedSchedule !== null)\n\t\t\t{\n\t\t\t\tscheduleUuid = $scope.selectedSchedule.uuid;\n\t\t\t}\n\n\t\t\tvar activeTemplateList = $scope.getActiveTemplateEvents(start, $scope.events, Number(scheduleUuid));\n\t\t\tvar templateEvent = activeTemplateList[0];\n\n\t\t\tvar duration = $scope.timeIntervalMinutes();\n\t\t\tif(Juno.Common.Util.exists(templateEvent) && Juno.Common.Util.exists(templateEvent.availabilityType))\n\t\t\t{\n\t\t\t\tstart = templateEvent.start;\n\n\t\t\t\tvar templateDuration = templateEvent.availabilityType.duration;\n\t\t\t\tif(Juno.Common.Util.exists(templateDuration)\n\t\t\t\t\t&& Juno.Common.Util.isIntegerString(templateDuration))\n\t\t\t\t{\n\t\t\t\t\tduration = templateDuration;\n\t\t\t\t}\n\t\t\t}\n\t\t\tend = angular.copy(start).add(duration, 'minutes');\n\n\t\t\tcontroller.openAppointmentDialog(false, scheduleUuid, start, end, {});\n\t\t};\n\n\t\t$scope.openEditEventDialog = function openEditEventDialog(calEvent)\n\t\t{\n\t\t\tif (!securityService.hasPermission('scheduling_edit'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.openAppointmentDialog(true, calEvent.resourceId, calEvent.start, calEvent.end, calEvent.data);\n\t\t};\n\n\t\tcontroller.openAppointmentDialog = function openAppointmentDialog(isEditMode, scheduleUuid, start, end, calEventData)\n\t\t{\n\t\t\t// if already opening a dialog or have one open, ignore and return\n\t\t\tif ($scope.openingDialog || $scope.dialog)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.openingDialog = true;\n\n\t\t\tvar data = {\n\t\t\t\tscheduleId: scheduleUuid,\n\t\t\t\tstartTime: start,\n\t\t\t\tendTime: end,\n\t\t\t\tdefaultEventStatus: 't',\n\t\t\t\ttimeInterval: $scope.timeIntervalMinutes(),\n\t\t\t\tsites: $scope.sites,\n\t\t\t\tevents: $scope.events,\n\t\t\t\teventData: calEventData\n\t\t\t};\n\n\t\t\t$scope.dialog = $uibModal.open({\n\t\t\t\tanimation: false,\n\t\t\t\tbackdrop: 'static',\n\t\t\t\tcomponent: \"eventComponent\",\n\t\t\t\twindowClass: \"juno-modal\",\n\t\t\t\tresolve: {\n\t\t\t\t\tparentScope: [function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $scope;\n\t\t\t\t\t}],\n\t\t\t\t\tdata: [function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}],\n\t\t\t\t\tloadedSettings: [function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn loadedSettings;\n\t\t\t\t\t}],\n\t\t\t\t\teditMode: [function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn isEditMode;\n\t\t\t\t\t}],\n\t\t\t\t\tkeyBinding: [function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tbindKeyGlobal: function ()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\tfocus: [function ()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn focusService;\n\t\t\t\t\t}],\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t$scope.dialog.result.then(\n\t\t\t\tfunction onClose(data)\n\t\t\t\t{\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t},\n\t\t\t\tfunction onDismiss(data)\n\t\t\t\t{\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t}\n\t\t\t);\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\tcontroller.openScheduleSearchDialog = function openScheduleSearchDialog(resourceId)\n\t\t{\n\t\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.openingDialog = true;\n\n\t\t\t$scope.dialog = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tcomponent: 'scheduleSearch',\n\t\t\t\t\twindowClass: \"juno-modal\",\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\tproviderId: function ()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resourceId;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscheduleStartTime: function ()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn $scope.getScheduleMinTime();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscheduleEndTime: function ()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn $scope.getScheduleMaxTime();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\t$scope.dialog.result.then(\n\t\t\t\tfunction onClose(data)\n\t\t\t\t{\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t\tcontroller.openAppointmentDialog(false, data.resourceId, data.start, data.end, {});\n\t\t\t\t},\n\t\t\t\tfunction onDismiss(data)\n\t\t\t\t{\n\t\t\t\t\t$scope.dialog = null;\n\t\t\t\t});\n\n\t\t\t$scope.openingDialog = false;\n\t\t};\n\n\t\t$scope.onEventDrop = function onEventDrop(\n\t\t\tcalEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was dragged and dropped on the calendar:\n\t\t\t// load then update the start and end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId;\n\n\t\t\t$scope.moveEvent(appointment, delta, true).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tcontroller.moveEventSuccess(eventData, calEvent);\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to save event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.onEventResize = function onEventResize(calEvent, delta, revertFunc, jsEvent, ui, view)\n\t\t{\n\t\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t\t{\n\t\t\t\trevertFunc();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// event was extended by dragging the end of the event on the calendar:\n\t\t\t// load then update the end time based on the delta\n\t\t\t$scope.setCalendarLoading(true);\n\n\t\t\tvar appointment = angular.copy(calEvent.data);\n\t\t\tappointment.providerNo = calEvent.resourceId;\n\n\t\t\t$scope.moveEvent(appointment, delta, false).then(\n\t\t\t\tfunction success(eventData)\n\t\t\t\t{\n\t\t\t\t\tcontroller.moveEventSuccess(eventData, calEvent);\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('failed to resize event', errors);\n\n\t\t\t\t\t// revert on fail\n\t\t\t\t\trevertFunc();\n\t\t\t\t\t$scope.setCalendarLoading(false);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t$scope.onSiteChanged = function onSiteChanged()\n\t\t{\n\t\t\tvar selectedSiteName = $scope.selectedSiteName;\n\t\t\tif (!Juno.Common.Util.exists(selectedSiteName))\n\t\t\t{\n\t\t\t\t$scope.selectedSiteName = null;\n\t\t\t}\n\n\t\t\t$scope.providerPreferenceApi.updateProviderSetting(securityService.getUser().providerNo, \"schedule.site\", $scope.selectedSiteName)\n\t\t\t\t.then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.providerSettings.siteSelected = $scope.selectedSiteName;\n\t\t\t\t\t\t$scope.refetchEvents();\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to update provider setting\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t};\n\n\t\t$scope.onScheduleChanged = function onScheduleChanged()\n\t\t{\n\t\t\tvar selectedSchedule = $scope.selectedSchedule;\n\n\t\t\tif (!Juno.Common.Util.exists(selectedSchedule))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$scope.providerPreferenceApi.updateProviderSetting(securityService.getUser().providerNo, \"myGroupNo\", selectedSchedule.identifier)\n\t\t\t\t.then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.providerSettings.groupNo = selectedSchedule.identifier;\n\n\t\t\t\t\t\tvar isGroupSchedule = (selectedSchedule.identifierType === controller.scheduleTypeEnum.group);\n\t\t\t\t\t\tif (isGroupSchedule)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.uiConfig.calendar.defaultView = controller.calendarViewEnum.agendaDay;\n\t\t\t\t\t\t\t$scope.setCalendarResources(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.calendarViewName = $scope.getCalendarViewName();\n\t\t\t\t\t\t\t$scope.uiConfig.calendar.defaultView = $scope.getCalendarViewName();\n\t\t\t\t\t\t\t$scope.setCalendarResources(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.refetchEvents();\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to update provider setting\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t};\n\n\t\t$scope.onTimeIntervalChanged = function onTimeIntervalChanged()\n\t\t{\n\t\t\t$scope.scheduleTimeInterval = $scope.selectedTimeInterval;\n\t\t\tvar intervalInMin = $scope.scheduleTimeInterval.split(':')[1];\n\n\t\t\t$scope.providerPreferenceApi.updateProviderSetting(securityService.getUser().providerNo, \"everyMin\", intervalInMin)\n\t\t\t\t.then(\n\t\t\t\t\tfunction success()\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.providerSettings.period = Number(intervalInMin);\n\n\t\t\t\t\t\t// updating the config will automatically trigger an events refresh\n\t\t\t\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedSlotLabelInterval;\n\n\t\t\t\t\t\t// ensure the selected date doesn't change on events refresh\n\t\t\t\t\t\t$scope.uiConfig.calendar.defaultDate = $scope.calendar().fullCalendar('getDate');\n\t\t\t\t\t\t$scope.applyUiConfig($scope.uiConfig);\n\t\t\t\t\t},\n\t\t\t\t\tfunction failure()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to update provider setting\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Init methods pulled from the directive controller\n\t\t//=========================================================================/\n\n\t\t// Loads the schedule dropdown options from the API.  Sets the following:\n\t\t// $scope.schedule_options - the array used to build the schedule selection dropdown.\n\t\t$scope.loadScheduleOptions = function loadScheduleOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.scheduleApi.getScheduleGroups().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar scheduleData = results[i];\n\n\t\t\t\t\t\tresults[i].uuid = results[i].identifier;\n\n\t\t\t\t\t\tresults[i].label = results[i].name;\n\t\t\t\t\t\tresults[i].value = results[i].identifier;\n\n\t\t\t\t\t\t$scope.scheduleOptions.push(scheduleData);\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t},\n\t\t\t\tfunction failure(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load schedule groups\");\n\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// $scope.resourceOptionHash - table to look up schedule information by providerNo.  This is\n\t\t//                             used to create the resource view headers.\n\t\tcontroller.loadResourceHash = function loadResourceHash()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tprovidersService.getAll().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar providerNo = Number(results[i].providerNo);\n\t\t\t\t\t\t$scope.resourceOptionHash[providerNo] = {\n\t\t\t\t\t\t\t'id': providerNo,\n\t\t\t\t\t\t\t'title': results[i].name,\n\t\t\t\t\t\t\t'display_name': results[i].name\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve($scope.resourceOptionHash);\n\t\t\t\t},\n\t\t\t\tfunction failure()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load resource hash\");\n\t\t\t\t\tdeferred.reject($scope.resourceOptionHash);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t// Load the list of available sites from the API.  Sets the following:\n\t\t// $scope.sites - a table to lookup a site's info by name\n\t\t// $scope.site_options - the options for the site selection dropdown\n\t\t$scope.loadSiteOptions = function loadSiteOptions()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tcontroller.loadSitesEnabled().then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif ($scope.sitesEnabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.loadSites().then(\n\t\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$scope.sites = {};\n\t\t\t\t\t\t\t\t$scope.siteOptions = [];\n\t\t\t\t\t\t\t\tif (angular.isArray(results) && results.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Fill up lookup table\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$scope.sites[results[i].name] = results[i];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Create the dropdown options\n\t\t\t\t\t\t\t\t\t$scope.siteOptions = [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tuuid: null,\n\t\t\t\t\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"All Sites\",\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\t\t\t$scope.siteOptions = $scope.siteOptions.concat(results);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.loadTelehealthEnabled = function loadTelehealthEnabled()\n\t\t{\n\t\t\tlet deferred = $q.defer();\n\t\t\tcontroller.systemPreferencesApi.getPropertyEnabled(\"myhealthaccess_telehealth_enabled\").then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar enabled = rawResults.data.body;\n\t\t\t\t\tcontroller.telehealthEnabled = enabled;\n\t\t\t\t\tdeferred.resolve(enabled);\n\t\t\t\t},\n\t\t\t\tfunction failure(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load telehealth enabled\");\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.loadSitesEnabled = function loadSitesEnabled()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.sitesApi.getSitesEnabled().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar enabled = rawResults.data.body;\n\t\t\t\t\t$scope.sitesEnabled = enabled;\n\t\t\t\t\tdeferred.resolve(enabled);\n\t\t\t\t},\n\t\t\t\tfunction failure(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load sites enabled\");\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\t\t$scope.loadSites = function loadSites()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t$scope.sitesApi.getSiteList().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\tvar out = [];\n\t\t\t\t\tif (angular.isArray(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tuuid: results[i].siteId,\n\t\t\t\t\t\t\t\tvalue: results[i].name,\n\t\t\t\t\t\t\t\tlabel: results[i].name,\n\t\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.resolve(out);\n\t\t\t\t},\n\t\t\t\tfunction failure(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load sites\");\n\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\n\t\t$scope.loadAvailabilityTypes = function loadAvailabilityTypes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar availabilityTypes = {};\n\n\t\t\t$scope.scheduleApi.getScheduleTemplateCodes().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar result = results[i];\n\n\t\t\t\t\t\tavailabilityTypes[result.code] = angular.copy(result);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.availabilityTypes = availabilityTypes;\n\t\t\t\t\tdeferred.resolve(availabilityTypes);\n\t\t\t\t},\n\t\t\t\tfunction failure(results)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load availablity types\");\n\t\t\t\t\tdeferred.reject(results.data.body);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.loadExtraLinkData = function loadExtraLinkData()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tif(controller.formLinks.enabled)\n\t\t\t{\n\t\t\t\tvar lengthProp = controller.providerSettings.appointmentScreenLinkNameDisplayLength;\n\t\t\t\tif (Juno.Common.Util.exists(lengthProp)\n\t\t\t\t\t&& Juno.Common.Util.isNumber(lengthProp)\n\t\t\t\t\t&& lengthProp > 0)\n\t\t\t\t{\n\t\t\t\t\tcontroller.formLinks.maxLength = lengthProp;\n\t\t\t\t}\n\n\t\t\t\tvar eFormIds = controller.providerSettings.appointmentScreenEforms;\n\t\t\t\tif(Juno.Common.Util.exists(eFormIds) && eFormIds.length > 0)\n\t\t\t\t{\n\t\t\t\t\tformService.getAllEForms().then(\n\t\t\t\t\t\tfunction success(eFormList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < eFormList.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar id = eFormList[i].id;\n\t\t\t\t\t\t\t\tif(eFormIds.includes(id))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar name = eFormList[i].formName;\n\t\t\t\t\t\t\t\t\tcontroller.formLinks.eFormNameMap[id] = name;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction failure()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load eform data\");\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\n\t\t\t\tvar formIds = controller.providerSettings.appointmentScreenForms;\n\t\t\t\tif(Juno.Common.Util.exists(formIds))\n\t\t\t\t{\n\t\t\t\t\tfor(var i=0; i< formIds.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar formId = formIds[i];\n\t\t\t\t\t\tcontroller.formLinks.formNameMap[formId] = formId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar enableIntakeForm = controller.providerSettings.intakeFormEnabled;\n\t\t\t\tif(Juno.Common.Util.exists(enableIntakeForm) && enableIntakeForm)\n\t\t\t\t{\n\t\t\t\t\tcontroller.formLinks.formNameMap['__intakeForm'] = \"Intake Form\";\n\t\t\t\t}\n\n\t\t\t\tvar quickLinkIds = controller.providerSettings.appointmentScreenQuickLinks;\n\t\t\t\tif(Juno.Common.Util.exists(quickLinkIds))\n\t\t\t\t{\n\t\t\t\t\tfor(var i=0; i< quickLinkIds.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar linkName = quickLinkIds[i].name;\n\t\t\t\t\t\tvar linkUrl = quickLinkIds[i].url;\n\t\t\t\t\t\tcontroller.formLinks.quickLinkMap[linkUrl] = linkName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tcontroller.loadEformData = function loadEFormData(eFormId)\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\teFormService.loadEForm(eFormId).then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve(data);\n\t\t\t\t},\n\t\t\t\tfunction failure(data)\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_standard_error(\"Failed to load eform \" + eFormId);\n\t\t\t\t\tdeferred.reject(data);\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.loadDefaultSelections = function loadDefaultSelections()\n\t\t{\n\t\t\t$scope.selectedSchedule = $scope.getSelectedSchedule($scope.scheduleOptions);\n\t\t\t$scope.selectedSiteName = controller.getSelectedSite();\n\t\t\tcontroller.selectedScheduleView = controller.getSelectedScheduleView();\n\n\t\t\t$scope.selectedTimeInterval = $scope.getSelectedTimeInterval(\n\t\t\t\t$scope.timeIntervalOptions, $scope.defaultTimeInterval);\n\t\t\t$scope.uiConfig.calendar.slotDuration = $scope.selectedTimeInterval;\n\t\t\t$scope.uiConfig.calendar.slotLabelInterval = $scope.selectedSlotLabelInterval;\n\n\t\t\t$scope.uiConfig.calendar.minTime = $scope.getScheduleMinTime();\n\t\t\t$scope.uiConfig.calendar.maxTime = $scope.getScheduleMaxTime();\n\n\t\t\t// scroll so that one hour ago is the top of the calendar\n\t\t\t$scope.uiConfig.calendar.scrollTime = moment().subtract(1, 'hours').format('HH:mm:ss');\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Watches\n\t\t//=========================================================================/\n\n\t\tcontroller.loadWatches = function loadWatches()\n\t\t{\n\t\t\t$scope.$watch('datepickerSelectedDate', function (newValue, oldValue)\n\t\t\t{\n\t\t\t\tif (newValue !== oldValue)\n\t\t\t\t{\n\t\t\t\t\tvar momentDate = Juno.Common.Util.getDateMoment(newValue);\n\t\t\t\t\t$scope.changeDate(momentDate);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.$watch('selectedSiteName', function (newValue, oldValue)\n\t\t\t{\n\t\t\t\tif (newValue !== oldValue)\n\t\t\t\t{\n\t\t\t\t\t$scope.onSiteChanged();\n\t\t\t\t}\n\t\t\t});\n\t\t\t$scope.$watch('selectedTimeInterval', function (newValue, oldValue)\n\t\t\t{\n\t\t\t\tif (newValue !== oldValue)\n\t\t\t\t{\n\t\t\t\t\t$scope.onTimeIntervalChanged();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\n\t\t//=========================================================================\n\t\t// Config Array\n\t\t//=========================================================================/\n\n\t\t$scope.applyUiConfig = function applyUiConfig(uiConfig)\n\t\t{\n\t\t\t$scope.uiConfigApplied = angular.copy(uiConfig);\n\t\t};\n\n\t\tcontroller.initEventsAutoRefresh = function initEventsAutoRefresh()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\n\t\t\t// if there is already a refresh set up, stop it\n\t\t\tvar refresh = controller.refreshSettings.timerVariable;\n\t\t\tif (refresh !== null)\n\t\t\t{\n\t\t\t\tclearInterval(refresh);\n\t\t\t}\n\n\t\t\t// get the refresh interval from preferences, or use default\n\t\t\tvar minutes = controller.refreshSettings.preferredAutoRefreshMinutes;\n\t\t\tif (!Juno.Common.Util.exists(minutes) || !Juno.Common.Util.isIntegerString(minutes))\n\t\t\t{\n\t\t\t\tminutes = controller.refreshSettings.defaultAutoRefreshMinutes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tminutes = parseInt(minutes);\n\t\t\t}\n\n\t\t\tif (minutes > 0)\n\t\t\t{\n\t\t\t\t// start the auto refresh and save its ID to global state\n\t\t\t\tcontroller.refreshSettings.timerVariable = setInterval($scope.refetchEvents, minutes * 60 * 1000);\n\t\t\t}\n\t\t\tdeferred.resolve();\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t$scope.$on(\"$destroy\", function ()\n\t\t{\n\t\t\t// clean up refresh timer.\n\t\t\tif (controller.refreshSettings.timerVariable)\n\t\t\t{\n\t\t\t\tclearInterval(controller.refreshSettings.timerVariable);\n\t\t\t}\n\t\t});\n\n\t\t// Any changes to this array need to be applied by calling applyUiConfig()\n\t\t$scope.uiConfig = {\n\t\t\tcalendar: {\n\t\t\t\theight: 'parent',\n\t\t\t\tnowIndicator: true,\n\t\t\t\theader: false,\n\t\t\t\tcolumnHeader: true,\n\t\t\t\tviews: {\n\t\t\t\t\tday: {\n\t\t\t\t\t\tcolumnHeaderFormat: 'dddd MMMM Do'\n\t\t\t\t\t},\n\t\t\t\t\tweek: {\n\t\t\t\t\t\tcolumnHeaderFormat: 'dddd MMM Do'\n\t\t\t\t\t},\n\t\t\t\t\tmonth: {\n\t\t\t\t\t\tcolumnHeaderFormat: 'dddd'\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thiddenDays: [],\n\n\t\t\t\tallDaySlot: false,\n\t\t\t\tagendaEventMinHeight: 18,\n\n\t\t\t\tdefaultView: null,\n\t\t\t\tdefaultDate: $scope.defaultDate,\n\t\t\t\tslotDuration: $scope.selectedTimeInterval,\n\t\t\t\tsnapDuration: '00:05:00',\n\t\t\t\tslotLabelInterval: $scope.selectedSlotLabelInterval,\n\t\t\t\tslotLabelFormat: 'h A',\n\t\t\t\tslotEventOverlap: false,\n\t\t\t\tlazyFetching: false, //for dev use\n\n\t\t\t\tresources: false, // contains the resource hash properties for each schedule in group view\n\t\t\t\tresourceOrder: 'id', // display order for multiple schedules, relies on a resource hash property\n\n\t\t\t\tloading: $scope.setCalendarLoading,\n\n\t\t\t\tselectable: true,\n\t\t\t\tselect: $scope.openCreateEventDialog,\n\t\t\t\teventClick: $scope.onEventClick,\n\t\t\t\teventRender: $scope.onEventRender,\n\t\t\t\tviewRender: $scope.onViewRender,\n\t\t\t\tresourceRender: $scope.onResourceRender,\n\t\t\t\tnavLinkDayClick: $scope.onHeaderClick,\n\t\t\t\tnavLinkWeekClick: $scope.onHeaderClick,\n\t\t\t\teventAfterAllRender: $scope.afterRender,\n\n\t\t\t\teditable: true,\n\t\t\t\teventDrop: $scope.onEventDrop,\n\t\t\t\teventResize: $scope.onEventResize,\n\t\t\t\tschedulerLicenseKey: \"GPL-My-Project-Is-Open-Source\",\n\t\t\t}\n\t\t};\n\n\t\t$scope.init();\n\t}\n]);","module.exports = \"<div class=\\\"schedule-event event-color\\\">\\n\\t<div class=\\\"event-block\\\">\\n\\t\\t<div class=\\\"inline-flex\\\">\\n\\n\\t\\t\\t<button class=\\\"event-item btn btn-icon  event-status\\\">\\n\\t\\t\\t\\t<i class=\\\"icon icon-status onclick-event-status\\\"></i>\\n\\t\\t\\t</button>\\n\\n\\t\\t\\t<button class=\\\"event-item btn btn-icon event-status event-telehealth onclick-event-telehealth\\\">\\n\\t\\t\\t\\t<i class=\\\"icon icon-video-2 onclick-event-telehealth\\\"></i>\\n\\t\\t\\t</button>\\n\\n\\t\\t\\t<button class=\\\"event-item btn btn-event-link event-encounter onclick-event-encounter\\\">\\n\\t\\t\\t\\tE\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"event-item btn btn-event-link event-invoice onclick-event-invoice\\\">\\n\\t\\t\\t\\tB\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"event-item btn btn-event-link event-demographic onclick-event-demographic\\\">\\n\\t\\t\\t\\tM\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"event-item btn btn-event-link event-rx onclick-event-rx\\\">\\n\\t\\t\\t\\tRx\\n\\t\\t\\t</button>\\n\\t\\t\\t<div class=\\\"event-item event-blk-label\\\">\\n\\t\\t\\t\\t<span class=\\\"event-label bold\\\"></span>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<span class=\\\"event-details\\\"></span>\\n\\n\\t\\t<div class=\\\"event-item self-book-indicator\\\"></div>\\n\\t</div>\\n</div>\";","module.exports = \"<div class=\\\"schedule-background-event\\\">\\n\\t<span class=\\\"background-event-schedulecode\\\">\\n\\t</span>\\n\\t<div class=\\\"background-event-body\\\">\\n\\t</div>\\n</div>\";","module.exports = \"<div class=\\\"column-ctl-root flex-column\\\">\\n\\t<div class=\\\"column-ctl flex-grow flex-row\\\">\\n\\t\\t<div class=\\\"column-ctl btn-icon\\\"\\n\\t\\t\\t title=\\\"Daysheet\\\">\\n\\t\\t\\t<i class=\\\"icon icon-day-sheet onclick-daysheet\\\"></i>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"column-ctl btn-icon\\\"\\n\\t\\t     title=\\\"Search\\\">\\n\\t\\t\\t<i class=\\\"icon icon-calendar-search onclick-search\\\"></i>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"column-ctl flex-grow\\\">\\n\\t\\t\\t<a class=\\\"hdr-label onclick-day-view\\\"></a>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"column-ctl btn-icon\\\"\\n\\t\\t     title=\\\"Week View\\\">\\n\\t\\t\\t<i class=\\\"icon icon-calendar-week onclick-week-view\\\"></i>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"column-ctl btn-icon\\\"\\n\\t\\t     title=\\\"Month View\\\">\\n\\t\\t\\t<i class=\\\"icon icon-calendar onclick-month-view\\\"></i>\\n\\t\\t</div>\\n\\t</div>\\n</div>\";","'use strict';\n\n\n//=========================================================================\n// Calendar Event Controller\n//=========================================================================/\n\nimport {ScheduleApi} from \"../../generated/api/ScheduleApi\";\nimport {AppointmentApi} from \"../../generated/api/AppointmentApi\";\nimport {SitesApi} from \"../../generated\";\n\nangular.module('Schedule').component('eventComponent', {\n\ttemplateUrl: \"src/schedule/event.jsp\",\n\tbindings: {\n\t\tmodalInstance: \"<\", // modalInstance is the parent $uibModalInstance\n\t\tresolve: \"<\",\n\t},\n\tcontrollerAs: \"eventController\",\n\tcontroller: [\n\t\t'$scope',\n\t\t'$q',\n\t\t'$http',\n\t\t'$httpParamSerializer',\n\t\t'$timeout',\n\t\t'$state',\n\t\t'$uibModal',\n\t\t'errorsService',\n\t\t'demographicService',\n\t\t'providerService',\n\t\t'securityService',\n\t\t'scheduleService',\n\n\t\tfunction (\n\t\t\t$scope,\n\t\t\t$q,\n\t\t\t$http,\n\t\t\t$httpParamSerializer,\n\t\t\t$timeout,\n\t\t\t$state,\n\t\t\t$uibModal,\n\t\t\tmessagesFactory,\n\t\t\tdemographicService,\n\t\t\tproviderService,\n\t\t\tsecurityService,\n\t\t\tscheduleService,\n\t\t)\n\t\t{\n\n\t\t\tlet controller = this;\n\n\t\t\t$scope.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t\t'../ws/rs');\n\n\t\t\t$scope.appointmentApi = new AppointmentApi($http, $httpParamSerializer,\n\t\t\t\t'../ws/rs');\n\n\t\t\tlet sitesApi = new SitesApi($http, $httpParamSerializer, '../ws/rs');\n\t\t\t//=========================================================================\n\t\t\t// Access Control\n\t\t\t//=========================================================================/\n\n\n\t\t\t//=========================================================================\n\t\t\t// Local scope variables\n\t\t\t//=========================================================================/\n\n\t\t\tcontroller.useOldEchart = true;\n\t\t\tcontroller.tabEnum = Object.freeze({\n\t\t\t\tappointment: 0,\n\t\t\t\trepeatBooking: 1,\n\t\t\t\thistory: 2,\n\t\t\t});\n\t\t\tcontroller.activeTab = controller.tabEnum.appointment;\n\n\t\t\tcontroller.appointmentTypeList = [];\n\t\t\tcontroller.reasonCodeList = [];\n\n\t\t\t$scope.eventUuid = null;\n\n\t\t\t$scope.eventData = {\n\t\t\t\tstartDate: null,\n\t\t\t\tstartTime: null,\n\t\t\t\treason: null,\n\t\t\t\treasonCode: null,\n\t\t\t\tnotes: null,\n\t\t\t\ttype: null,\n\t\t\t\tduration: null,\n\t\t\t\tdoNotBook: false,\n\t\t\t\tcritical: false,\n\t\t\t\tsite: null,\n\t\t\t\tvirtual: false,\n\t\t\t};\n\n\t\t\tcontroller.repeatBooking =\n\t\t\t\t{\n\t\t\t\t\tdisabled: !securityService.getUser().superAdmin,\n\t\t\t\t\tmax_bookings_limit: 100,\n\t\t\t\t\ttoggleEnum: Object.freeze({\n\t\t\t\t\t\ton: 'on',\n\t\t\t\t\t\toff: 'off',\n\t\t\t\t\t}),\n\t\t\t\t\tendTypeEnum: Object.freeze({\n\t\t\t\t\t\tdate: 'date',\n\t\t\t\t\t\tafter: 'after',\n\t\t\t\t\t}),\n\t\t\t\t\tintervalOptions: [\n\t\t\t\t\t\t// interval values should match moment.js time units\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'days',\n\t\t\t\t\t\t\tvalue: 'days'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'weeks',\n\t\t\t\t\t\t\tvalue: 'weeks'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'months',\n\t\t\t\t\t\t\tvalue: 'months'\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tfrequencyOptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: '1x',\n\t\t\t\t\t\t\tvalue: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: '2x',\n\t\t\t\t\t\t\tvalue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: '3x',\n\t\t\t\t\t\t\tvalue: 3\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t};\n\t\t\tcontroller.repeatBookingData = {\n\t\t\t\tenabled: controller.repeatBooking.toggleEnum.off,\n\t\t\t\tfrequency: controller.repeatBooking.frequencyOptions[0].value,\n\t\t\t\tinterval: controller.repeatBooking.intervalOptions[0].value,\n\t\t\t\tendDate: Juno.Common.Util.formatMomentDate(moment().add(1, 'days')),\n\t\t\t\tendAfterNumber: 1,\n\t\t\t\tendType: controller.repeatBooking.endTypeEnum.date,\n\t\t\t};\n\t\t\tcontroller.repeatBookingDates = null;\n\n\t\t\tcontroller.eventHistory = [];\n\n\t\t\tcontroller.patientTypeahead = {};\n\t\t\t$scope.autocompleteValues = {};\n\n\t\t\tcontroller.eventStatuses = scheduleService.eventStatuses;\n\n\t\t\t$scope.eventStatusOptions = [];\n\t\t\tcontroller.selectedEventStatus = null;\n\t\t\t$scope.defaultEventStatus = null;\n\n\t\t\t$scope.timepickerFormat = \"h:mm A\";\n\n\t\t\t$scope.fieldValueMapping = {\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartTime: 'Start Time',\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendTime: 'End Time'\n\t\t\t};\n\t\t\t$scope.displayMessages = messagesFactory.factory();\n\n\t\t\t$scope.initialized = false;\n\t\t\t$scope.working = false;\n\n\t\t\tcontroller.isDoubleBook = false;\n\t\t\tcontroller.isDoubleBookPrevented = false;\n\t\t\tcontroller.siteOptions = [];\n\n\t\t\tcontroller.providerModel = {\n\t\t\t\tproviderNo: null,\n\t\t\t\tfirstName: null,\n\t\t\t\tlastName: null,\n\t\t\t\tdisplayName: \"\",\n\t\t\t\ttitle: null,\n\t\t\t\tloadData: function loadData(id)\n\t\t\t\t{\n\t\t\t\t\tvar model = this;\n\t\t\t\t\tmodel.providerNo = id;\n\t\t\t\t\tproviderService.getProvider(id).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodel.firstName = results.firstName;\n\t\t\t\t\t\t\tmodel.lastName = results.lastName;\n\t\t\t\t\t\t\tmodel.title = 'Dr.'; //results.title;\n\t\t\t\t\t\t\tmodel.displayName = Juno.Common.Util.toTrimmedString(model.title) + ' ' +\n\t\t\t\t\t\t\t\tJuno.Common.Util.toTrimmedString(model.firstName) + ' ' +\n\t\t\t\t\t\t\t\tJuno.Common.Util.toTrimmedString(model.lastName);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcontroller.demographicModel = {\n\t\t\t\tdemographicNo: null,\n\t\t\t\tdata: {},\n\n\t\t\t\tclear: function clear()\n\t\t\t\t{\n\t\t\t\t\tthis.demographicNo = null;\n\t\t\t\t\tthis.data = {};\n\t\t\t\t},\n\t\t\t\tfillData: function fillData(data)\n\t\t\t\t{\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.demographicNo = data.demographicNo;\n\t\t\t\t},\n\t\t\t\tloadData: function loadData(demographicNo)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tif (Juno.Common.Util.exists(demographicNo) && demographicNo !== 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdemographicService.getDemographic(demographicNo).then(\n\t\t\t\t\t\t\tfunction (data)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.demographicModel.fillData(data);\n\t\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (errors)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log('error initializing patient autocomplete', errors);\n\t\t\t\t\t\t\t\tcontroller.demographicModel.clear();\n\t\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicModel.clear();\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// Init\n\t\t\t//=========================================================================/\n\n\t\t\tcontroller.$onInit = function init()\n\t\t\t{\n\t\t\t\tif (!securityService.hasPermission('scheduling_create'))\n\t\t\t\t{\n\t\t\t\t\t$timeout(function ()\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.cancel();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// resolve data from opener\n\t\t\t\tcontroller.loadedSettings = controller.resolve.loadedSettings;\n\t\t\t\tcontroller.parentScope = controller.resolve.parentScope;\n\t\t\t\tcontroller.keyBinding = controller.resolve.keyBinding;\n\t\t\t\tcontroller.editMode = controller.resolve.editMode;\n\t\t\t\tvar focus = controller.resolve.focus;\n\t\t\t\tvar data = controller.resolve.data;\n\n\t\t\t\t$scope.events = data.events;\n\t\t\t\t$scope.scheduleId = data.scheduleId;\n\n\t\t\t\tcontroller.sitesEnabled = controller.parentScope.hasSites();\n\n\t\t\t\tcontroller.keyBinding.bindKeyGlobal(\"ctrl+enter\", $scope.keyBindSettings[\"ctrl+enter\"]);\n\t\t\t\tcontroller.keyBinding.bindKeyGlobal(\"ctrl+shift+enter\", $scope.keyBindSettings[\"ctrl+shift+enter\"]);\n\n\n\t\t\t\t// load required data\n\t\t\t\tcontroller.loadAppointmentReasons();\n\t\t\t\tcontroller.loadAppointmentTypes();\n\t\t\t\tcontroller.providerModel.loadData(data.scheduleId);\n\n\t\t\t\tvar momentStart = data.startTime;\n\t\t\t\tvar momentEnd = data.endTime;\n\t\t\t\t$scope.eventData.startTime = Juno.Common.Util.formatMomentTime(momentStart, $scope.timepickerFormat);\n\t\t\t\t$scope.eventData.startDate = Juno.Common.Util.formatMomentDate(momentStart);\n\n\t\t\t\tfor (var key in controller.eventStatuses)\n\t\t\t\t{\n\t\t\t\t\tif (controller.eventStatuses.hasOwnProperty(key))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.eventStatusOptions.push(controller.eventStatuses[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$scope.defaultEventStatus = data.defaultEventStatus;\n\t\t\t\tcontroller.setSelectedEventStatus(data.eventData.eventStatusCode);\n\t\t\t\t$scope.eventData.eventStatusModifier = data.eventData.eventStatusModifier;\n\t\t\t\t$scope.eventData.duration = momentEnd.diff(momentStart, 'minutes');\n\n\t\t\t\tif (controller.editMode)\n\t\t\t\t{\n\t\t\t\t\t$scope.eventUuid = data.eventData.appointmentNo;\n\t\t\t\t\t$scope.eventData.reason = data.eventData.reason;\n\t\t\t\t\t$scope.eventData.notes = data.eventData.notes;\n\t\t\t\t\t$scope.eventData.type = data.eventData.type;\n\t\t\t\t\t$scope.eventData.reasonCode = data.eventData.reasonCode;\n\t\t\t\t\t$scope.eventData.doNotBook = data.eventData.doNotBook;\n\t\t\t\t\t$scope.eventData.critical = data.eventData.urgency === 'critical';\n\t\t\t\t\t$scope.eventData.site = data.eventData.site;\n\t\t\t\t\t$scope.eventData.virtual = data.eventData.virtual;\n\n\t\t\t\t\tcontroller.checkEventConflicts(); // uses the eventData\n\n\t\t\t\t\t// either load the patient data and init the autocomplete\n\t\t\t\t\t// or ensure the patient model is clear\n\t\t\t\t\tcontroller.demographicModel.loadData(data.eventData.demographicNo).then(\n\t\t\t\t\t\tfunction success()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($scope.isPatientSelected())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.patientTypeahead = controller.demographicModel.data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// to initialize typeahead value without a selected demographic model\n\t\t\t\t\t\t\t\tcontroller.patientTypeahead.isTypeaheadSearchQuery = true;\n\t\t\t\t\t\t\t\tcontroller.patientTypeahead.searchQuery = data.eventData.appointmentName;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$timeout(controller.loadWatches);\n\t\t\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t\t\t});\n\t\t\t\t\tcontroller.loadAppointmentHistory($scope.eventUuid);\n\t\t\t\t}\n\t\t\t\telse //create new\n\t\t\t\t{\n\t\t\t\t\t// clear the patient model\n\t\t\t\t\tcontroller.demographicModel.clear();\n\t\t\t\t\t$scope.eventData.site = controller.parentScope.selectedSiteName;\n\n\t\t\t\t\tfocus.element(\"#input-patient\");\n\t\t\t\t\tcontroller.checkEventConflicts(); // uses the eventData\n\n\t\t\t\t\t$timeout(controller.loadWatches);\n\t\t\t\t\t$scope.initialized = true;\n\t\t\t\t}\n\n\t\t\t\tcontroller.changeTab(controller.tabEnum.appointment);\n\n\t\t\t\tsitesApi.getSitesByProvider(controller.providerModel.providerNo).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// get all sites assigned to the provider on which the appointment is to be booked.\n\t\t\t\t\t\t\tcontroller.siteOptions = [];\n\t\t\t\t\t\t\tfor(let site of results.data.body)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (site.siteId != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.siteOptions.push({\n\t\t\t\t\t\t\t\t\t\tlabel: site.name,\n\t\t\t\t\t\t\t\t\t\tvalue: site.name,\n\t\t\t\t\t\t\t\t\t\tuuid: site.siteId,\n\t\t\t\t\t\t\t\t\t\tcolor: site.bgColor,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsitesApi.getSitesByProvider(securityService.getUser().providerNo).then(\n\t\t\t\t\t\t\t\t\tfunction success(userSites)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// filter out sites that the current user is not assigned to.\n\t\t\t\t\t\t\t\t\t\tlet filteredSites = [];\n\t\t\t\t\t\t\t\t\t\tfor(let site of controller.siteOptions)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (userSites.data.body.find(el => el.name === site.value))\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tfilteredSites.push(site);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcontroller.siteOptions = filteredSites;\n\n\t\t\t\t\t\t\t\t\t\tif (controller.sitesEnabled && !controller.isValidSiteValue($scope.eventData.site))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t// get site for the provider being booked on to.\n\t\t\t\t\t\t\t\t\t\t\tsitesApi.getProviderSiteBySchedule(controller.providerModel.providerNo, $scope.eventData.startDate).then(\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction success(result)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{// assign to schedule site that we are booking in to.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet site = controller.siteOptions.find(el => el.uuid === result.data.body.siteId);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (site)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.eventData.site = site.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontroller.assignDefaultSite();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction error(result)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontroller.assignDefaultSite();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction error(result)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.error(\"Failed to lookup sites for the current user, with error: \" + result);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.error(\"Failed to get provider Site assignment with error: \" + results);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// Private methods\n\t\t\t//=========================================================================/\n\n\t\t\t//assign a default site\n\t\t\tcontroller.assignDefaultSite = function()\n\t\t\t{\n\t\t\t\t// set default site selection\n\t\t\t\tif (controller.siteOptions[0])\n\t\t\t\t{\n\t\t\t\t\t$scope.eventData.site = controller.siteOptions[0].value;\n\t\t\t\t}\n\t\t\t\telse if (controller.siteOptions.length === 0)\n\t\t\t\t{// no sites available\n\t\t\t\t\tlet noSitesSite = {\n\t\t\t\t\t\tlabel: \t\"No Sites Available\",\n\t\t\t\t\t\tvalue: \t\"No Sites Available\",\n\t\t\t\t\t\tuuid: \tnull,\n\t\t\t\t\t\tcolor: \tnull,\n\t\t\t\t\t};\n\t\t\t\t\tcontroller.siteOptions = [noSitesSite];\n\t\t\t\t\t$scope.eventData.site =  \"No Sites Available\";\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\tcontroller.setSelectedEventStatus = function setSelectedEventStatus(selectedCode)\n\t\t\t{\n\t\t\t\tvar eventStatusCode = $scope.defaultEventStatus;\n\n\t\t\t\tif (Juno.Common.Util.exists(selectedCode))\n\t\t\t\t{\n\t\t\t\t\teventStatusCode = selectedCode;\n\t\t\t\t}\n\n\t\t\t\tif (!Juno.Common.Util.exists(eventStatusCode) ||\n\t\t\t\t\t!Juno.Common.Util.exists(controller.eventStatuses[eventStatusCode]))\n\t\t\t\t{\n\t\t\t\t\t// if not set or found just pick the first one\n\t\t\t\t\teventStatusCode = $scope.eventStatusOptions[0].displayLetter;\n\t\t\t\t}\n\n\t\t\t\tcontroller.selectedEventStatus = eventStatusCode;\n\t\t\t};\n\n\t\t\tcontroller.loadAppointmentReasons = function loadAppointmentReasons()\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t$scope.scheduleApi.getAppointmentReasons().then(\n\t\t\t\t\tfunction success(rawResults)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\t\tvar out = [];\n\t\t\t\t\t\tif (angular.isArray(results))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\t\tlabel: results[i].label,\n\t\t\t\t\t\t\t\t\tvalue: results[i].id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.reasonCodeList = out;\n\n\t\t\t\t\t\t// set the default selected option\n\t\t\t\t\t\tif (!Juno.Common.Util.exists($scope.eventData.reasonCode))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.eventData.reasonCode = controller.reasonCodeList[0].value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(controller.reasonCodeList);\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\tcontroller.loadAppointmentTypes = function loadAppointmentTypes()\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t$scope.scheduleApi.getAppointmentTypes().then(\n\t\t\t\t\tfunction success(rawResults)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\t\tvar out = [];\n\t\t\t\t\t\tif (angular.isArray(results))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\t\tlabel: results[i].name,\n\t\t\t\t\t\t\t\t\tvalue: results[i].name,\n\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\tid: results[i].id,\n\t\t\t\t\t\t\t\t\t\tlocation: results[i].location,\n\t\t\t\t\t\t\t\t\t\tduration: results[i].duration,\n\t\t\t\t\t\t\t\t\t\tnotes: results[i].notes,\n\t\t\t\t\t\t\t\t\t\treason: results[i].reason,\n\t\t\t\t\t\t\t\t\t\tresources: results[i].resources,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.appointmentTypeList = out;\n\t\t\t\t\t\tdeferred.resolve(controller.appointmentTypeList);\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\t\t\tcontroller.getTypeDataByTypeValue = function (typeValue)\n\t\t\t{\n\t\t\t\tvar data = {};\n\t\t\t\tfor (var i = 0; i < controller.appointmentTypeList.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.appointmentTypeList[i].value === typeValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = controller.appointmentTypeList[i].data;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\tcontroller.checkEventConflicts = function ()\n\t\t\t{\n\t\t\t\t//TODO a better way to access the modal content window\n\t\t\t\tvar modalContent = $(\".modal-content\");\n\n\t\t\t\t// Get templates that happen during the time period\n\t\t\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\t\t\tvar momentEnd = controller.calculateEndTime();\n\n\t\t\t\tcontroller.isDoubleBook = false;\n\t\t\t\tcontroller.isDoubleBookPrevented = false;\n\t\t\t\tmodalContent.removeClass(\"double-book double-book-prevented\");\n\n\t\t\t\tif (momentStart.isValid() && momentEnd.isValid() && momentStart.isSameOrBefore(momentEnd))\n\t\t\t\t{\n\t\t\t\t\t// Loop through the events for this day\n\t\t\t\t\tfor (var i = 0; i < $scope.events.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar event = $scope.events[i];\n\n\t\t\t\t\t\t// filter events that should not be checked (background, wrong schedule, etc.)\n\t\t\t\t\t\tif (event.rendering === \"background\"\n\t\t\t\t\t\t\t|| event.resourceId != $scope.scheduleId\n\t\t\t\t\t\t\t|| $scope.eventUuid == event.data.appointmentNo)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// if start time is between event start and end\n\t\t\t\t\t\tvar eventStart = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.start);\n\t\t\t\t\t\tvar eventEnd = Juno.Common.Util.getDatetimeNoTimezoneMoment(event.end);\n\t\t\t\t\t\tvar eventDoNotBook = event.data.doNotBook;\n\n\t\t\t\t\t\tif (eventStart.isValid() && eventEnd.isValid() &&\n\t\t\t\t\t\t\t((momentStart.isSameOrAfter(eventStart) && momentStart.isBefore(eventEnd)) ||\n\t\t\t\t\t\t\t\t(momentEnd.isAfter(eventStart) && momentEnd.isSameOrBefore(eventEnd))))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.isDoubleBook = true;\n\t\t\t\t\t\t\tif (eventDoNotBook)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.isDoubleBookPrevented = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (controller.isDoubleBookPrevented)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodalContent.addClass(\"double-book-prevented\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (controller.isDoubleBook)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodalContent.addClass(\"double-book\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.warn(\"unable to check double booking, invalid event time/duration\", momentStart, momentEnd);\n\t\t\t\t}\n\t\t\t};\n\t\t\tcontroller.loadAppointmentHistory = function (appointmentId)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t$scope.appointmentApi.getEditHistory(appointmentId).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.eventHistory = results.data.body;\n\t\t\t\t\t\tvar date_format = 'DD MMMM YYYY';\n\t\t\t\t\t\tvar time_format = 'hh:mm A';\n\n\t\t\t\t\t\tfor (var i = 0; i < controller.eventHistory.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.eventHistory[i].formattedUpdateDate = Juno.Common.Util.formatMomentDate(moment(controller.eventHistory[i].updateDateTime), date_format);\n\t\t\t\t\t\t\tcontroller.eventHistory[i].formattedCreateDate = Juno.Common.Util.formatMomentDate(moment(controller.eventHistory[i].createDateTime), date_format);\n\n\t\t\t\t\t\t\tcontroller.eventHistory[i].formattedUpdateTime = Juno.Common.Util.formatMomentTime(moment(controller.eventHistory[i].updateDateTime), time_format);\n\t\t\t\t\t\t\tcontroller.eventHistory[i].formattedCreateTime = Juno.Common.Util.formatMomentTime(moment(controller.eventHistory[i].createDateTime), time_format);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(controller.eventHistory);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.validateForm = function validateForm()\n\t\t\t{\n\t\t\t\t$scope.displayMessages.clear();\n\n\t\t\t\tJuno.Common.Util.validateDateString($scope.eventData.startDate,\n\t\t\t\t\t$scope.displayMessages, 'startDate', 'Session Date', true);\n\n\t\t\t\tJuno.Common.Util.validateTimeString($scope.formattedTime($scope.eventData.startTime),\n\t\t\t\t\t$scope.displayMessages, 'startTime', 'Start Time', true);\n\n\t\t\t\tJuno.Common.Util.validateIntegerString($scope.eventData.duration,\n\t\t\t\t\t$scope.displayMessages, 'duration', 'Duration', true, true, true);\n\n\t\t\t\tif (controller.sitesEnabled && !controller.isValidSiteValue($scope.eventData.site))\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_field_error('site', \"A valid site must be selected\");\n\t\t\t\t}\n\n\t\t\t\tJuno.Common.Util.validateIntegerString(controller.repeatBookingData.endAfterNumber,\n\t\t\t\t\t$scope.displayMessages, 'repeatEndAfterNumber', 'Repeat End After', false, true, false);\n\n\t\t\t\tJuno.Common.Util.validateDateString(controller.repeatBookingData.endDate,\n\t\t\t\t\t$scope.displayMessages, 'repeatEndOnDate', 'Repeat End Date', false);\n\n\t\t\t\treturn !$scope.displayMessages.has_errors();\n\t\t\t};\n\n\t\t\tcontroller.updateRepeatBookingDates = function updateRepeatBookingDates()\n\t\t\t{\n\t\t\t\tcontroller.repeatBookingDates = [];\n\t\t\t\tif(controller.isRepeatBookingEnabled())\n\t\t\t\t{\n\t\t\t\t\tcontroller.repeatBookingDates = controller.generateRepeatBookingDateList(controller.repeatBooking.max_bookings_limit);\n\t\t\t\t}\n\t\t\t};\n\t\t\tcontroller.removeRepeatBookingDate = function removeRepeatBookingDate(dataObj)\n\t\t\t{\n\t\t\t\tcontroller.repeatBookingDates = controller.repeatBookingDates.filter(function(e) { return e !== dataObj })\n\t\t\t};\n\n\t\t\tcontroller.generateRepeatBookingDateList = function generateRepeatBookingDateList(limit)\n\t\t\t{\n\t\t\t\tvar dateList = [];\n\t\t\t\tvar startDate = moment($scope.eventData.startDate);\n\t\t\t\tvar endDate = moment(controller.repeatBookingData.endDate);\n\t\t\t\tvar maxRepeats = controller.repeatBookingData.endAfterNumber;\n\n\t\t\t\tvar interval = controller.repeatBookingData.interval;\n\t\t\t\tvar frequency = controller.repeatBookingData.frequency;\n\n\t\t\t\tvar bUseEndDate = controller.isRepeatBookingEndTypeDate();\n\t\t\t\tvar bUseMaxRepeat = controller.isRepeatBookingEndTypeAfter();\n\t\t\t\t$scope.displayMessages.remove_field_error('repeatEndAfterNumber');\n\t\t\t\t$scope.displayMessages.remove_field_error('repeatEndOnDate');\n\n\t\t\t\tvar count = 0;\n\t\t\t\tvar lastDate = startDate;\n\t\t\t\twhile(true)\n\t\t\t\t{\n\t\t\t\t\tvar nextDate = lastDate.add(frequency, interval);\n\t\t\t\t\tcount += 1;\n\n\t\t\t\t\tif((bUseMaxRepeat && count > maxRepeats) || (bUseEndDate && nextDate.isAfter(endDate, 'day')))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(count > limit)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(bUseMaxRepeat)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.displayMessages.add_field_error('repeatEndAfterNumber', \"limit of \" + limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bUseEndDate)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.displayMessages.add_field_error('repeatEndOnDate', \"limit of \" + limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdateList.push(Juno.Common.Util.formatMomentDate(nextDate));\n\t\t\t\t\tlastDate = nextDate;\n\t\t\t\t}\n\t\t\t\treturn dateList;\n\t\t\t};\n\n\t\t\t$scope.saveEvent = function saveEvent()\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tvar startDatetime = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\n\t\t\t\tvar endDatetime = controller.calculateEndTime();\n\n\t\t\t\tvar demographicNo = ($scope.eventData.doNotBook) ? null : controller.demographicModel.demographicNo;\n\t\t\t\tvar appointmentName = (demographicNo == null && Juno.Common.Util.exists(controller.patientTypeahead.searchQuery)) ?\n\t\t\t\t\tcontroller.patientTypeahead.searchQuery : null;\n\n\t\t\t\tvar repeatOnDates = null;\n\t\t\t\tif(controller.isRepeatBookingEnabled())\n\t\t\t\t{\n\t\t\t\t\trepeatOnDates = controller.repeatBookingDates;\n\t\t\t\t}\n\t\t\t\tcontroller.parentScope.saveEvent(\n\t\t\t\t\tcontroller.editMode,\n\t\t\t\t\t{\n\t\t\t\t\t\tappointmentNo: $scope.eventUuid,\n\t\t\t\t\t\tstartTime: startDatetime,\n\t\t\t\t\t\tendTime: endDatetime,\n\t\t\t\t\t\ttype: $scope.eventData.type,\n\t\t\t\t\t\treason: $scope.eventData.reason,\n\t\t\t\t\t\treasonCode: $scope.eventData.reasonCode,\n\t\t\t\t\t\tnotes: $scope.eventData.notes,\n\t\t\t\t\t\tproviderNo: $scope.scheduleId,\n\t\t\t\t\t\teventStatusCode: controller.selectedEventStatus,\n\t\t\t\t\t\teventStatusModifier: $scope.eventData.eventStatusModifier,\n\t\t\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\t\t\tappointmentName: appointmentName,\n\t\t\t\t\t\tsite: $scope.eventData.site,\n\t\t\t\t\t\tdoNotBook: $scope.eventData.doNotBook,\n\t\t\t\t\t\turgency: (($scope.eventData.critical) ? 'critical' : null),\n\t\t\t\t\t\tvirtual: $scope.eventData.virtual,\n\t\t\t\t\t},\n\t\t\t\t\trepeatOnDates,\n\n\t\t\t\t).then(\n\t\t\t\t\tfunction (results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (controller.parentScope.processSaveResults(results, $scope.displayMessages))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdeferred.reject(results);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.parentScope.processSaveResults(results, $scope.displayMessages);\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.deleteEvent = function deleteEvent()\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tcontroller.parentScope.deleteEvent($scope.eventUuid).then(function ()\n\t\t\t\t{\n\t\t\t\t\tdeferred.resolve();\n\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t};\n\n\t\t\t$scope.formattedTime = function formattedTime(time_str)\n\t\t\t{\n\t\t\t\t// the time picker format is HH:MM AM - need to strip spaces\n\t\t\t\treturn time_str.replace(/ /g, '');\n\t\t\t};\n\n\t\t\tcontroller.calculateEndTime = function calculateEndTime()\n\t\t\t{\n\t\t\t\tvar momentStart = Juno.Common.Util.getDateAndTimeMoment(\n\t\t\t\t\t$scope.eventData.startDate, $scope.formattedTime($scope.eventData.startTime));\n\t\t\t\treturn momentStart.add($scope.eventData.duration, 'minutes');\n\t\t\t};\n\n\t\t\t$scope.loadPatientFromTypeahead = function loadPatientFromTypeahead(patientTypeahead)\n\t\t\t{\n\t\t\t\tcontroller.demographicModel.loadData(patientTypeahead.demographicNo);\n\t\t\t};\n\n\t\t\tcontroller.autofillDataFromType = function (typeValue)\n\t\t\t{\n\t\t\t\tvar typeData = controller.getTypeDataByTypeValue(typeValue);\n\n\t\t\t\tif (Juno.Common.Util.exists(typeData.duration) &&\n\t\t\t\t\ttypeData.duration > 0)\n\t\t\t\t{\n\t\t\t\t\t$scope.eventData.duration = typeData.duration;\n\t\t\t\t}\n\t\t\t\tif (Juno.Common.Util.exists(typeData.location) &&\n\t\t\t\t\tcontroller.isValidSiteValue(typeData.location))\n\t\t\t\t{\n\t\t\t\t\t$scope.eventData.site = typeData.location;\n\t\t\t\t}\n\t\t\t\tif (Juno.Common.Util.exists(typeData.notes) &&\n\t\t\t\t\t!Juno.Common.Util.isBlank(typeData.notes))\n\t\t\t\t{\n\t\t\t\t\t$scope.eventData.notes = typeData.notes;\n\t\t\t\t}\n\t\t\t\tif (Juno.Common.Util.exists(typeData.reason) &&\n\t\t\t\t\t!Juno.Common.Util.isBlank(typeData.reason))\n\t\t\t\t{\n\t\t\t\t\t$scope.eventData.reason = typeData.reason;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// Watches\n\t\t\t//=========================================================================/\n\n\t\t\tcontroller.loadWatches = function loadWatches()\n\t\t\t{\n\t\t\t\t$scope.$watch('eventController.patientTypeahead', function (newValue, oldValue)\n\t\t\t\t{\n\t\t\t\t\tif (newValue != oldValue)\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.loadPatientFromTypeahead(controller.patientTypeahead);\n\t\t\t\t\t}\n\t\t\t\t}, true);\n\t\t\t\t$scope.$watch('[eventData.startTime, eventData.duration]', function (newValue, oldValue)\n\t\t\t\t{\n\t\t\t\t\tif (newValue != oldValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.checkEventConflicts();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$scope.$watch('eventData.type', function (newValue, oldValue)\n\t\t\t\t{\n\t\t\t\t\tif (newValue != oldValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.autofillDataFromType(newValue);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$scope.$watch('[' +\n\t\t\t\t\t'eventController.repeatBookingData.enabled,' +\n\t\t\t\t\t'eventController.repeatBookingData.frequency,' +\n\t\t\t\t\t'eventController.repeatBookingData.interval,' +\n\t\t\t\t\t'eventController.repeatBookingData.endType, ' +\n\t\t\t\t\t'eventController.repeatBookingData.endDate,' +\n\t\t\t\t\t'eventController.repeatBookingData.endAfterNumber' +\n\t\t\t\t\t']',\n\t\t\t\t\tfunction (newValue, oldValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (newValue !== oldValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.updateRepeatBookingDates();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t// Public methods\n\t\t\t//=========================================================================/\n\n\t\t\t$scope.isWorking = function isWorking()\n\t\t\t{\n\t\t\t\treturn $scope.working;\n\t\t\t};\n\n\t\t\t$scope.isInitialized = function isInitialized()\n\t\t\t{\n\t\t\t\treturn $scope.initialized;\n\t\t\t};\n\n\t\t\t$scope.isPatientSelected = function isPatientSelected()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists(controller.demographicModel.demographicNo);\n\t\t\t};\n\t\t\tcontroller.hasAppointmentId = function hasAppointmentId()\n\t\t\t{\n\t\t\t\treturn Juno.Common.Util.exists($scope.eventUuid);\n\t\t\t};\n\t\t\tcontroller.inEditMode = function inEditMode()\n\t\t\t{\n\t\t\t\treturn controller.editMode;\n\t\t\t};\n\t\t\tcontroller.isRepeatBookingEnabled = function isRepeatBookingEnabled()\n\t\t\t{\n\t\t\t\treturn (!controller.inEditMode() && controller.repeatBookingData.enabled === controller.repeatBooking.toggleEnum.on);\n\t\t\t};\n\t\t\tcontroller.isRepeatBookingEndTypeDate = function isRepeatBookingEndTypeDate()\n\t\t\t{\n\t\t\t\treturn controller.repeatBookingData.endType === controller.repeatBooking.endTypeEnum.date;\n\t\t\t};\n\t\t\tcontroller.isRepeatBookingEndTypeAfter = function isRepeatBookingEndTypeAfter()\n\t\t\t{\n\t\t\t\treturn controller.repeatBookingData.endType === controller.repeatBooking.endTypeEnum.after;\n\t\t\t};\n\n\t\t\t$scope.hasSites = function hasSites()\n\t\t\t{\n\t\t\t\treturn (controller.siteOptions.length > 0)\n\t\t\t};\n\t\t\tcontroller.isValidSiteValue = function (valueToTest)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < controller.siteOptions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (controller.siteOptions[i].value === valueToTest && controller.siteOptions[i].uuid !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\t\tcontroller.showPatientChartLinks = function showPatientChartLinks()\n\t\t\t{\n\t\t\t\treturn (controller.hasAppointmentId() && $scope.isPatientSelected());\n\t\t\t};\n\n\t\t\tcontroller.changeTab = function changeTab(tabId)\n\t\t\t{\n\t\t\t\tcontroller.activeTab = tabId;\n\t\t\t};\n\t\t\tcontroller.isTabActive = function (tabId)\n\t\t\t{\n\t\t\t\treturn (tabId === controller.activeTab);\n\t\t\t};\n\n\t\t\t$scope.clearPatient = function clearPatient()\n\t\t\t{\n\t\t\t\t$scope.autocompleteValues.patient = null;\n\t\t\t\tcontroller.demographicModel.clear();\n\t\t\t};\n\n\t\t\tcontroller.save = function save()\n\t\t\t{\n\t\t\t\tif (!$scope.validateForm())\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t$scope.working = true;\n\t\t\t\t$scope.saveEvent().then(function ()\n\t\t\t\t{\n\t\t\t\t\tcontroller.parentScope.refetchEvents();\n\t\t\t\t\tcontroller.modalInstance.close();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\tconsole.log($scope.displayMessages.field_errors()['location']);\n\t\t\t\t\tif (!$scope.displayMessages.has_standard_errors())\n\t\t\t\t\t{\n\t\t\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t\t\t}\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tcontroller.del = function del()\n\t\t\t{\n\t\t\t\t$scope.working = true;\n\t\t\t\t$scope.deleteEvent().then(function ()\n\t\t\t\t{\n\t\t\t\t\tcontroller.parentScope.refetchEvents();\n\t\t\t\t\tcontroller.modalInstance.close();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tcontroller.cancel = function cancel()\n\t\t\t{\n\t\t\t\tcontroller.modalInstance.dismiss('cancel');\n\t\t\t};\n\n\t\t\tcontroller.saveAndBill = function saveAndBill()\n\t\t\t{\n\t\t\t\tif (!$scope.validateForm())\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t$scope.working = true;\n\t\t\t\t$scope.saveEvent().then(function ()\n\t\t\t\t{\n\t\t\t\t\tcontroller.parentScope.refetchEvents();\n\t\t\t\t\tcontroller.modalInstance.close();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t\tcontroller.parentScope.openCreateInvoice(\n\t\t\t\t\t\t$scope.eventUuid,\n\t\t\t\t\t\t$scope.scheduleId,\n\t\t\t\t\t\tcontroller.demographicModel.demographicNo);\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tcontroller.saveAndPrint = function saveAndPrint()\n\t\t\t{\n\t\t\t\tif (!$scope.validateForm())\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t$scope.working = true;\n\t\t\t\t$scope.saveEvent().then(function (response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.parentScope.refetchEvents();\n\t\t\t\t\tcontroller.modalInstance.close();\n\t\t\t\t\t$scope.working = false;\n\n\t\t\t\t\tif (Juno.Common.Util.exists(response) &&\n\t\t\t\t\t\tJuno.Common.Util.exists(response.body) &&\n\t\t\t\t\t\tJuno.Common.Util.exists(response.body.appointmentNo))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar win = window.open('../appointment/appointmentcontrol.jsp' +\n\t\t\t\t\t\t\t'?displaymode=PrintCard' +\n\t\t\t\t\t\t\t'&appointment_no=' + encodeURIComponent(response.body.appointmentNo),\n\t\t\t\t\t\t\t'printappointmentcard', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error('invalid response data', response);\n\t\t\t\t\t}\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t});\n\t\t\t};\n\t\t\tcontroller.saveAndReceipt = function saveAndPrint()\n\t\t\t{\n\t\t\t\tif (!$scope.validateForm())\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t$scope.working = true;\n\t\t\t\t$scope.saveEvent().then(function (response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.parentScope.refetchEvents();\n\t\t\t\t\tcontroller.modalInstance.close();\n\t\t\t\t\t$scope.working = false;\n\n\t\t\t\t\tif (Juno.Common.Util.exists(response) &&\n\t\t\t\t\t\tJuno.Common.Util.exists(response.body) &&\n\t\t\t\t\t\tJuno.Common.Util.exists(response.body.appointmentNo))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar win = window.open('../appointment/printappointment.jsp' +\n\t\t\t\t\t\t\t'?appointment_no=' + encodeURIComponent(response.body.appointmentNo),\n\t\t\t\t\t\t\t'printappointment', 'height=700,width=1024,scrollbars=1');\n\t\t\t\t\t\twin.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error('invalid response data', response);\n\t\t\t\t\t}\n\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t});\n\t\t\t};\n\t\t\tcontroller.saveDoNotBook = function saveDoNotBook()\n\t\t\t{\n\t\t\t\tif (!$scope.validateForm())\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t$scope.working = true;\n\t\t\t\t$scope.clearPatient();\n\t\t\t\t$scope.eventData.doNotBook = true;\n\t\t\t\t$scope.saveEvent().then(function ()\n\t\t\t\t{\n\t\t\t\t\tcontroller.parentScope.refetchEvents();\n\t\t\t\t\tcontroller.modalInstance.close();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t}, function ()\n\t\t\t\t{\n\t\t\t\t\t$scope.displayMessages.add_generic_fatal_error();\n\t\t\t\t\t$scope.working = false;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$scope.viewInvoices = function viewInvoices()\n\t\t\t{\n\t\t\t\tcontroller.parentScope.open_view_invoices($scope.eventUuid);\n\t\t\t};\n\n\t\t\t$scope.createPatient = function createPatient()\n\t\t\t{\n\t\t\t\tvar editModeCallback = function ()\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tvar onSaveCallback = function ()\n\t\t\t\t{\n\t\t\t\t\treturn $scope.onPatientModalSave;\n\t\t\t\t};\n\t\t\t\tvar loadErrorLinkPatientFn = function ()\n\t\t\t\t{\n\t\t\t\t\treturn $scope.onPatientModalSave;\n\t\t\t\t};\n\n\t\t\t\t$scope.create_patient_dialog = controller.parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t\t\t};\n\n\t\t\t$scope.modify_patient = function modify_patient()\n\t\t\t{\n\t\t\t\tif (!$scope.isPatientSelected())\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar editModeCallback = function ()\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t\tvar onSaveCallback = function ()\n\t\t\t\t{\n\t\t\t\t\treturn $scope.onPatientModalSave;\n\t\t\t\t};\n\t\t\t\tvar loadErrorLinkPatientFn = function ()\n\t\t\t\t{\n\t\t\t\t\treturn $scope.onPatientModalSave;\n\t\t\t\t};\n\n\t\t\t\t$scope.modify_patient_dialog = controller.parentScope.calendar_api_adapter.openPatientDialog(\n\t\t\t\t\teditModeCallback, onSaveCallback, loadErrorLinkPatientFn);\n\t\t\t};\n\n\t\t\t// for callback on create/edit patient modal\n\t\t\t$scope.onPatientModalSave = function onPatientModalSave(demographicNo)\n\t\t\t{\n\t\t\t\t// load the newly created/updated patient\n\t\t\t\tcontroller.demographicModel.loadData(demographicNo); //TODO why?\n\t\t\t};\n\n\t\t\t$scope.newDemographic = function newDemographic()\n\t\t\t{\n\t\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomponent: 'addDemographicModal',\n\t\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\t\twindowClass: \"juno-modal\",\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmodalInstance.result.then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(results);\n\t\t\t\t\t\tconsole.log('patient #: ', results.demographicNo);\n\n\t\t\t\t\t\tcontroller.demographicModel.loadData(results.demographicNo);\n\t\t\t\t\t\tcontroller.patientTypeahead  = {isTypeaheadSearchQuery: true, searchQuery: results.lastName + \", \" + results.firstName};\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Modal dismissed at: ' + new Date());\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\n\t\t\t\tconsole.log($('#myModal'));\n\t\t\t};\n\n\t\t\tcontroller.openEncounterPage = function ()\n\t\t\t{\n\t\t\t\tif ($scope.isPatientSelected())\n\t\t\t\t{\n\t\t\t\t\tif (controller.loadedSettings && controller.loadedSettings.hideOldEchartLinkInAppointment)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar params = {\n\t\t\t\t\t\t\tdemographicNo: controller.demographicModel.demographicNo,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (angular.isDefined($scope.eventUuid))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparams.appointmentNo = $scope.eventUuid;\n\t\t\t\t\t\t\tparams.encType = \"face to face encounter with client\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$state.go('record.summary', params);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar params = {\n\t\t\t\t\t\t\tproviderNo: controller.providerModel.providerNo,\n\t\t\t\t\t\t\tcurProviderNo: controller.resolve.data.eventData.userProviderNo,\n\t\t\t\t\t\t\tdemographicNo: controller.demographicModel.demographicNo,\n\t\t\t\t\t\t\tuserName: \"\",\n\t\t\t\t\t\t\treason: $scope.eventData.reason,\n\t\t\t\t\t\t\tcurDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\t\t\t\t\tproviderview: controller.resolve.data.eventData.userProviderNo,\n\n\t\t\t\t\t\t\tappointmentNo: $scope.eventUuid,\n\t\t\t\t\t\t\tappointmentDate: $scope.eventData.startDate,\n\t\t\t\t\t\t\tstartTime: $scope.eventData.startTime,\n\t\t\t\t\t\t\tstatus: controller.selectedEventStatus,\n\t\t\t\t\t\t\tapptProvider_no: controller.providerModel.providerNo,\n\t\t\t\t\t\t\tencType: \"face to face encounter with client\",\n\t\t\t\t\t\t};\n\t\t\t\t\t\twindow.open(scheduleService.getEncounterLink(params), 'popupWindow',\n\t\t\t\t\t\t\t\t'height=800,width=1000,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,directories=no');\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.cancel();\n\t\t\t\t}\n\t\t\t};\n\t\t\tcontroller.openBillingPage = function ()\n\t\t\t{\n\t\t\t\tif ($scope.isPatientSelected() && Juno.Common.Util.exists($scope.eventUuid))\n\t\t\t\t{\n\t\t\t\t\tvar params = {\n\t\t\t\t\t\tdemographic_no: controller.demographicModel.demographicNo,\n\t\t\t\t\t\tdemographic_name: controller.demographicModel.fullName,\n\t\t\t\t\t\tproviderNo: controller.providerModel.providerNo,\n\t\t\t\t\t\tproviderview: controller.providerModel.providerNo,\n\t\t\t\t\t\tuser_no: controller.resolve.data.eventData.userProviderNo,\n\n\t\t\t\t\t\tbillRegion: controller.resolve.data.eventData.billingRegion,\n\t\t\t\t\t\tbillForm: controller.resolve.data.eventData.billingForm,\n\t\t\t\t\t\thotclick: \"\",\n\t\t\t\t\t\tbNewForm: 1,\n\n\t\t\t\t\t\tapptProvider_no: controller.providerModel.providerNo,\n\t\t\t\t\t\tappointment_no: $scope.eventUuid,\n\t\t\t\t\t\tappointmentDate: $scope.eventData.startDate,\n\t\t\t\t\t\tstatus: controller.selectedEventStatus,\n\t\t\t\t\t\tstart_time: $scope.eventData.startTime,\n\n\t\t\t\t\t\treferral_no_1: \"\",\n\t\t\t\t\t};\n\t\t\t\t\twindow.open(scheduleService.getBillingLink(params));\n\t\t\t\t\tcontroller.cancel();\n\t\t\t\t}\n\t\t\t};\n\t\t\tcontroller.openMasterRecord = function ()\n\t\t\t{\n\t\t\t\tif ($scope.isPatientSelected())\n\t\t\t\t{\n\t\t\t\t\tvar params = {\n\t\t\t\t\t\tdemographicNo: controller.demographicModel.demographicNo,\n\t\t\t\t\t};\n\t\t\t\t\t$state.go('record.details', params);\n\t\t\t\t\tcontroller.cancel();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcontroller.openRxWindow = function ()\n\t\t\t{\n\t\t\t\tvar params = {\n\t\t\t\t\tdemographicNo: controller.demographicModel.demographicNo,\n\t\t\t\t\tproviderNo: controller.providerModel.providerNo,\n\t\t\t\t};\n\t\t\t\twindow.open(scheduleService.getRxLink(params));\n\t\t\t\tcontroller.cancel();\n\t\t\t};\n\n\t\t\tcontroller.openTelehealthWindow = function openTelehealthWindow()\n\t\t\t{\n\t\t\t\tif (controller.demographicModel.demographicNo !== 0 && $scope.eventData.virtual)\n\t\t\t\t{\n\t\t\t\t\twindow.open(\"../telehealth/myhealthaccess.do?method=openTelehealth\"\n\t\t\t\t\t\t+ \"&demographicNo=\" + encodeURIComponent(controller.demographicModel.demographicNo)\n\t\t\t\t\t\t+ \"&siteName=\" + encodeURIComponent($scope.eventData.site)\n\t\t\t\t\t\t+ \"&appt=\" + encodeURIComponent($scope.eventUuid), \"_blank\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//=========================================================================\n\t\t\t//  Key Bindings\n\t\t\t//=========================================================================\n\n\t\t\t$scope.keyBindSettings = {\n\t\t\t\t\"ctrl+enter\": {\n\t\t\t\t\ttitle: 'Ctrl+Enter',\n\t\t\t\t\ttooltip: 'Save',\n\t\t\t\t\tdescription: 'Save appointment',\n\t\t\t\t\tcallback_fn: function enter_callback()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!$scope.isWorking())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttarget: null\n\t\t\t\t},\n\t\t\t\t\"ctrl+shift+enter\": {\n\t\t\t\t\ttitle: 'Ctrl+Shift+Enter',\n\t\t\t\t\ttooltip: 'Save And Bill',\n\t\t\t\t\tdescription: 'Save and bill for appointment',\n\t\t\t\t\tcallback_fn: function enter_callback()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!$scope.isWorking())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$scope.saveAndBill();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttarget: null\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t]\n});\n","/*\n\n\tCopyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n\tThis software is published under the GPL GNU General Public License.\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\tThis software was written for\n\tCloudPractice Inc.\n\tVictoria, British Columbia\n\tCanada\n\n */\n\nimport {ScheduleApi} from \"../../generated/api/ScheduleApi\";\n\nangular.module('Schedule').component('scheduleSearch', {\n\ttemplateUrl: \"src/schedule/scheduleSearch.jsp\",\n\tbindings: {\n\t\tmodalInstance: \"<\", // modalInstance is the parent $uibModalInstance\n\t\tresolve: \"<\",\n\t},\n\tcontroller: [\n\t\t'$q',\n\t\t'$http',\n\t\t'$httpParamSerializer',\n\t\t'providerService',\n\t\tfunction (\n\t\t\t$q,\n\t\t\t$http,\n\t\t\t$httpParamSerializer,\n\t\t\tproviderService\n\t\t)\n\t{\n\t\tvar ctrl = this;\n\n\t\tctrl.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\tctrl.formattedDate = Juno.Common.Util.DisplaySettings.dateFormat;\n\t\tctrl.formattedTime = Juno.Common.Util.DisplaySettings.timeFormat;\n\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\tctrl.search = {\n\t\t\t\tprovider: ctrl.resolve.providerId,\n\t\t\t\tdayOfWeek: null,\n\t\t\t\tstartTime: ctrl.resolve.scheduleStartTime,\n\t\t\t\tendTime: ctrl.resolve.scheduleEndTime,\n\t\t\t\tappointmentCode: null,\n\t\t\t};\n\t\t\tctrl.clean = true;\n\n\t\t\tctrl.resultList = [];\n\n\t\t\tctrl.providerList = [];\n\t\t\tctrl.loadProviderList();\n\n\t\t\tctrl.appointmentCodeList = [];\n\t\t\tctrl.loadAppointmentCodes();\n\n\t\t\tctrl.dayOfWeekList = [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Any\",\n\t\t\t\t\tvalue: null,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Any Weekday\",\n\t\t\t\t\tvalue: \"daily\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Sunday\",\n\t\t\t\t\tvalue: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Monday\",\n\t\t\t\t\tvalue: 2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Tuesday\",\n\t\t\t\t\tvalue: 3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Wednesday\",\n\t\t\t\t\tvalue: 4,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Thursday\",\n\t\t\t\t\tvalue: 5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Friday\",\n\t\t\t\t\tvalue: 6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Saturday\",\n\t\t\t\t\tvalue: 7,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tctrl.timeList = [];\n\t\t\tfor(var i=0; i< 24; i++)\n\t\t\t{\n\t\t\t\tvar timeObj = {\n\t\t\t\t\tlabel: (i<12)? (i===0?12:i)+\" am\" : (((i-12)===0)? 12:(i-12))+\" pm\",\n\t\t\t\t\tvalue: Juno.Common.Util.pad0(i) + \":00\"\n\t\t\t\t};\n\t\t\t\tctrl.timeList.push(timeObj);\n\t\t\t}\n\n\n\t\t\tctrl.working = false;\n\t\t};\n\n\t\tctrl.cancel = function cancel()\n\t\t{\n\t\t\tctrl.modalInstance.dismiss(\"cancel\");\n\t\t};\n\n\t\tctrl.addAppointment = function cancel(result)\n\t\t{\n\t\t\tvar scheduleSlot = result.scheduleSlot;\n\t\t\tvar provider = result.provider;\n\n\t\t\tvar startTime = moment(scheduleSlot.appointmentDateTime);\n\t\t\tvar endTime = angular.copy(startTime).add(scheduleSlot.durationMinutes, 'minutes');\n\t\t\tvar resourceId = provider.providerNo;\n\n\t\t\tctrl.modalInstance.close({\n\t\t\t\tstart:startTime,\n\t\t\t\tend: endTime,\n\t\t\t\tresourceId: resourceId\n\t\t\t});\n\t\t};\n\n\t\tctrl.reset = function reset()\n\t\t{\n\t\t\tctrl.search = {\n\t\t\t\tprovider: ctrl.resolve.providerId,\n\t\t\t\tdayOfWeek: null,\n\t\t\t\tstartTime: ctrl.resolve.scheduleStartTime,\n\t\t\t\tendTime: ctrl.resolve.scheduleEndTime,\n\t\t\t\tappointmentCode: null,\n\t\t\t};\n\t\t\tctrl.resultList = [];\n\t\t\tctrl.clean = true;\n\t\t};\n\n\t\tctrl.searchSchedules = function searchSchedules()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tctrl.working = true;\n\n\t\t\tctrl.scheduleApi.searchAvailable(\n\t\t\t\tctrl.search.provider,\n\t\t\t\tctrl.search.dayOfWeek,\n\t\t\t\tctrl.search.startTime,\n\t\t\t\tctrl.search.endTime,\n\t\t\t\tctrl.search.appointmentCode,\n\t\t\t\t8,\n\t\t\t).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tctrl.resultList = results.data.body;\n\t\t\t\t\tctrl.working = false;\n\t\t\t\t\tctrl.clean = false;\n\t\t\t\t\tdeferred.resolve(results.data.body);\n\t\t\t\t},\n\t\t\t\tfunction failure(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\tctrl.working = false;\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred;\n\t\t};\n\n\t\tctrl.isWorking = function isWorking()\n\t\t{\n\t\t\treturn ctrl.working;\n\t\t};\n\n\t\tctrl.loadProviderList = function loadProviderList()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tproviderService.searchProviders({\n\t\t\t\tactive: true\n\t\t\t}).then(\n\t\t\t\tfunction success(providerList)\n\t\t\t\t{\n\t\t\t\t\tctrl.providerList = providerList.map(provider => (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: provider.providerNo,\n\t\t\t\t\t\t\tlabel: provider.name\n\t\t\t\t\t\t}));\n\t\t\t\t\tdeferred.resolve(ctrl.providerList);\n\t\t\t\t},\n\t\t\t\tfunction failure()\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred;\n\t\t};\n\n\t\tctrl.loadAppointmentCodes = function loadAppointmentCodes()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tctrl.scheduleApi.getScheduleTemplateCodes().then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tvar codeList = result.data.body;\n\t\t\t\t\tctrl.appointmentCodeList = codeList.map(code => (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: code.code,\n\t\t\t\t\t\t\tlabel: \"(\" + code.code + \") \" + code.description\n\t\t\t\t\t\t}));\n\t\t\t\t\tdeferred.resolve(ctrl.appointmentCodeList);\n\t\t\t\t},\n\t\t\t\tfunction failure()\n\t\t\t\t{\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred;\n\t\t};\n\t}]\n});","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nimport {AppointmentApi} from '../../generated/api/AppointmentApi';\nimport {ScheduleApi} from '../../generated/api/ScheduleApi';\n\nangular.module(\"Schedule\").service(\"scheduleService\", [\n\t'$http',\n\t'$httpParamSerializer',\n\t'$q',\n\n\tfunction(\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$q,\n\t)\n\t{\n\t\tvar service = {\n\n\t\t\tappointmentApi: new AppointmentApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs'),\n\t\t\tscheduleApi: new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs'),\n\n\t\t\teventStatuses: {},\n\t\t\trotateStatuses: [],\n\n\t\t\tgetStatusByCode: function getStatusByCode(code)\n\t\t\t{\n\t\t\t\treturn service.eventStatuses[code];\n\t\t\t},\n\t\t\tgetNextRotateStatus: function(currentStatus)\n\t\t\t{\n\t\t\t\tvar nextStatusCode = currentStatus;\n\n\t\t\t\t//TODO a better way to get these\n\t\t\t\tfor(var i=0; i< service.rotateStatuses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(service.rotateStatuses[i].displayLetter === currentStatus)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar nextStatus = service.rotateStatuses[(i + 1)% service.rotateStatuses.length];\n\t\t\t\t\t\tnextStatusCode = nextStatus.displayLetter;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn nextStatusCode;\n\t\t\t},\n\n\t\t\t// Loads the list of event statuses from the API (i.e. appointment statuses).  Sets the following:\n\t\t\t// $scope.event_statuses - a table to look up a status by uuid.\n\t\t\t// $scope.rotate_statuses - an array to describe how to cycle through statuses.\n\t\t\tloadEventStatuses: function loadEventStatuses()\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\tservice.eventStatuses = {};\n\t\t\t\tservice.rotateStatuses = [];\n\n\t\t\t\tservice.scheduleApi.getCalendarAppointmentStatuses().then(\n\t\t\t\t\tfunction success(rawResults)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar results = rawResults.data.body;\n\n\t\t\t\t\t\tfor(var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar result = results[i];\n\t\t\t\t\t\t\tservice.eventStatuses[result.displayLetter] = result;\n\t\t\t\t\t\t\tif(result.rotates)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tservice.rotateStatuses.push(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t\t});\n\n\t\t\t\treturn deferred.promise;\n\t\t\t},\n\n\n\t\t\tgetBillingLink: function getBillingLink(params)\n\t\t\t{\n\t\t\t\treturn \"../billing.do\" +\n\t\t\t\t\t\"?billRegion=\" +        encodeURIComponent(Juno.Common.Util.toTrimmedString(params.billRegion)) +\n\t\t\t\t\t\"&billForm=\" +          encodeURIComponent(Juno.Common.Util.toTrimmedString(params.billForm)) +\n\t\t\t\t\t\"&hotclick=\" +          encodeURIComponent(Juno.Common.Util.toTrimmedString(params.hotclick)) +\n\t\t\t\t\t\"&appointment_no=\" +    encodeURIComponent(Juno.Common.Util.toTrimmedString(params.appointment_no)) +\n\t\t\t\t\t\"&demographic_name=\" +  encodeURIComponent(Juno.Common.Util.toTrimmedString(params.demographic_name)) +\n\t\t\t\t\t\"&status=\" +            encodeURIComponent(Juno.Common.Util.toTrimmedString(params.status)) +\n\t\t\t\t\t\"&demographic_no=\" +    encodeURIComponent(Juno.Common.Util.toTrimmedString(params.demographic_no)) +\n\t\t\t\t\t\"&providerview=\" +      encodeURIComponent(Juno.Common.Util.toTrimmedString(params.providerview)) +\n\t\t\t\t\t\"&user_no=\" +           encodeURIComponent(Juno.Common.Util.toTrimmedString(params.user_no)) +\n\t\t\t\t\t\"&apptProvider_no=\" +   encodeURIComponent(Juno.Common.Util.toTrimmedString(params.apptProvider_no)) +\n\t\t\t\t\t\"&appointment_date=\" +  encodeURIComponent(Juno.Common.Util.toTrimmedString(params.appointmentDate)) +\n\t\t\t\t\t\"&start_time=\" +        encodeURIComponent(Juno.Common.Util.toTrimmedString(params.start_time)) +\n\t\t\t\t\t\"&bNewForm=\" +          encodeURIComponent(Juno.Common.Util.toTrimmedString(params.bNewForm)) +\n\t\t\t\t\t\"&referral_no_1=\" +     encodeURIComponent(Juno.Common.Util.toTrimmedString(params.referral_no_1))\n\t\t\t},\n\n\t\t\tgetEncounterLink: function getEncounterLink(params)\n\t\t\t{\n\t\t\t\treturn \"../oscarEncounter/IncomingEncounter.do\" +\n\t\t\t\t\t\"?providerNo=\" +        encodeURIComponent(Juno.Common.Util.toTrimmedString(params.providerNo)) +\n\t\t\t\t\t\"&appointmentNo=\" +     encodeURIComponent(Juno.Common.Util.toTrimmedString(params.appointmentNo)) +\n\t\t\t\t\t\"&demographicNo=\" +     encodeURIComponent(Juno.Common.Util.toTrimmedString(params.demographicNo)) +\n\t\t\t\t\t\"&curProviderNo=\" +     encodeURIComponent(Juno.Common.Util.toTrimmedString(params.curProviderNo)) +\n\t\t\t\t\t\"&reason=\" +            encodeURIComponent(Juno.Common.Util.toTrimmedString(params.reason)) +\n\t\t\t\t\t\"&encType=\" +           encodeURIComponent(Juno.Common.Util.toTrimmedString(params.encType)) +\n\n\t\t\t\t\t\"&userName=\" +          encodeURIComponent(Juno.Common.Util.toTrimmedString(params.userName)) +\n\t\t\t\t\t\"&curDate=\" +           encodeURIComponent(Juno.Common.Util.toTrimmedString(params.curDate)) +\n\n\t\t\t\t\t\"&appointmentDate=\" +   encodeURIComponent(Juno.Common.Util.toTrimmedString(params.appointmentDate)) +\n\t\t\t\t\t\"&startTime=\" +         encodeURIComponent(Juno.Common.Util.toTrimmedString(params.startTime)) +\n\t\t\t\t\t\"&status=\" +            encodeURIComponent(Juno.Common.Util.toTrimmedString(params.status)) +\n\t\t\t\t\t\"&apptProvider_no=\" +   encodeURIComponent(Juno.Common.Util.toTrimmedString(params.apptProvider_no)) +\n\t\t\t\t\t\"&providerview=\" +      encodeURIComponent(Juno.Common.Util.toTrimmedString(params.providerview))\n\t\t\t},\n\n\t\t\tgetRxLink: function getRxLink(params)\n\t\t\t{\n\t\t\t\tif (params.demographicNo !== 0)\n\t\t\t\t{\n\t\t\t\t\treturn \"../oscarRx/choosePatient.do\" +\n\t\t\t\t\t\t\"?providerNo=\" + encodeURIComponent(params.providerNo) +\n\t\t\t\t\t\t\"&demographicNo=\" + encodeURIComponent(params.demographicNo);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn service;\n\t}\n]);\n","'use strict';\n\nangular.module('Admin', ['Common', 'Common.Services']);","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\nimport {ADMIN_PAGE_EVENTS} from \"./adminConstants\";\n\nangular.module('Admin').controller('Admin.AdminController', [\n\t'$scope',\n\t'$http',\n\t'$location',\n\t'personaService',\n\t'$stateParams',\n\tfunction ($scope, $http, $location, personaService, $stateParams)\n\t{\n\t\tlet controller = this;\n\t\tcontroller.navList = [];\n\n\t\tfunction generateTransition(newState, rawTransition)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (rawTransition)\n\t\t\t\t{\n\t\t\t\t\twindow.open(newState, \"_blank\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tangular.element(document.querySelector(\"html\")).animate({scrollTop: 0}, 500);\n\t\t\t\t\t$location.url(\"/admin/\" + newState);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// translate transitionState property of results in to transition function.\n\t\tfunction processNavResults(results)\n\t\t{\n\t\t\tresults.forEach(function (group) {\n\t\t\t\tgroup.items.forEach(function (item) {\n\t\t\t\t\titem.callback = generateTransition(item.transitionState, item.rawTransition);\n\n\t\t\t\t\t// restore accordion state on reload\n\t\t\t\t\tif (\n\t\t\t\t\t\t\t($stateParams.frameUrl !== undefined && (item.transitionState.includes($stateParams.frameUrl) || item.transitionState.includes(encodeURIComponent($stateParams.frameUrl))))\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t($location.url().includes(item.transitionState))\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tgroup.expanded = true;\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t});\n\n\t\t\treturn results;\n\t\t}\n\n\t\tfunction loadNavItems()\n\t\t{\n\t\t\tpersonaService.getAdminNav().then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.navList = processNavResults(result);\n\t\t\t\t},\n\t\t\t\tfunction error(result)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"failed to load admin nav bar, with error: \" + result);\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\t// expand a group on the nav bar\n\t\tcontroller.expandNavGroup = function expandNavGroup(group)\n\t\t{\n\t\t\tlet navGroup = controller.navList.find(function (el)\n\t\t\t{\n\t\t\t\treturn el.name === group;\n\t\t\t});\n\n\t\t\tif (navGroup)\n\t\t\t{\n\t\t\t\tnavGroup.expanded = true;\n\t\t\t}\n\t\t};\n\n\t\t// collapse all nav groups, without animation.\n\t\tcontroller.collapseAllNavGroups = function collapseAllNavGroups()\n\t\t{\n\t\t\tcontroller.navList.forEach(function (group)\n\t\t\t{\n\t\t\t\tgroup.expanded = false;\n\t\t\t})\n\t\t};\n\n\t\t$scope.$on(ADMIN_PAGE_EVENTS.ADMIN_RELOAD_NAV, function (event)\n\t\t{\n\t\t\tloadNavItems();\n\t\t});\n\t\t\n\t\t$scope.$on(ADMIN_PAGE_EVENTS.ADMIN_EXPAND_NAV_GROUP, function (event, group)\n\t\t{\n\t\t\tcontroller.collapseAllNavGroups();\n\t\t\tcontroller.expandNavGroup(group);\n\t\t});\n\n\t\tloadNavItems();\n\t}\n]);\n","'use strict';\n\nangular.module('Admin.Integration', ['Common', 'Common.Services']);","'use strict';\n\nangular.module('Admin.Integration.Fax', ['Common', 'Common.Services']);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxConfigurationController', [\n\t\"$uibModal\",\n\t\"faxAccountService\",\n\t\"providerService\",\n\t\"systemPreferenceService\",\n\tfunction ($uibModal,\n\t          faxAccountService,\n\t          providerService,\n\t          systemPreferenceService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.faxAccountList = [];\n\t\tcontroller.loggedInProvider = null;\n\t\tcontroller.masterFaxDisabled = true;\n\t\tcontroller.masterFaxEnabledInbound = false;\n\t\tcontroller.masterFaxEnabledOutbound = false;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t// if the current provider number is unknown, retrieve it.\n\t\t\tif(controller.loggedInProvider == null)\n\t\t\t{\n\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loggedInProvider = response;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tsystemPreferenceService.isPreferenceEnabled(\"masterFaxEnabledInbound\", controller.masterFaxEnabledInbound).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.masterFaxEnabledInbound = response;\n\t\t\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsystemPreferenceService.isPreferenceEnabled(\"masterFaxEnabledOutbound\", controller.masterFaxEnabledOutbound).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.masterFaxEnabledOutbound = response;\n\t\t\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tfaxAccountService.listAccounts().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.faxAccountList = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\n\t\tcontroller.editNewFaxAccount = function editNewFaxAccount()\n\t\t{\n\t\t\tcontroller.editFaxAccount();\n\t\t};\n\t\tcontroller.editFaxAccount = function editFaxAccount(faxAccount)\n\t\t{\n\t\t\tlet isNewAcct = true;\n\t\t\tif(faxAccount)\n\t\t\t{\n\t\t\t\tisNewAcct = false;\n\t\t\t}\n\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: 'src/admin/integration/fax/faxConfigurationEdit.jsp',\n\t\t\t\t\tcontroller: 'Admin.Integration.Fax.FaxConfigurationEditController as faxConfigEditController',\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\twindowClass: 'faxEditModal',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfaxAccount: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn faxAccount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmasterFaxEnabledInbound: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.masterFaxEnabledInbound;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmasterFaxEnabledOutbound: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn controller.masterFaxEnabledOutbound;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\t// the object passed back on closing\n\t\t\t\tfunction success(updatedAccount)\n\t\t\t\t{\n\t\t\t\t\tif(isNewAcct)\n\t\t\t\t\t{\n\t\t\t\t\t\t// new accounts get added to the account list\n\t\t\t\t\t\tcontroller.faxAccountList.push(updatedAccount);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// clear the existing properties and replace with the updated ones\n\t\t\t\t\t\tangular.copy(updatedAccount, faxAccount);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\t// do nothing on dismissal\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.saveMasterFaxEnabledStateInbound = function saveMasterFaxEnabledState()\n\t\t{\n\t\t\tcontroller.setSystemProperty(\"masterFaxEnabledInbound\", controller.masterFaxEnabledInbound);\n\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t};\n\t\tcontroller.saveMasterFaxEnabledStateOutbound = function saveMasterFaxEnabledState()\n\t\t{\n\t\t\tcontroller.setSystemProperty(\"masterFaxEnabledOutbound\", controller.masterFaxEnabledOutbound);\n\t\t\tcontroller.updateMasterFaxDisabledStatus();\n\t\t};\n\n\t\tcontroller.updateMasterFaxDisabledStatus = function updateMasterFaxDisabledStatus()\n\t\t{\n\t\t\tcontroller.masterFaxDisabled = !controller.masterFaxEnabledInbound && !controller.masterFaxEnabledOutbound;\n\t\t};\n\t\tcontroller.setSystemProperty = function setSystemProperty(key, value)\n\t\t{\n\t\t\tsystemPreferenceService.setPreference(key, value).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxConfigurationEditController', [\n\t\"$uibModal\",\n\t\"$uibModalInstance\",\n\t\"faxAccountService\",\n\t\"faxAccount\",\n\t\"masterFaxEnabledInbound\",\n\t\"masterFaxEnabledOutbound\",\n\tfunction ($uibModal,\n\t          $uibModalInstance,\n\t          faxAccountService,\n\t          faxAccount,\n\t          masterFaxEnabledInbound,\n\t          masterFaxEnabledOutbound)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.connectionStatusEnum = Object.freeze({\"unknown\":1, \"success\":2, \"failure\":3});\n\t\tcontroller.coverLetterOptions = [\n\t\t\t\"None\",\n\t\t\t\"Basic\",\n\t\t\t\"Standard\",\n\t\t\t\"Company\",\n\t\t\t\"Personal\"\n\t\t];\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\tif(faxAccount)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount = angular.copy(faxAccount);\n\t\t\t\tif(!controller.faxAccount.connectionStatus)\n\t\t\t\t{\n\t\t\t\t\tcontroller.setDefaultConnectionStatus();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontroller.faxAccount = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tenableInbound: false,\n\t\t\t\t\tenableOutbound: false,\n\t\t\t\t\taccountLogin: null,\n\t\t\t\t\taccountEmail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tdisplayName: '',\n\t\t\t\t\tcoverLetterOption: '',\n\t\t\t\t\tfaxNumber: '',\n\t\t\t\t\tconnectionStatus: controller.connectionStatusEnum.unknown\n\t\t\t\t};\n\t\t\t}\n\t\t\t// get the master flag status for inbound/outbound settings\n\t\t\tcontroller.masterFaxEnabledInbound = masterFaxEnabledInbound;\n\t\t\tcontroller.masterFaxEnabledOutbound = masterFaxEnabledOutbound;\n\n\t\t\t// switch off settings that are disabled and un-editable.\n\t\t\t// if this is not done, form errors may prevent saving changes to other section\n\t\t\tif(!controller.masterFaxEnabledInbound)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount.enableInbound = false;\n\t\t\t}\n\t\t\tif(!controller.masterFaxEnabledOutbound)\n\t\t\t{\n\t\t\t\tcontroller.faxAccount.enableOutbound = false;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveSettings = function (form)\n\t\t{\n\t\t\tif(!form.$valid)\n\t\t\t{\n\t\t\t\talert(\"The form contains errors\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet closeSuccess = function(updatedAccount)\n\t\t\t{\n\t\t\t\t// keep these settings\n\t\t\t\tupdatedAccount.connectionStatus = controller.faxAccount.connectionStatus;\n\t\t\t\t$uibModalInstance.close(updatedAccount);\n\t\t\t};\n\t\t\tlet closeError = function(error)\n\t\t\t{\n\t\t\t\tconsole.error(error);\n\t\t\t};\n\n\t\t\tif (controller.faxAccount.id)\n\t\t\t{\n\t\t\t\tfaxAccountService.updateAccountSettings(controller.faxAccount.id, controller.faxAccount).then(\n\t\t\t\t\tcloseSuccess,\n\t\t\t\t\tcloseError\n\t\t\t\t)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfaxAccountService.addAccountSettings(controller.faxAccount).then(\n\t\t\t\t\tcloseSuccess,\n\t\t\t\t\tcloseError\n\t\t\t\t)\n\t\t\t}\n\t\t};\n\t\tcontroller.cancel = function cancel()\n\t\t{\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\n\t\tcontroller.testConnection = function()\n\t\t{\n\t\t\tfaxAccountService.testConnection(controller.faxAccount).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tif(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.success;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.failure;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.unknown;\n\t\t\t\t}\n\t\t\t)\n\t\t};\n\t\tcontroller.setDefaultConnectionStatus = function()\n\t\t{\n\t\t\tcontroller.faxAccount.connectionStatus = controller.connectionStatusEnum.unknown;\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","angular.module(\"Admin.Integration.Fax\").controller('Admin.Integration.Fax.FaxSendReceiveController', [\n\t'NgTableParams',\n\t'providerService',\n\t\"faxAccountService\",\n\t\"faxInboundService\",\n\t\"faxOutboundService\",\n\tfunction (NgTableParams,\n\t          providerService,\n\t          faxAccountService,\n\t          faxInboundService,\n\t          faxOutboundService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.displayStatus = Object.freeze({\n\t\t\tall: {\n\t\t\t\tvalue: null,\n\t\t\t\tlabel: \"All\"\n\t\t\t},\n\t\t\terror: {\n\t\t\t\tvalue: \"ERROR\",\n\t\t\t\tlabel: \"Error\"\n\t\t\t},\n\t\t\tqueued: {\n\t\t\t\tvalue: \"QUEUED\",\n\t\t\t\tlabel: \"Queued\"\n\t\t\t},\n\t\t\tinProgress: {\n\t\t\t\tvalue: \"IN_PROGRESS\",\n\t\t\t\tlabel: \"In Progress\"\n\t\t\t},\n\t\t\tintegrationFailed: {\n\t\t\t\tvalue: \"INTEGRATION_FAILED\",\n\t\t\t\tlabel: \"Failed\"\n\t\t\t},\n\t\t\tintegrationSuccess: {\n\t\t\t\tvalue: \"INTEGRATION_SUCCESS\",\n\t\t\t\tlabel: \"Delivered\"\n\t\t\t}\n\t\t});\n\t\tcontroller.archivedStatus = Object.freeze({\n\t\t\tall: {\n\t\t\t\tvalue: null,\n\t\t\t\tlabel: \"All\"\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tvalue: false,\n\t\t\t\tlabel: \"Active\"\n\t\t\t},\n\t\t\tarchived: {\n\t\t\t\tvalue: true,\n\t\t\t\tlabel: \"Archived\"\n\t\t\t}\n\t\t});\n\n\t\tcontroller.systemStatusEnum = Object.freeze({\n\t\t\tsent:\"SENT\",\n\t\t\tqueued:\"QUEUED\",\n\t\t\terror:\"ERROR\"\n\t\t});\n\t\tcontroller.notificationStatusEnum = Object.freeze({\n\t\t\tnotify:\"NOTIFY\",\n\t\t\tdismissed:\"SILENT\"\n\t\t});\n\t\tcontroller.tabEnum = Object.freeze({\n\t\t\tinbox:0,\n\t\t\toutbox:1\n\t\t});\n\t\tcontroller.activeTab = controller.tabEnum.outbox;\n\t\tcontroller.loggedInProviderNo = null;\n\t\tcontroller.displayNotificationColumn = false;\n\n\t\tcontroller.nextPullTime = null;\n\t\tcontroller.nextPushTime = null;\n\n\t\tcontroller.selectedFaxAccount = null;\n\t\tcontroller.faxAccountList = [];\n\t\tcontroller.outboxItemList = [];\n\t\tcontroller.inboxItemList = [];\n\n\t\t// ngTable object for storing search parameters\n\t\tcontroller.inbox =\n\t\t{\n\t\t\tsearch: {\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting: {\n\t\t\t\t\tDateSent: \"desc\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tstartDate: null,\n\t\t\tendDate: null\n\t\t};\n\t\t// ngTable object for storing search parameters\n\t\tcontroller.outbox =\n\t\t{\n\t\t\tsearch: {\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting: {\n\t\t\t\t\tDateSent: \"desc\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tdisplayStatus: controller.displayStatus.all,\n\t\t\tarchivedStatus: controller.archivedStatus.all\n\t\t};\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\tfaxAccountService.listAccounts().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.faxAccountList = response;\n\t\t\t\t\tif(controller.faxAccountList.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.selectedFaxAccount = controller.faxAccountList[0];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPushTime();\n\t\t\tcontroller.loadNextPullTime();\n\t\t};\n\n\t\tcontroller.loadOutboxItems = function()\n\t\t{\n\t\t\tcontroller.tableParamsOutbox = new NgTableParams(\n\t\t\t\tcontroller.outbox.search,\n\t\t\t\t{\n\t\t\t\t\tgetData: function(params)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.outbox.search = params.url();\n\n\t\t\t\t\t\tlet defaults = {\n\t\t\t\t\t\t\tpage: controller.outbox.search.page,\n\t\t\t\t\t\t\tperPage: controller.outbox.search.count\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet searchParams = {\n\t\t\t\t\t\t\tstartDate:  controller.formatOptionalDateParam(controller.outbox.startDate),\n\t\t\t\t\t\t\tendDate: controller.formatOptionalDateParam(controller.outbox.endDate),\n\t\t\t\t\t\t\tcombinedStatus: controller.outbox.displayStatus.value,\n\t\t\t\t\t\t\tarchived: controller.outbox.archivedStatus.value\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar searchListHelper = new Juno.Common.SearchListHelper(defaults, searchParams);\n\t\t\t\t\t\treturn faxAccountService.getOutbox(controller.selectedFaxAccount.id, searchListHelper).then(\n\t\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.outboxItemList = response.data;\n\t\t\t\t\t\t\t\tcontroller.tableParamsOutbox.total(response.meta.total);\n\t\t\t\t\t\t\t\treturn controller.outboxItemList;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(error)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\talert(\"Failed to load outbox\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPushTime();\n\t\t};\n\n\t\tcontroller.loadInboxItems = function ()\n\t\t{\n\t\t\tcontroller.tableParamsInbox = new NgTableParams(\n\t\t\t\tcontroller.inbox.search,\n\t\t\t\t{\n\t\t\t\t\tgetData: function (params)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.inbox.search = params.url();\n\t\t\t\t\t\tconsole.info(controller.inbox);\n\n\t\t\t\t\t\tlet defaults = {\n\t\t\t\t\t\t\tpage: controller.inbox.search.page,\n\t\t\t\t\t\t\tperPage: controller.inbox.search.count\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet searchParams = {\n\t\t\t\t\t\t\tstartDate:  controller.formatOptionalDateParam(controller.inbox.startDate),\n\t\t\t\t\t\t\tendDate: controller.formatOptionalDateParam(controller.inbox.endDate),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar searchListHelper = new Juno.Common.SearchListHelper(defaults, searchParams);\n\t\t\t\t\t\treturn faxAccountService.getInbox(controller.selectedFaxAccount.id, searchListHelper).then(\n\t\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.inboxItemList = response.data;\n\t\t\t\t\t\t\t\tcontroller.tableParamsInbox.total(response.meta.total);\n\t\t\t\t\t\t\t\treturn controller.inboxItemList;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction error(error)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\talert(\"Failed to load inbox\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.loadNextPullTime();\n\t\t};\n\n\t\tcontroller.resendFax = function(outboxItem)\n\t\t{\n\t\t\t// the resend will create a new record for some resend attempts, in that case force a reload of the table items\n\t\t\tlet requireFullRefresh = (outboxItem.combinedStatus === controller.displayStatus.integrationFailed.value);\n\n\t\t\t// set a temp status to provider feedback/disable resend button\n\t\t\toutboxItem.combinedStatus = controller.displayStatus.inProgress.value;\n\t\t\tfaxOutboundService.resendOutboundFax(outboxItem.id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tangular.copy(response, outboxItem);\n\t\t\t\t\tif(outboxItem.systemStatus === controller.systemStatusEnum.error)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(outboxItem.systemStatusMessage);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(requireFullRefresh)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loadOutboxItems();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\toutboxItem.combinedStatus = controller.displayStatus.error.value;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadNextPullTime = function()\n\t\t{\n\t\t\tfaxInboundService.getNextPullTime().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPullTime = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPullTime = null;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.loadNextPushTime = function()\n\t\t{\n\t\t\tfaxOutboundService.getNextPushTime().then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPushTime = response;\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tcontroller.nextPushTime = null;\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.changeTab = function(tabId)\n\t\t{\n\t\t\tcontroller.activeTab = tabId;\n\t\t};\n\n\t\tcontroller.dismissNotification = function(outboxItem)\n\t\t{\n\t\t\tfaxOutboundService.setNotificationStatus(outboxItem.id, controller.notificationStatusEnum.dismissed).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tangular.copy(response, outboxItem);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.archive = function(outboxItem)\n\t\t{\n\t\t\tfaxOutboundService.archive(outboxItem.id).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tangular.copy(response, outboxItem);\n\t\t\t\t},\n\t\t\t\tfunction error(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.openDocument = function(documentId)\n\t\t{\n\t\t\tlet openDocumentWindow = function()\n\t\t\t{\n\t\t\t\tlet url = \"../dms/showDocument.jsp\";\n\t\t\t\tlet params = \"segmentID=\"+documentId+\"&providerNo=\"+ controller.loggedInProviderNo + \"&status=A&inWindow=true&chartView&demoName=\";\n\t\t\t\tlet windowName = \"ShowDocument\" + documentId;\n\t\t\t\twindow.open(url + \"?\" + params, windowName, \"scrollbars=1,width=1024,height=768\");\n\t\t\t};\n\n\t\t\t// if the current provider number is unknown, retrieve it before opening the new window.\n\t\t\tif(controller.loggedInProviderNo == null)\n\t\t\t{\n\t\t\t\tproviderService.getMe().then(\n\t\t\t\t\tfunction success(response)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.loggedInProviderNo = response.providerNo;\n\t\t\t\t\t\topenDocumentWindow();\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\topenDocumentWindow();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.viewDownloadFile = function(outboundId)\n\t\t{\n\t\t\tlet url = faxOutboundService.getDownloadUrl(outboundId);\n\t\t\tlet windowName = \"ViewFaxFile\" + outboundId;\n\t\t\twindow.open(url, windowName, \"scrollbars=1,width=1024,height=768\");\n\t\t};\n\n\t\tcontroller.formatOptionalDateParam = function(dateObj)\n\t\t{\n\t\t\treturn Juno.Common.Util.isUndefinedOrNull(dateObj)? null : moment(dateObj).format('YYYY-MM-DD')\n\t\t};\n\t\tcontroller.getStatusDisplayLabel = function(statusEnum)\n\t\t{\n\t\t\tlet displayLabel = null;\n\t\t\tswitch(statusEnum)\n\t\t\t{\n\t\t\t\tcase controller.displayStatus.error.value :                 displayLabel = controller.displayStatus.error.label; break;\n\t\t\t\tcase controller.displayStatus.queued.value :                displayLabel = controller.displayStatus.queued.label; break;\n\t\t\t\tcase controller.displayStatus.inProgress.value :            displayLabel = controller.displayStatus.inProgress.label; break;\n\t\t\t\tcase controller.displayStatus.integrationFailed.value :     displayLabel = controller.displayStatus.integrationFailed.label; break;\n\t\t\t\tcase controller.displayStatus.integrationSuccess.value :    displayLabel = controller.displayStatus.integrationSuccess.label; break;\n\t\t\t\tdefault: displayLabel = \"Unknown\";\n\t\t\t}\n\t\t\treturn displayLabel;\n\t\t};\n\n\t\tcontroller.initialize();\n\t}\n]);","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\nimport {ADMIN_PAGE_EVENTS} from \"../../adminConstants\";\n\nangular.module('Admin.Integration').component('landingPage', {\n\ttemplateUrl: 'src/admin/integration/landingPage/landingPage.jsp',\n\tbindings: {\n\t},\n\tcontroller: ['$scope', '$location', '$window', function ($scope, $location, $window)\n\t{\n\t\tlet ctrl = this;\n\t\tctrl.goTo = function (path, expandGroup)\n\t\t{\n\t\t\t$location.url(path);\n\t\t\t$scope.$emit(ADMIN_PAGE_EVENTS.ADMIN_EXPAND_NAV_GROUP, expandGroup);\n\t\t};\n\n\t\tctrl.goToFrame = function (frameUrl, expandGroup)\n\t\t{\n\t\t\tlet context = $window.adminLandingPage.oscarContextPath;\n\t\t\t$location.url('admin/frame?frameUrl=' + context + frameUrl);\n\t\t\t$scope.$emit(ADMIN_PAGE_EVENTS.ADMIN_EXPAND_NAV_GROUP, expandGroup);\n\t\t}\n\t}]\n});","/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nangular.module('Admin.Integration').component('panelManagementAdmin',\n{\n\ttemplateUrl: 'src/admin/integration/panelManagement/panelManagement.jsp',\n\tbindings: {},\n\tcontroller: ['$scope', 'providersService', 'uxService', function ($scope, providersService, uxService)\n\t{\n\t\tlet ctrl = this;\n\n\t\tctrl.selectedProvider = null;\n\t\tctrl.selectedPanel = null;\n\t\tctrl.dashboardUrl = null;\n\t\tctrl.missingRequiredFeildProvider = false;\n\t\tctrl.missingRequiredFeildPanel = false;\n\t\tlet DASHBOARD_URL_PATTERN = \"../web/dashboard/display/DashboardDisplay.do?method=getDashboard&dashboardId=\";\n\n\t\tctrl.providers = [];\n\t\tctrl.panels = [];\n\n\t\tctrl.$onInit = function ()\n\t\t{\n\t\t\tprovidersService.getAll().then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.providers = [];\n\t\t\t\t\t\tfor (let provider of result)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctrl.providers.push({\n\t\t\t\t\t\t\t\tlabel: provider.name,\n\t\t\t\t\t\t\t\tvalue: provider.providerNo\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to get provider list with error: \" + result);\n\t\t\t\t\t}\n\t\t\t);\n\n\t\t\tuxService.getAllDashboards().then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tctrl.panels = [];\n\t\t\t\t\t\tfor (let panel of result)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (panel.active)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tctrl.panels.push({\n\t\t\t\t\t\t\t\t\tlabel: panel.name,\n\t\t\t\t\t\t\t\t\tvalue: panel.id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to get dashboard list with error: \" + result);\n\t\t\t\t\t}\n\t\t\t)\n\t\t};\n\n\t\tctrl.runReport = function()\n\t\t{\n\t\t\tctrl.missingRequiredFeildProvider = ctrl.selectedProvider == null;\n\t\t\tctrl.missingRequiredFeildPanel \t\t= ctrl.selectedPanel == null;\n\n\t\t\tif (ctrl.selectedPanel != null && ctrl.selectedProvider != null)\n\t\t\t{\n\t\t\t\tctrl.dashboardUrl = DASHBOARD_URL_PATTERN + ctrl.selectedPanel + \"&providerNo=\" + ctrl.selectedProvider;\n\t\t\t\tdocument.querySelector(\"#dashboard-embedded-page\").contentWindow.location.reload();\n\t\t\t}\n\t\t};\n\t}]\n});","/*\n* Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n* This software is published under the GPL GNU General Public License.\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 2\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*\n* This software was written for\n* CloudPractice Inc.\n* Victoria, British Columbia\n* Canada\n*/\n\nimport {ADMIN_PAGE_EVENTS} from \"../../adminConstants\";\n\nangular.module('Admin.Integration').component('integrationModules',\n{\n\ttemplateUrl: 'src/admin/integration/integrationModules/integrationModules.jsp',\n\tbindings: {\n\n\t},\n\tcontroller: ['$scope', 'systemPreferenceService', function ($scope, systemPreferenceService)\n\t{\n\t\tlet ctrl = this;\n\n\t\tctrl.integrationList = [\n\t\t\t{\n\t\t\t\tname: \"CareConnect\",\n\t\t\t\tenabled: false,\n\t\t\t\tpropertyName: \"integration.CareConnect.enabled\",\n\t\t\t\tconfigUrl:\"\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"IceFall\",\n\t\t\t\tenabled: false,\n\t\t\t\tpropertyName: \"icefall_enabled\",\n\t\t\t\tconfigUrl: \"\"\n\t\t\t},\n\t\t];\n\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\tfor (let integration of ctrl.integrationList)\n\t\t\t{\n\t\t\t\tsystemPreferenceService.getPreference(integration.propertyName, \"false\").then(\n\t\t\t\t\t\tfunction success(response)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tintegration.enabled = response.toUpperCase() === \"TRUE\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(response)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tintegration.enabled = false;\n\t\t\t\t\t\t\tconsole.error(\"Failed to fetch preference, \" + integration.propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tctrl.enableProperty = function(propertyName, enable)\n\t\t{\n\t\t\tsystemPreferenceService.setPreference(propertyName, enable.toString());\n\t\t\t$scope.$emit(ADMIN_PAGE_EVENTS.ADMIN_RELOAD_NAV);\n\t\t}\n\n\t}]\n});","/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nangular.module('Admin.Integration').component('iceFallAdmin',\n{\n\ttemplateUrl: 'src/admin/integration/iceFall/iceFall.jsp',\n\tbindings: {},\n\tcontroller: ['$scope', '$http', '$httpParamSerializer', '$state', function ($scope, $http, $httpParamSerializer, $state)\n\t{\n\t\tlet ctrl = this;\n\n\t\tctrl.changeTab = function (state)\n\t\t{\n\t\t\t$state.go(state);\n\t\t};\n\n\t\tctrl.isTabActive = function(tabState)\n\t\t{\n\t\t\treturn tabState === $state.current.name;\n\t\t}\n\t}]\n});","/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nimport {IceFallApi} from \"../../../../../generated\";\nimport {ADMIN_PAGE_EVENTS} from \"../../../adminConstants\";\n\nangular.module('Admin.Integration').component('iceFallAdminSettings',\n{\n\ttemplateUrl: 'src/admin/integration/iceFall/settings/iceFallAdminSettings.jsp',\n\tbindings: {},\n\tcontroller: ['$scope', '$http', '$httpParamSerializer', function ($scope, $http, $httpParamSerializer)\n\t{\n\t\tlet ctrl = this;\n\t\tlet iceFallApi = new IceFallApi($http, $httpParamSerializer, '../ws/rs');\n\n\t\tctrl.iceFallSettings = null;\n\n\t\ticeFallApi.getIceFallSettings().then(\n\t\t\t\tfunction success(result)\n\t\t\t\t{\n\t\t\t\t\tctrl.iceFallSettings = result.data.body;\n\t\t\t\t},\n\t\t\t\tfunction error(result)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\"Failed to get ice fall status. With error: \");\n\t\t\t\t}\n\t\t);\n\n\t\tctrl.setIceFallVisible = function (visible)\n\t\t{\n\t\t\tctrl.iceFallSettings.visible = visible;\n\t\t\tctrl.saveIceFallSettings();\n\t\t};\n\n\t\tctrl.saveIceFallSettings = function ()\n\t\t{\n\t\t\ticeFallApi.setIceFallSettings(ctrl.iceFallSettings);\n\t\t};\n\n\t}]\n});","/**\n * Copyright (c) 2012-2018. CloudPractice Inc. All Rights Reserved.\n * This software is published under the GPL GNU General Public License.\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n *\n * This software was written for\n * CloudPractice Inc.\n * Victoria, British Columbia\n * Canada\n */\n\nimport {IceFallApi} from \"../../../../../generated\";\n\nangular.module('Admin.Integration').component('iceFallAdminActivity',\n{\n\ttemplateUrl: 'src/admin/integration/iceFall/activity/iceFallAdminActivity.jsp',\n\tbindings: {},\n\tcontroller: ['$scope', '$http', '$httpParamSerializer', 'NgTableParams', 'formService', function ($scope, $http, $httpParamSerializer, NgTableParams, formService)\n\t{\n\t\tlet ctrl = this;\n\n\t\tlet iceFallApi = new IceFallApi($http, $httpParamSerializer, '../ws/rs');\n\t\tctrl.filterStatuses = [{\"value\": \"%\", \"label\": \"ANY\"}, {\"value\": \"ERROR\", \"label\": \"ERROR\"},{\"value\": \"SENT\", \"label\": \"SENT\"}];\n\n\t\tctrl.statusFilter = \"%\";\n\t\tctrl.startDate = Juno.Common.Util.formatMomentDate(moment());\n\t\tctrl.endDate = Juno.Common.Util.formatMomentDate(moment());\n\t\tctrl.logEntries = [];\n\n\t\t// search for log entries\n\t\tctrl.search = function (page, pageSize)\n\t\t{\n\n\t\t};\n\n\t\tctrl.$onInit = function()\n\t\t{\n\t\t\tctrl.tableParams = new NgTableParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\tcount: 100,\n\t\t\t\t\t\tsorting:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDATE_SENT: 'desc',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpaginationMaxBlocks: 3,\n\t\t\t\t\t\tpaginationMinBlocks: 2,\n\t\t\t\t\t\tdataset: ctrl.logEntries\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tgetData: function (params) {\n\n\t\t\t\t\t\t\tif (!ctrl.startDate || !ctrl.endDate)\n\t\t\t\t\t\t\t{//start date and end date are required\n\t\t\t\t\t\t\t\tparams.total(0);\n\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn iceFallApi.getLogEntries(\n\t\t\t\t\t\t\t\t\tctrl.startDate +\"T01:01:01\",\n\t\t\t\t\t\t\t\t\tctrl.endDate +\"T23:59:59\",\n\t\t\t\t\t\t\t\t\tparams.page(),\n\t\t\t\t\t\t\t\t\tparams.count(),\n\t\t\t\t\t\t\t\t\tctrl.statusFilter,\n\t\t\t\t\t\t\t\t\tctrl.orderByToApiName(params.orderBy()),\n\t\t\t\t\t\t\t\t\tctrl.orderByGetDirection(params.orderBy())\n\t\t\t\t\t\t\t\t\t).then(\n\t\t\t\t\t\t\t\t\t\tfunction success(result)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tctrl.logEntries = result.data.body.logEntries;\n\t\t\t\t\t\t\t\t\t\t\tparams.total(result.data.body.totalLogEntries);\n\t\t\t\t\t\t\t\t\t\t\treturn ctrl.logEntries;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfunction error(result)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tconsole.error(\"Failed to retrieve IceFall log entries! error: \" + result);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tctrl.doEformPopup = function (log)\n\t\t{\n\t\t\tif (log.instance)\n\t\t\t{\n\t\t\t\tformService.openEFormInstancePopup(log.demographicNo, log.fdid);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tformService.openEFormPopup(log.demographicNo, log.fdid);\n\t\t\t}\n\t\t};\n\n\t\tctrl.orderByToApiName = function(orderBy)\n\t\t{\n\t\t\treturn orderBy[0].replace(\"-\", \"\").replace(\"+\", \"\");\n\t\t};\n\n\t\tctrl.orderByGetDirection = function (orderBy)\n\t\t{\n\t\t\tif (orderBy[0].includes(\"-\"))\n\t\t\t{\n\t\t\t\treturn \"DESC\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn \"ASC\";\n\t\t\t}\n\t\t};\n\t}]\n});","'use strict';\n\nangular.module('Admin.Integration.Know2act', ['Common', 'Common.Services']);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aConfigController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.PrevListQuantity = 10;\n\t\tcontroller.availablePreventionRuleSets = [];\n\t\tcontroller.currentPreventionRulesSet = [];\n\t\tcontroller.clinicName = \"\";\n\t\tcontroller.k2aActive = false;\n\n\t\tcontroller.checkStatus = function ()\n\t\t{\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t\tif (controller.k2aActive)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.getPreventionRulesList();\n\t\t\t\t\t\tcontroller.getCurrentPreventionRulesVersion();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getPreventionRulesList = function ()\n\t\t{\n\t\t\tk2aService.preventionRulesList().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.availablePreventionRuleSets = data;\n\t\t\t\t\tconsole.log(\"availablePreventionRuleSets\", controller.availablePreventionRuleSets);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.getCurrentPreventionRulesVersion = function ()\n\t\t{\n\t\t\tk2aService.getCurrentPreventionRulesVersion().then(\n\t\t\t\tfunction success(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.currentPreventionRulesSet = data;\n\t\t\t\t\tconsole.log(\"currentPreventionRulesSet\", data);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.loadPreventionRuleById = function (prevSet)\n\t\t{\n\n\t\t\t// if (confirm(\"<bean:message key=\"admin.k2a.confirmation\"/>\")) {\n\t\t\t// prevSet.agreement = \"<bean:message key=\"admin.k2a.confirmation\"/>\";\n\t\t\tk2aService.loadPreventionRuleById(prevSet).then(function (data)\n\t\t\t{\n\t\t\t\tk2aService.getCurrentPreventionRulesVersion();\n\t\t\t});\n\t\t\t// }\n\t\t};\n\n\t\tcontroller.increasePrevListQuantity = function ()\n\t\t{\n\t\t\tcontroller.PrevListQuantity = controller.availablePreventionRuleSets.length;\n\t\t};\n\n\t\tcontroller.initK2A = function ()\n\t\t{\n\t\t\tk2aService.initK2A(controller.clinicName).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(\"Init complete, check status\", response);\n\t\t\t\t\tcontroller.checkStatus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\talert(\"Failed to initialize K2A\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aNotificationController', [\n\t\"k2aService\",\n\tfunction (k2aService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.page = {};\n\t\tcontroller.page.notifications = [];\n\n\t\tcontroller.readMore = function (notif) {\n\t\t\tk2aService.getMoreNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tvar win = window.open(data, 'moreInfo', 'width=700,height=700');\n\t\t\t\t\twin.focus();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.archive = function (notif) {\n\t\t\tk2aService.ackNotification(notif).then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.getNotifications();\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to acknowledge notification\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications = function () {\n\t\t\tk2aService.getNotifications().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.page.notifications = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to load notifications\");\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getNotifications();\n\t}\n]);","angular.module(\"Admin.Integration.Know2act\").controller('Admin.Integration.Know2act.k2aTemplateController', [\n\t\"reportByTemplateService\",\n\t\"k2aService\",\n\tfunction (reportByTemplateService,\n\t          k2aService)\n\t{\n\t\tvar controller = this;\n\n\t\tcontroller.message = \"\";\n\t\tcontroller.k2aActive = false;\n\t\tcontroller.k2aReports = null;\n\t\tcontroller.K2A_URL = \"\";\n\n\t\tcontroller.dtOptions = {};\n\t\t// controller.dtOptions = DTOptionsBuilder.newOptions().withOption('order', [1, 'asc']);\n\n\t\tcontroller.checkStatus = function checkStatus() {\n\t\t\tk2aService.isK2AInit().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\tcontroller.k2aActive = data;\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"Failed to verify K2A Status\");\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tcontroller.checkStatus();\n\n\t\tcontroller.getAllK2AReports = function getAllK2AReports(){\n\t\t\treportByTemplateService.getAllK2AReports().then(function(data){\n\t\t\t\tcontroller.k2aReports = data;\n\t\t\t\tconsole.log(\"k2a reports\", controller.k2aReports);\n\t\t\t});\n\t\t};\n\t\tcontroller.getAllK2AReports();\n\n\t\tcontroller.saveK2AReport = function saveK2AReport(id){\n\t\t\treportByTemplateService.getK2AReportById(id).then(function(data){\n\t\t\t\tcontroller.message = data;\n\t\t\t\tconsole.log(controller.message);\n\t\t\t\trefreshParent();\n\t\t\t});\n\t\t};\n\n\t\tcontroller.openK2AUrl = function openK2AUrl() {\n\t\t\treportByTemplateService.getK2AUrl().then(\n\t\t\t\tfunction success(data) {\n\t\t\t\t\twindow.open(data + \"/#/ws/rs/posts/browse/Report\");\n\t\t\t\t},\n\t\t\t\tfunction failure(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.refreshParent = function refreshParent() {\n\t\t\twindow.opener.document.location.href = \"../../../../oscarReport/reportByTemplate/homePage.jsp\";\n\t\t};\n\t\twindow.onunload = controller.refreshParent();\n\t}\n]);","angular.module('Admin.Integration').controller('Admin.Integration.FrameContentController', [\n\t'$scope',\n\t'$http',\n\t'$stateParams',\n\t'$window',\n\tfunction ($scope, $http, $stateParams, $window)\n\t{\n\t\tlet controller = this;\n\n\t\tcontroller.frameUrl = $stateParams.frameUrl;\n\t\tcontroller.frameUrlEncoded = escape($stateParams.frameUrl);\n\t\tcontroller.useCompat = $stateParams.useCompat;\n\t}]\n);","angular.module('oscarProviderViewModule').controller('BillingCtrl', [ '$scope', '$http', function ($scope,$http) {\n\n}]);\n","'use strict';\n\nangular.module('Consults', ['Common', 'Common.Services']);","angular.module('Consults').controller('Consults.ConsultRequestAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getRequestAttachments(consultId, consult.demographicId).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.availableDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAvailableDoc.documentNo+controller.atth.selectedAvailableDoc.documentType);\n\t\t\tcontroller.atth.availableDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAvailDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.availableDocs.length) selectionIndex = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\n\t\t\t//Get index to remove by document id and document type\n\t\t\tvar removeIndex = controller.atth.attachedDocs.map(function(item)\n\t\t\t{\n\t\t\t\treturn item.documentNo+item.documentType;\n\t\t\t}).indexOf(controller.atth.selectedAttachedDoc.documentNo+controller.atth.selectedAttachedDoc.documentType);\n\t\t\tcontroller.atth.attachedDocs.splice(removeIndex, 1);\n\n\t\t\tvar selectionIndex = $(\"#selAttachDoc\")[0].selectedIndex;\n\t\t\tif (selectionIndex >= controller.atth.attachedDocs.length) selectionIndex = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[selectionIndex];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\tconsole.log('CLOSE MODAL');\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseAttachmentController', [\n\n\t'$uibModalInstance',\n\t'consultService',\n\t'consult',\n\n\tfunction(\n\t\t$uibModalInstance,\n\t\tconsultService,\n\t\tconsult)\n\t{\n\t\tcontroller.atth = {};\n\t\tcontroller.atth.patientName = consult.demographic.lastName + \", \" + consult.demographic.firstName;\n\n\t\tcontroller.atth.attachedDocs = consult.attachments;\n\t\tif (controller.atth.attachedDocs[0] != null) controller.atth.selectedAttachedDoc = controller.atth.attachedDocs[0];\n\n\t\tvar consultId = 0;\n\t\tif (consult.id != null) consultId = consult.id;\n\t\tconsultService.getResponseAttachments(consultId, consult.demographic.demographicNo).then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tif (consult.availableDocs == null) consult.availableDocs = Juno.Common.Util.toArray(results);\n\t\t\t\tcontroller.atth.availableDocs = consult.availableDocs;\n\t\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\t\t\t\tif (controller.atth.availableDocs[0] != null) controller.atth.selectedAvailableDoc = controller.atth.availableDocs[0];\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.openDoc = function openDoc(doc)\n\t\t{\n\t\t\twindow.open(\"../\" + doc.url);\n\t\t};\n\n\t\tcontroller.attach = function attach()\n\t\t{\n\t\t\tif (controller.atth.selectedAvailableDoc == null) return;\n\n\t\t\tcontroller.atth.attachedDocs.push(controller.atth.selectedAvailableDoc);\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.selectedAvailableDoc;\n\t\t\tcontroller.atth.selectedAttachedDoc.attached = true;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.attachedDocs);\n\n\t\t\tvar x = $(\"#selAvailDoc\").val();\n\t\t\tcontroller.atth.availableDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.availableDocs.length) x = controller.atth.availableDocs.length - 1;\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.availableDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.detach = function detach()\n\t\t{\n\t\t\tif (controller.atth.selectedAttachedDoc == null) return;\n\n\t\t\tcontroller.atth.availableDocs.push(controller.atth.selectedAttachedDoc);\n\t\t\tcontroller.atth.selectedAvailableDoc = controller.atth.selectedAttachedDoc;\n\t\t\tcontroller.atth.selectedAvailableDoc.attached = false;\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(controller.atth.availableDocs);\n\n\t\t\tvar x = $(\"#selAttachDoc\").val();\n\t\t\tcontroller.atth.attachedDocs.splice(x, 1);\n\t\t\tif (x >= controller.atth.attachedDocs.length) x = controller.atth.attachedDocs.length - 1;\n\t\t\tcontroller.atth.selectedAttachedDoc = controller.atth.attachedDocs[x];\n\n\t\t\tconsult.attachmentsChanged = true;\n\t\t};\n\n\t\tcontroller.done = function done()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t// '$defer',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\t// $defer,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\t//get access rights\n\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\t//set search statuses\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\n\t\t//get urgencies list\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\t\tproviderService.getActiveTeams().then(\n\t\t\tfunction success(results)\n\t\t\t{\n\t\t\t\tcontroller.teams = results;\n\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\tconsole.log(JSON.stringify(results));\n\t\t\t},\n\t\t\tfunction error(errors)\n\t\t\t{\n\t\t\t\talert(errors);\n\t\t\t\tconsole.log(errors);\n\t\t\t});\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: demographicsService.SEARCH_MODE.Name,\n\t\t\t\tterm: term,\n\t\t\t\tstatus: demographicsService.STATUS_MODE.ACTIVE,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.data.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: response.data[x].demographicNo,\n\t\t\t\t\t\t\tname: response.data[x].lastName + ', ' + response.data[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (model instanceof Object)\n\t\t\t{ //mrp set in search box\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //mrp specified in url (come back from another consults) \n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model)\n\t\t{\n\t\t\tif (item != null)\n\t\t\t{ //demo set in search box\n\t\t\t\tcontroller.search.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.consult.demographicName = item.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{ //demo specified in url (come back from another consults)\n\t\t\t\tdemographicService.getDemographic(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consult.demographicName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tvar url = \"/record/\" + consult.demographic.demographicNo + \"/consult/\" + consult.id;\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = \"/record/\" + controller.search.demographicNo + \"/consult/new\";\n\t\t\t$location.path(url).search(controller.searchParams);\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.search.demographicNo = null;\n\t\t\tcontroller.consult.demographicName = null;\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch()\n\t\t{\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\n\t\t\tvar searchDemoNo = $state.params.demographicNo == null ? null : Number($state.params.demographicNo);\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t\tdemographicNo: searchDemoNo\n\t\t\t};\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\t//retain search & filters for users to come back\n\t\tcontroller.setSearchParams = function setSearchParams()\n\t\t{\n\t\t\tcontroller.searchParams = {};\n\n\t\t\tif ($state.$current.name === \"record.consultRequests\")\n\t\t\t\tcontroller.searchParams.list = \"patient\";\n\t\t\telse if (controller.search.demographicNo != null) controller.searchParams.srhDemoNo = controller.search.demographicNo;\n\n\t\t\tif (controller.search.mrpNo != null) controller.searchParams.srhMrpNo = controller.search.mrpNo;\n\t\t\tif (controller.search.status != null) controller.searchParams.srhStatus = controller.search.status;\n\t\t\tif (controller.search.team != allTeams) controller.searchParams.srhTeam = controller.search.team;\n\t\t\tif (controller.search.referralStartDate != null) controller.searchParams.srhRefStartDate = controller.search.referralStartDate.getTime();\n\t\t\tif (controller.search.referralEndDate != null) controller.searchParams.srhRefEndDate = controller.search.referralEndDate.getTime();\n\t\t\tif (controller.search.appointmentStartDate != null) controller.searchParams.srhApptStartDate = controller.search.appointmentStartDate.getTime();\n\t\t\tif (controller.search.appointmentEndDate != null) controller.searchParams.srhApptEndDate = controller.search.appointmentEndDate.getTime();\n\n\t\t\tif (controller.search.page != null) controller.searchParams.srhToPage = controller.search.page;\n\t\t\tif (controller.search.perPage != null) controller.searchParams.srhCountPerPage = controller.search.perPage;\n\t\t\tif (controller.search.sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.searchParams.srhSortMode = controller.search.sortColumn;\n\t\t\t\tcontroller.searchParams.srhSortDir = controller.search.sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.justOpen = true;\n\n\t\t// default parameters\n\t\tcontroller.search.sortColumn=\"ReferralDate\";\n\t\tcontroller.search.sortDirection=\"desc\";\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting: {\n\t\t\t\tReferralDate: 'desc'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tif (controller.justOpen)\n\t\t\t\t{\n\t\t\t\t\tcontroller.getSavedSearchVals();\n\t\t\t\t\tcontroller.justOpen = false;\n\t\t\t\t}\n\n\t\t\t\tcontroller.setSearchParams();\n\n\t\t\t\tvar count = params.url().count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t// shouldn't need these anymore\n\t\t\t\t//TODO refactor out of all uses here (I think these are used elsewhere).\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\t// need to parse out the ng-tables sort column/direction values\n\t\t\t\t// for use in our get parameters.\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// copy to the get parameters hash\n\t\t\t\tvar search1 = angular.copy(controller.search);\n\n\t\t\t\tif (search1.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\tsearch1.team = null;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchRequests(search1).then(\n\t\t\t\t\tfunction success(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(result.meta.total));\n\n\t\t\t\t\t\tfor (var i = 0; i < result.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = result.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status == controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency == controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add notification if outstanding (incomplete requests > 1 month)\n\t\t\t\t\t\t\tif (consult.status != 4 && consult.status != 5 && consult.status != 7)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar refDate = moment(consult.referralDate).toDate();\n\t\t\t\t\t\t\t\trefDate.setMonth(refDate.getMonth() + 1);\n\t\t\t\t\t\t\t\tif ((new Date()) >= refDate)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.outstanding = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.lastResponse = result.data;\n\t\t\t\t\t\treturn result.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(errors);\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tcontroller.getSavedSearchVals = function getSavedSearchVals()\n\t\t{\n\t\t\t//process demographicNo in url, run only once\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\t//called from patient record\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.search.demographicNo = Number($state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\t//come back from another consults\n\t\t\t\tcontroller.search.demographicNo = Number($location.search().srhDemoNo);\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\n\t\t\t//process other search parameters in url\n\t\t\tif ($location.search().srhMrpNo != null)\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number($location.search().srhMrpNo);\n\t\t\t\tcontroller.updateMrpNo($location.search().srhMrpNo);\n\t\t\t}\n\t\t\tif ($location.search().srhRefStartDate != null) controller.search.referralStartDate = new Date(Number($location.search().srhRefStartDate));\n\t\t\tif ($location.search().srhRefEndDate != null) controller.search.referralEndDate = new Date(Number($location.search().srhRefEndDate));\n\t\t\tif ($location.search().srhApptStartDate != null) controller.search.appointmentStartDate = new Date(Number($location.search().srhApptStartDate));\n\t\t\tif ($location.search().srhApptEndDate != null) controller.search.appointmentEndDate = new Date(Number($location.search().srhApptEndDate));\n\t\t\tif ($location.search().srhStatus != null) controller.search.status = Number($location.search().srhStatus);\n\t\t\tif ($location.search().srhTeam != null) controller.search.team = $location.search().srhTeam;\n\t\t\tif ($location.search().srhCountPerPage != null) controller.search.perPage = $location.search().srhCountPerPage;\n\n\t\t\tif ($location.search().srhToPage != null) controller.search.page = $location.search().srhToPage;\n\t\t\tif ($location.search().srhSortMode != null && $location.search().srhSortDir != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortMode;\n\t\t\t\tcontroller.search.sortDirection = $location.search().srhSortDir;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.popup = function popup(vheight, vwidth, varpage, winname)\n\t\t{\n\t\t\twindowprops = \"height=\" + vheight + \",width=\" + vwidth + \",location=no,scrollbars=yes,menubars=no,toolbars=no,resizable=yes,screenX=0,screenY=0,top=0,left=0\";\n\t\t\tvar popup = window.open(varpage, winname, windowprops);\n\t\t\tif (popup != null)\n\t\t\t{\n\t\t\t\tif (popup.opener == null)\n\t\t\t\t{\n\t\t\t\t\tpopup.opener = self;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultRequestController', [\n\n\t'$scope',\n\t'$http',\n\t'$q',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$q,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.consult = consult;\n\n\t\tconsole.log(consult);\n\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\tconsult.serviceList = Juno.Common.Util.toArray(consult.serviceList);\n\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultRequestStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\t//set demographic info\n\t\t\tdemographicService.getDemographic(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic = results;\n\n\t\t\t\t\t//set cell phone\n\t\t\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//set specialist list\n\t\t\tfor (var i = 0; i < consult.serviceList.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.serviceList[i].serviceId == consult.serviceId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[i].specialists);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tangular.forEach(controller.specialists, function(spec)\n\t\t\t{\n\t\t\t\tif (consult.professionalSpecialist && spec.id == consult.professionalSpecialist.id)\n\t\t\t\t{\n\t\t\t\t\tconsult.professionalSpecialist = spec;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = 0;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t},\n\t\t\tfunction(newVal, oldVal)\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.changeService = function changeService(id)\n\t\t{\n\t\t\tvar index = $(\"#serviceId\")[0].selectedIndex;\n\t\t\tif (index === null)\n\t\t\t{\n\t\t\t\t$scope.specialists = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.specialists = Juno.Common.Util.toArray(consult.serviceList[index].specialists);\n\t\t};\n\n\t\tcontroller.writeToBox = function writeToBox(results, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(results.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t// New function, doesn't work\n\t\tcontroller.getAllergies = function getAllergies(boxId)\n\t\t{\n\t\t\tsummaryService.getAllergies(consult.demographicId).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\t\t\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.professionalSpecialist)\n\t\t\t{\n\t\t\t\talert(\"Please select a Specialist\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (controller.consult.demographic == null || controller.consult.demographic == \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour != null && consult.appointmentMinute != null && !consult.patientWillBook)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t\t{\n\t\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\t\tcontroller: 'Consults.ConsultRequestAttachmentController as consultAttachmentCtrl',\n\t\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsult: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn consult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success()\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.error(errors);\n\t\t\t\t});\n\t\t};\n\n\t\t//show/hide e-send button\n\t\tcontroller.setESendEnabled = function setESendEnabled()\n\t\t{\n\t\t\tcontroller.eSendEnabled = consult.professionalSpecialist != null && consult.professionalSpecialist.eDataUrl != null && consult.professionalSpecialist.eDataUrl.trim() != \"\";\n\t\t};\n\n\t\tcontroller.setESendEnabled(); //execute once on form open\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar valid = true;\n\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t\tif (controller.invalidData())\n\t\t\t{\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tif(valid)\n\t\t\t{\n\t\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\t\tcontroller.setAppointmentTime();\n\n\t\t\t\tconsultService.saveRequest(consult).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (consult.id == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consult/\" + results.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeferred.resolve(results.id);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t\tdeferred.reject(errors);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(\n\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.setESendEnabled();\n\t\t\t\t\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\t\t\t\t\tcontroller.consultChanged = 0; //reset change count\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdeferred.reject(\"Invalid\");\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\")\n\t\t\t{\n\t\t\t\t$location.path(\"/record/\" + consult.demographicId + \"/consults\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$location.path(\"/consults\");\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndFax = function saveAndFax()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tvar demographicNo = consult.demographicId;\n\t\t\t\t\tvar letterheadFax = Juno.Common.Util.noNull(consult.letterhead.fax);\n\t\t\t\t\tvar fax = Juno.Common.Util.noNull(consult.professionalSpecialist.faxNumber);\n\n\t\t\t\t\twindow.open(\"../fax/CoverPage.jsp?reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&faxRecipients=\" + fax);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.eSend = function eSend()\n\t\t{\n\t\t\tif (controller.eSendEnabled)\n\t\t\t{\n\t\t\t\tconsultService.eSendRequest(consult.id).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\talert(results.message);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.saveAndPrint = function saveAndPrint()\n\t\t{\n\t\t\tcontroller.save().then(\n\t\t\t\tfunction success(reqId)\n\t\t\t\t{\n\t\t\t\t\tcontroller.print(reqId);\n\t\t\t\t},\n\t\t\t\tfunction failure(error)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tcontroller.print = function print(reqId)\n\t\t{\n\t\t\twindow.open(\"../oscarEncounter/oscarConsultationRequest/printPdf2.do?reqId=\" + reqId + \"&demographicNo=\" + consult.demographicId);\n\t\t};\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseListController', [\n\n\t'$scope',\n\t'$timeout',\n\t'$state',\n\t'$location',\n\t'NgTableParams',\n\t'consultService',\n\t'providerService',\n\t'demographicService',\n\t'demographicsService',\n\t'securityService',\n\t'staticDataService',\n\n\tfunction(\n\t\t$scope,\n\t\t$timeout,\n\t\t$state,\n\t\t$location,\n\t\tNgTableParams,\n\t\tconsultService,\n\t\tproviderService,\n\t\tdemographicService,\n\t\tdemographicsService,\n\t\tsecurityService,\n\t\tstaticDataService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.onRecordPage = false;\n\t\tcontroller.demographicNo = null;\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses(); \t//set search statuses\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies(); //get urgencies list\n\t\tcontroller.lastResponse = \"\";\n\t\tcontroller.teams = [];\n\t\tcontroller.consult = {};\n\n\t\tvar allTeams = \"All Teams\";\n\t\tcontroller.search = {\n\t\t\tteam: allTeams,\n\t\t\tstartIndex: 0,\n\t\t\tnumToReturn: 10\n\t\t};\n\n\n\n\t\t// Initialize the controller\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tif($state.params.demographicNo){\n\t\t\t\tcontroller.demographicNo = parseInt($state.params.demographicNo);\n\t\t\t\tcontroller.onRecordPage = true;\n\t\t\t\tcontroller.search.list = \"patient\";\n\t\t\t}\n\n\t\t\tcontroller.getAccessRights();\n\t\t\tcontroller.getTeams();\n\t\t};\n\n\t\tcontroller.getAccessRights = function getAccessRights()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results; //to be used with batch operations (not yet implemented)\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\n\t\tcontroller.getTeams = function getTeams()\n\t\t{\n\t\t\tproviderService.getActiveTeams().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.teams = results;\n\t\t\t\t\tcontroller.teams.unshift(allTeams);\n\t\t\t\t\tcontroller.search.team = allTeams;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\ttype: demographicsService.SEARCH_MODE.Name,\n\t\t\t\tterm: term,\n\t\t\t\tstatus: demographicsService.STATUS_MODE.ACTIVE,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\t\t\treturn demographicsService.search(search, 0, 25).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.data.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdemographicNo: results.data[x].demographicNo,\n\t\t\t\t\t\t\tname: results.data[x].lastName + ', ' + results.data[x].firstName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.searchMrps = function searchMrps(term)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: term,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmrpNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.updateMrpNo = function updateMrpNo(model)\n\t\t{\n\t\t\tif (Juno.Common.Util.exists(model))\n\t\t\t{\n\t\t\t\tcontroller.search.mrpNo = Number(model.mrpNo);\n\t\t\t\tcontroller.consult.mrpName = model.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproviderService.getProvider(model).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.search.mrpNo = Number(model);\n\t\t\t\t\t\tcontroller.consult.mrpName = results.lastName + \", \" + results.firstName;\n\t\t\t\t\t\tcontroller.doSearch(true);\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.updateDemographicNo = function updateDemographicNo(item, model, label)\n\t\t{\n\t\t\tif(item !== null)\n\t\t\t{\n\t\t\t\tcontroller.demographicName = item.name;\n\t\t\t\tcontroller.demographicNo = item.demographicNo;\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.checkAll = function checkAll()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = true;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.checkNone = function checkNone()\n\t\t{\n\t\t\tangular.forEach(controller.lastResponse, function(item)\n\t\t\t{\n\t\t\t\titem.checked = false;\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editConsult = function editConsult(consult)\n\t\t{\n\t\t\tif(consult)\n\t\t\t{\n\t\t\t\turl = \"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + consult.id;\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.addConsult = function addConsult()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to create new consult response\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// User shouldn't be able to access this function unless demoNo is populated, but check just in case\n\t\t\tif(controller.demographicNo)\n\t\t\t{\n\t\t\t\tvar url = \"/record/\" + controller.demographicNo + \"/consultResponse/new\";\n\t\t\t\t$location.path(url).search(controller.search);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\talert(\"Something went wrong\");\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.removeDemographicAssignment = function removeDemographicAssignment()\n\t\t{\n\t\t\tcontroller.demographicNo = null;\n\t\t\tcontroller.demographicName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.removeMrpAssignment = function removeMrpAssignment()\n\t\t{\n\t\t\tcontroller.search.mrpNo = null;\n\t\t\tcontroller.consult.mrpName = null;\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clear = function clear()\n\t\t{\n\t\t\tif(!controller.onRecordPage)\n\t\t\t\tcontroller.removeDemographicAssignment();\n\t\t\tcontroller.removeMrpAssignment();\n\t\t\tcontroller.search = {\n\t\t\t\tteam: allTeams,\n\t\t\t\tstartIndex: 0,\n\t\t\t\tnumToReturn: 10,\n\t\t\t};\n\n\t\t\tcontroller.doSearch();\n\t\t};\n\n\t\tcontroller.doSearch = function doSearch(init)\n\t\t{\n\t\t\t$location.search(controller.search);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.tableParams = new NgTableParams(\n\t\t{\n\t\t\tpage: 1, // show first page\n\t\t\tcount: 10, // initial count per page\n\t\t\tsorting:\n\t\t\t{\n\t\t\t\tReferralDate: 'desc' // initial sorting\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// total: 0, // length of data\n\t\t\tgetData: function(params)\n\t\t\t{\n\t\t\t\tcontroller.getSavedSearchParams();\n\t\t\n\t\t\t\tvar count = params._params.count;\n\t\t\t\tvar page = params.url().page;\n\n\t\t\t\tcontroller.search.startIndex = ((page - 1) * count);\n\t\t\t\tcontroller.search.numToReturn = parseInt(count);\n\n\t\t\t\tcontroller.search.page = params.url().page;\n\t\t\t\tcontroller.search.perPage = params.url().count;\n\n\t\t\t\tvar myRegexp = /sorting\\[(\\w+)\\]/g;\n\t\t\t\tfor(var key in params.url()) {\n\t\t\t\t\tvar match = myRegexp.exec(String(key));\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcontroller.search.sortColumn = match[1];\n\t\t\t\t\t\tcontroller.search.sortDirection = params.url()[String(key)];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar tmpSearch = angular.copy(controller.search);\n\n\t\t\t\tif (tmpSearch.team === allTeams)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.team = null;\n\t\t\t\t}\n\n\t\t\t\tif(controller.demographicNo)\n\t\t\t\t{\n\t\t\t\t\ttmpSearch.demographicNo = controller.demographicNo;\n\t\t\t\t}\n\n\t\t\t\treturn consultService.searchResponses(tmpSearch).then(\n\t\t\t\t\tfunction success(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tparams.total(parseInt(results.meta.total[0]));\n\n\t\t\t\t\t\tfor (var i = 0; i < results.data.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar consult = results.data[i];\n\n\t\t\t\t\t\t\t//add statusDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.statuses.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.status === controller.statuses[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.statusDescription = controller.statuses[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyDescription\n\t\t\t\t\t\t\tfor (var j = 0; j < controller.urgencies.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (consult.urgency === controller.urgencies[j].value)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconsult.urgencyDescription = controller.urgencies[j].name;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//add urgencyColor if consult urgency=Urgent(1)\n\t\t\t\t\t\t\tif (consult.urgency === 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsult.urgencyColor = \"text-danger\"; //= red text\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.lastResponse = results.data;\n\t\t\t\t\t\treturn results.data;\n\t\t\t\t\t},\n\t\t\t\t\tfunction error(errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcontroller.getSavedSearchParams = function getSavedSearchParams()\n\t\t{\n\t\t\t//process search parameters\n\t\t\tif ($state.params.demographicNo != null)\n\t\t\t{\n\t\t\t\tcontroller.hideSearchPatient = true;\n\t\t\t\tcontroller.updateDemographicNo(null, $state.params.demographicNo);\n\t\t\t}\n\t\t\telse if ($location.search().srhDemoNo != null)\n\t\t\t{\n\t\t\t\tcontroller.updateDemographicNo(null, $location.search().srhDemoNo);\n\t\t\t}\n\t\t\tif ($location.search().srhMrpNo != null) controller.updateMrpNo($location.search().srhMrpNo);\n\t\t\tif ($location.search().referralStartDate) controller.search.referralStartDate = new Date($location.search().referralStartDate);\n\t\t\tif ($location.search().referralEndDate != null) controller.search.referralEndDate = new Date($location.search().referralEndDate);\n\t\t\tif ($location.search().appointmentStartDate != null) controller.search.appointmentStartDate = new Date($location.search().appointmentStartDate);\n\t\t\tif ($location.search().appointmentEndDate != null) controller.search.appointmentEndDate = new Date($location.search().appointmentEndDate);\n\t\t\tif ($location.search().status != null) controller.search.status = Number($location.search().status);\n\t\t\tif ($location.search().team != null) controller.search.team = $location.search().team;\n\t\t\tif ($location.search().countPerPage != null) controller.countPerPage = $location.search().countPerPage;\n\t\t\tif ($location.search().toPage != null) controller.toPage = $location.search().toPage;\n\t\t\tif ($location.search().sortColumn != null && $location.search().sortDirection != null)\n\t\t\t{\n\t\t\t\tcontroller.search.sortColumn = $location.search().sortColumn;\n\t\t\t\tcontroller.search.sortDirection = $location.search().sortDirection;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Consults').controller('Consults.ConsultResponseController', [\n\n\t'$scope',\n\t'$http',\n\t'$resource',\n\t'$location',\n\t'$uibModal',\n\t'consultService',\n\t'demographicService',\n\t'securityService',\n\t'summaryService',\n\t'staticDataService',\n\t'consult',\n\t'user',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$resource,\n\t\t$location,\n\t\t$uibModal,\n\t\tconsultService,\n\t\tdemographicService,\n\t\tsecurityService,\n\t\tsummaryService,\n\t\tstaticDataService,\n\t\tconsult,\n\t\tuser)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.initialize = function()\n\t\t{\n\t\t\t//get access rights\n\t\t\tsecurityService.hasRight(\"_con\", \"r\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultReadAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"u\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultUpdateAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tsecurityService.hasRight(\"_con\", \"w\").then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tcontroller.consultWriteAccess = results;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\n\t\t\tcontroller.consult = consult;\n\t\t\tconsult.referringDoctorList = Juno.Common.Util.toArray(consult.referringDoctorList);\n\t\t\tconsult.faxList = Juno.Common.Util.toArray(consult.faxList);\n\t\t\tconsult.sendToList = Juno.Common.Util.toArray(consult.sendToList);\n\n\t\t\t//set attachments\n\t\t\tconsult.attachments = Juno.Common.Util.toArray(consult.attachments);\n\t\t\tJuno.Consults.Common.sortAttachmentDocs(consult.attachments);\n\n\n\t\t\tconsultService.getLetterheadList().then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tconsult.letterheadList = Juno.Common.Util.toArray(results.data);\n\n\t\t\t\t\t//set default letterhead\n\t\t\t\t\tif(consult.letterhead === null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < consult.letterheadList.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (consult.letterheadList[i].id === consult.letterheadName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.changeLetterhead(consult.letterheadList[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t//show referringDoctor in list\n\t\t\tangular.forEach(consult.referringDoctorList, function(referringDoc)\n\t\t\t{\n\t\t\t\tif(consult.referringDoctor !== null)\n\t\t\t\t{\n\t\t\t\t\tif (referringDoc.id === consult.referringDoctor.id)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsult.referringDoctor = referringDoc;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//set patient cell phone\n\t\t\tconsult.demographic.extras = Juno.Common.Util.toArray(consult.demographic.extras);\n\t\t\tfor (var i = 0; i < consult.demographic.extras.length; i++)\n\t\t\t{\n\t\t\t\tif (consult.demographic.extras[i].key == \"demo_cell\")\n\t\t\t\t{\n\t\t\t\t\tconsult.demographic.cellPhone = consult.demographic.extras[i].value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcontroller.initialize();\n\n\t\tcontroller.changeLetterhead = function changeLetterhead(letterhead)\n\t\t{\n\t\t\tconsult.letterhead = letterhead;\n\n\t\t\t// these are required for current print functionality\n\t\t\tconsult.letterheadName = consult.letterhead.id;\n\t\t\tconsult.letterheadAddress = consult.letterhead.address;\n\t\t\tconsult.letterheadPhone = consult.letterhead.phone;\n\t\t\tconsult.letterheadFax = consult.letterhead.fax;\n\t\t};\n\n\n\t\tcontroller.urgencies = staticDataService.getConsultUrgencies();\n\t\tcontroller.statuses = staticDataService.getConsultResponseStatuses();\n\t\tcontroller.hours = staticDataService.getHours();\n\t\tcontroller.minutes = staticDataService.getMinutes();\n\n\t\tcontroller.parseTime = function parseTime(time)\n\t\t{\n\t\t\tvar tArray = time.split(\":\");\n\t\t\tconsult.appointmentHour = tArray[0];\n\t\t\tconsult.appointmentMinute = tArray[1];\n\t\t};\n\t\t/* If appointment time is present, we must parse the hours and minutes in order to\n\t\t   populate the hour and minute selectors */\n\t\tif (consult.appointmentTime !== null)\n\t\t{\n\t\t\tcontroller.parseTime(consult.appointmentTime);\n\n\t\t}\n\n\t\t//monitor data changed\n\t\tcontroller.consultChanged = -1;\n\t\t$scope.$watchCollection(function()\n\t\t\t{\n\t\t\t\treturn controller.consult;\n\t\t\t}, function()\n\t\t\t{\n\t\t\t\tcontroller.consultChanged++;\n\t\t\t});\n\n\t\t//remind user of unsaved data\n\t\t$scope.$on(\"$stateChangeStart\", function(event)\n\t\t{\n\t\t\tif (controller.consultChanged > 0)\n\t\t\t{\n\t\t\t\tvar discard = confirm(\"You may have unsaved data. Are you sure to leave?\");\n\t\t\t\tif (!discard) event.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tcontroller.writeToBox = function writeToBox(data, boxId)\n\t\t{\n\t\t\tvar items = Juno.Common.Util.toArray(data.summaryItem);\n\t\t\tvar boxData = null;\n\t\t\tfor (var i = 0; i < items.length; i++)\n\t\t\t{\n\t\t\t\tboxData = Juno.Common.Util.addNewLine(items[i].displayName, boxData);\n\t\t\t}\n\t\t\tif (boxId == \"clinicalInfo\") consult.clinicalInfo = Juno.Common.Util.addNewLine(boxData, consult.clinicalInfo);\n\t\t\telse if (boxId == \"concurrentProblems\") consult.concurrentProblems = Juno.Common.Util.addNewLine(boxData, consult.concurrentProblems);\n\t\t\telse if (boxId == \"currentMeds\") consult.currentMeds = Juno.Common.Util.addNewLine(boxData, consult.currentMeds);\n\t\t};\n\n\t\tcontroller.getFamilyHistory = function getFamilyHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getFamilyHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No family history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing family history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getMedicalHistory = function getMedicalHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getMedicalHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No medical history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing medical history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getSocialHistory = function getSocialHistory(boxId)\n\t\t{\n\t\t\tsummaryService.getSocialHistory(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No social history\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing social history!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOngoingConcerns = function getOngoingConcerns(boxId)\n\t\t{\n\t\t\tsummaryService.getOngoingConcerns(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No ongoing concerns\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing ongoing concerns!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getOtherMeds = function getOtherMeds(boxId)\n\t\t{\n\t\t\tsummaryService.getOtherMeds(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No other meds\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing other meds!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.getReminders = function getReminders(boxId)\n\t\t{\n\t\t\tsummaryService.getReminders(consult.demographic.demographicNo).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif(results.summaryItem.length === 0)\n\t\t\t\t\t\talert(\"No reminders\");\n\t\t\t\t\tcontroller.writeToBox(results, boxId);\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\talert(\"Error grabbing reminders!\");\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.invalidData = function invalidData()\n\t\t{\n\t\t\tif (!controller.consult.urgency)\n\t\t\t{\n\t\t\t\talert(\"Please select an Urgency\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.letterheadName)\n\t\t\t{\n\t\t\t\talert(\"Please select a Letterhead\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Juno.Common.Util.isUndefinedOrNull(controller.consult.referringDoctor))\n\t\t\t{\n\t\t\t\talert(\"Please select a Referring Doctor\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!controller.consult.demographic || controller.consult.demographic === \"\")\n\t\t\t{\n\t\t\t\talert(\"Error! Invalid patient!\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tcontroller.setAppointmentTime = function setAppointmentTime()\n\t\t{\n\t\t\tif (consult.appointmentHour !== null && consult.appointmentMinute !== null)\n\t\t\t{\n\t\t\t\tapptTime = moment(Date.now());\n\t\t\t\tapptTime.set('hours', consult.appointmentHour);\n\t\t\t\tapptTime.set('minute', consult.appointmentMinute);\n\t\t\t\tconsult.appointmentTime = apptTime;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsult.appointmentTime = null;\n\t\t\t}\n\t\t};\n\n\t\tcontroller.openAttach = function openAttach(attachment)\n\t\t{\n\t\t\twindow.open(\"../\" + attachment.url);\n\t\t};\n\n\t\tcontroller.attachFiles = function attachFiles()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: \"src/consults/consultAttachment.jsp\",\n\t\t\t\tcontroller: \"Consults.ConsultResponseAttachmentController as consultAttachmentCtrl\",\n\t\t\t\twindowClass: \"attachment-modal-window\",\n\t\t\t\tbackdrop: \"static\",\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tconsult: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn consult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (consult.attachmentsChanged)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.consultChanged++;\n\t\t\t\t\t\tconsult.attachmentsChanged = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.save = function save()\n\t\t{\n\t\t\tif (!controller.consultWriteAccess && consult.id == null)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to save new consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!controller.consultUpdateAccess)\n\t\t\t{\n\t\t\t\talert(\"You don't have right to update consult\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (controller.invalidData()) return false;\n\n\t\t\tcontroller.consultSaving = true; //show saving banner\n\t\t\tcontroller.setAppointmentTime();\n\n\t\t\tconsultService.saveResponse(consult).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\t//update url for new consultation\n\t\t\t\t\tif (consult.id === null) {\n\t\t\t\t\t\t$location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponse/\" + results.body.id);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t\tcontroller.consultSaving = false; //hide saving banner\n\t\t\tcontroller.consultChanged = -1; //reset change count\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.close = function close()\n\t\t{\n\t\t\tif ($location.search().list === \"patient\") $location.path(\"/record/\" + consult.demographic.demographicNo + \"/consultResponses\");\n\t\t\telse $location.path(\"/consultResponses\");\n\t\t};\n\n\t\t//fax & print functions\n\t\tvar p_page1 = \"<html><style>body{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}table{width:100%}th{text-align:left;font-weight:bold;width:1px;white-space:nowrap}td{vertical-align:top}label{font-weight:bold}em{font-size:small}.large{font-size:large}.center{text-align:center}</style><style media='print'>button{display:none}.noprint{display:none}</style><script>function printAttachments(url){window.open('../'+url);}</script><body>\";\n\n\t\tcontroller.sendFax = function sendFax()\n\t\t{\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = Juno.Common.Util.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tvar consultResponsePage = encodeURIComponent(p_page1 + p_page2);\n\t\t\tvar reqId = consult.id;\n\t\t\tvar demographicNo = consult.demographic.demographicNo;\n\t\t\tvar letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar fax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\n\t\t\twindow.open(\"../fax/CoverPage.jsp?consultResponsePage=\" + consultResponsePage + \"&reqId=\" + reqId + \"&demographicNo=\" + demographicNo + \"&letterheadFax=\" + letterheadFax + \"&faxRecipients=\" + fax);\n\t\t};\n\n\t\tcontroller.printPreview = function printPreview()\n\t\t{\n\t\t\tif (controller.invalidData()) return;\n\n\t\t\tvar printWin = window.open(\"\", \"consultResponsePrintWin\", \"width=830,height=900,scrollbars=yes,location=no\");\n\t\t\tprintWin.document.open();\n\n\t\t\tvar p_buttons = \"<button onclick='window.print()'>Print</button><button onclick='window.close()'>Close</button>\";\n\t\t\tvar p_attachments = \"\";\n\t\t\tfor (var i = 0; i < consult.attachments.length; i++)\n\t\t\t{\n\t\t\t\tp_attachments += \"<div class='noprint'><button onclick=printAttachments('\" + consult.attachments[i].url + \"')>Print attachment</button> \" + consult.attachments[i].displayName + \"</div>\";\n\t\t\t}\n\n\t\t\tvar p_urgency = Juno.Common.Util.toTrimmedString(controller.urgencies[$(\"#urgency\").val()].name);\n\t\t\tvar p_letterheadName = Juno.Common.Util.toTrimmedString(consult.letterheadList[$(\"#letterhead\").val()].name);\n\t\t\tvar p_page2 = controller.getPrintPage2(p_urgency, p_letterheadName, consult, user);\n\n\t\t\tprintWin.document.write(p_page1 + p_buttons + p_attachments + p_page2);\n\t\t\tprintWin.document.close();\n\t\t};\n\n\t\tcontroller.getPrintPage2 = function getPrintPage2(p_urgency, p_letterheadName, consult, user)\n\t\t{\n\t\t\tvar p_clinicName = Juno.Common.Util.toTrimmedString(consult.letterheadList[0].name);\n\t\t\tvar p_responseDate = Juno.Common.Util.formatDate(consult.responseDate);\n\t\t\tvar p_referralDate = Juno.Common.Util.formatDate(consult.referralDate);\n\t\t\tvar p_letterheadAddress = Juno.Common.Util.toTrimmedString(consult.letterheadAddress);\n\t\t\tvar p_letterheadPhone = Juno.Common.Util.toTrimmedString(consult.letterheadPhone);\n\t\t\tvar p_letterheadFax = Juno.Common.Util.toTrimmedString(consult.letterheadFax);\n\t\t\tvar p_consultantName = Juno.Common.Util.toTrimmedString(consult.referringDoctor.name);\n\t\t\tvar p_consultantPhone = Juno.Common.Util.toTrimmedString(consult.referringDoctor.phoneNumber);\n\t\t\tvar p_consultantFax = Juno.Common.Util.toTrimmedString(consult.referringDoctor.faxNumber);\n\t\t\tvar p_consultantAddress = Juno.Common.Util.toTrimmedString(consult.referringDoctor.streetAddress);\n\t\t\tvar p_patientName = Juno.Common.Util.toTrimmedString(consult.demographic.lastName) + \", \" + Juno.Common.Util.toTrimmedString(consult.demographic.firstName);\n\t\t\tvar p_patientPhone = Juno.Common.Util.toTrimmedString(consult.demographic.phone);\n\t\t\tvar p_patientWorkPhone = Juno.Common.Util.toTrimmedString(consult.demographic.alternativePhone);\n\t\t\tvar p_patientBirthdate = Juno.Common.Util.formatDate(consult.demographic.dateOfBirth);\n\t\t\tvar p_patientSex = Juno.Common.Util.toTrimmedString(consult.demographic.sexDesc);\n\t\t\tvar p_patientHealthCardNo = Juno.Common.Util.toTrimmedString(consult.demographic.hin) + \"-\" + Juno.Common.Util.toTrimmedString(consult.demographic.ver);\n\t\t\tvar p_patientChartNo = Juno.Common.Util.toTrimmedString(consult.demographic.chartNo);\n\t\t\tvar p_patientAddress = \"\";\n\t\t\tif (consult.demographic.address != null)\n\t\t\t{\n\t\t\t\tp_patientAddress = Juno.Common.Util.toTrimmedString(consult.demographic.address.address) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.city) + \", \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.province) + \" \" +\n\t\t\t\t\tJuno.Common.Util.toTrimmedString(consult.demographic.address.postal);\n\t\t\t}\n\t\t\tvar p_appointmentDate = Juno.Common.Util.formatDate(consult.appointmentDate);\n\t\t\tvar p_appointmentTime = Juno.Common.Util.formatTime(consult.appointmentTime);\n\t\t\tvar p_reason = Juno.Common.Util.toTrimmedString(consult.reasonForReferral);\n\t\t\tvar p_examination = Juno.Common.Util.toTrimmedString(consult.examination);\n\t\t\tvar p_impression = Juno.Common.Util.toTrimmedString(consult.impression);\n\t\t\tvar p_plan = Juno.Common.Util.toTrimmedString(consult.plan);\n\t\t\tvar p_clinicalInfo = Juno.Common.Util.toTrimmedString(consult.clinicalInfo);\n\t\t\tvar p_concurrentProblems = Juno.Common.Util.toTrimmedString(consult.concurrentProblems);\n\t\t\tvar p_currentMeds = Juno.Common.Util.toTrimmedString(consult.currentMeds);\n\t\t\tvar p_allergies = Juno.Common.Util.toTrimmedString(consult.allergies);\n\t\t\tvar p_provider = Juno.Common.Util.toTrimmedString(user.lastName) + \", \" + Juno.Common.Util.toTrimmedString(user.firstName);\n\n\t\t\treturn \"<div class='center'><label class='large'>\" + p_clinicName + \"</label><br/><label>Consultation Response</label><br/></div><br/><table><tr><td><label>Date: </label>\" + p_responseDate + \"</td><td rowspan=6 width=10></td><td><label>Status: </label>\" + p_urgency + \"</td></tr><tr><td colspan=2></td></tr><tr><th>FROM:</th><th>TO:</th></tr><tr><td><p class='large'>\" + p_letterheadName + \"</p>\" + p_letterheadAddress + \"<br/><label>Tel: </label>\" + p_letterheadPhone + \"<br/><label>Fax: </label>\" + p_letterheadFax + \"</td><td><table><tr><th>Referring Doctor:</th><td>\" + p_consultantName + \"</td></tr><tr><th>Phone:</th><td>\" + p_consultantPhone + \"</td></tr><tr><th>Fax:</th><td>\" + p_consultantFax + \"</td></tr><tr><th>Address:</th><td>\" + p_consultantAddress + \"</td></tr></table></td></tr><tr><td colspan=2></td></tr><tr><td><table><tr><th>Patient:</th><td>\" + p_patientName + \"</td></tr><tr><th>Address:</th><td>\" + p_patientAddress + \"</td></tr><tr><th>Phone:</th><td>\" + p_patientPhone + \"</td></tr><tr><th>Work Phone:</th><td>\" + p_patientWorkPhone + \"</td></tr><tr><th>Birthdate:</th><td>\" + p_patientBirthdate + \"</td></tr></table></td><td><table><tr><th>Sex:</th><td>\" + p_patientSex + \"</td></tr><tr><th>Health Card No:</th><td>\" + p_patientHealthCardNo + \"</td></tr><tr><th>Appointment date:</th><td>\" + p_appointmentDate + \"</td></tr><tr><th>Appointment time:</th><td>\" + p_appointmentTime + \"</td></tr><tr><th>Chart No:</th><td>\" + p_patientChartNo + \"</td></tr></table></td></tr></table><br/><table><tr><th>Examination:</th></tr><tr><td>\" + p_examination + \"<hr></td></tr><tr><th>Impression:</th></tr><tr><td>\" + p_impression + \"<hr></td></tr><tr><th>Plan:</th></tr><tr><td>\" + p_plan + \"<hr></td></tr><tr><td></td></tr><tr><th>Reason for consultation: (Date: \" + p_referralDate + \")</th></tr><tr><td>\" + p_reason + \"<hr></td></tr><tr><th>Pertinent Clinical Information:</th></tr><tr><td>\" + p_clinicalInfo + \"<hr></td></tr><tr><th>Significant Concurrent Problems:</th></tr><tr><td>\" + p_concurrentProblems + \"<hr></td></tr><tr><th>Current Medications:</th></tr><tr><td>\" + p_currentMeds + \"<hr></td></tr><tr><th>Allergies:</th></tr><tr><td>\" + p_allergies + \"<hr></td></tr><tr><td><label>Consultant: </label>\" + p_provider + \"</td></tr><tr><td></td></tr><tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr></table></body></html>\";\n\t\t};\n\t}\n]);\n\n/* html for fax & print, kept here for easy reference\n<html>\n<style>\n\tbody{width:800px;font-family:arial,verdana,tahoma,helvetica,sans serif}\n\ttable{width:100%}\n\tth{text-align:left;font-weight:bold;width:1;white-space:nowrap}\n\ttd{vertical-align:top}\n\tlabel{font-weight:bold}\n\tem{font-size:small}\n\t.large{font-size:large}\n\t.center{text-align:center}\n</style>\n<style media='print'>\n\tbutton{display:none}\n\t.noprint{display:none}\n</style>\n<script>\n\tfunction printAttachments(url){\n\t\twindow.open('../'+url);\n\t}\n</script>\n<body>\n\n<!-- Print preview page exclusive -->\n\t<!-- p_buttons -->\n\t<button onclick='window.print()'>Print</button>\n\t<button onclick='window.close()'>Close</button>\n\t<!-- p_buttons -->\n\n\t<!-- p_attachments, 1 or more -->\n\t<div class='noprint'>\n\t\t<button onclick=printAttachments('\"+consult.attachments[i].url+\"')>Print attachment</button> \"+consult.attachments[i].displayName+\"\n\t</div>\n\t<!-- p_attachments -->\n<!-- Print preview page exclusive -->\n\n\t<div class='center'>\n\t\t<label class='large'>\"+p_clinicName+\"</label><br/>\n\t\t<label>Consultation Response</label><br/>\n\t</div>\n\t<br/>\n\t<table>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<label>Date: </label>\"+p_responseDate+\"\n\t\t\t</td>\n\t\t\t<td rowspan=6 width=10></td>\n\t\t\t<td>\n\t\t\t\t<label>Status: </label>\"+p_urgency+\"\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<th>FROM:</th>\n\t\t\t<th>TO:</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<p class='large'>\"+p_letterheadName+\"</p>\n\t\t\t\t\"+p_letterheadAddress+\"<br/>\n\t\t\t\t<label>Tel: </label>\"+p_letterheadPhone+\"<br/>\n\t\t\t\t<label>Fax: </label>\"+p_letterheadFax+\"\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Referring Doctor:</th>\n\t\t\t\t\t\t<td>\"+p_consultantName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_consultantPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Fax:</th>\n\t\t\t\t\t\t<td>\"+p_consultantFax+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_consultantAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr><td colspan=2></td></tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Patient:</th>\n\t\t\t\t\t\t<td>\"+p_patientName+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Address:</th>\n\t\t\t\t\t\t<td>\"+p_patientAddress+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Work Phone:</th>\n\t\t\t\t\t\t<td>\"+p_patientWorkPhone+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Birthdate:</th>\n\t\t\t\t\t\t<td>\"+p_patientBirthdate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Sex:</th>\n\t\t\t\t\t\t<td>\"+p_patientSex+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Health Card No:</th>\n\t\t\t\t\t\t<td>\"+p_patientHealthCardNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment date:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentDate+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Appointment time:</th>\n\t\t\t\t\t\t<td>\"+p_appointmentTime+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Chart No:</th>\n\t\t\t\t\t\t<td>\"+p_patientChartNo+\"</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br/>\n\t<table>\n\t\t<tr><th>Examination:</th></tr>\n\t\t<tr><td>\"+p_examination+\"<hr></td></tr>\n\t\t<tr><th>Impression:</th></tr>\n\t\t<tr><td>\"+p_impression+\"<hr></td></tr>\n\t\t<tr><th>Plan:</th></tr>\n\t\t<tr><td>\"+p_plan+\"<hr></td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><th>Reason for consultation: (Date: \"+p_referralDate+\")</th></tr>\n\t\t<tr><td>\"+p_reason+\"<hr></td></tr>\n\t\t<tr><th>Pertinent Clinical Information:</th></tr>\n\t\t<tr><td>\"+p_clinicalInfo+\"<hr></td></tr>\n\t\t<tr><th>Significant Concurrent Problems:</th></tr>\n\t\t<tr><td>\"+p_concurrentProblems+\"<hr></td></tr>\n\t\t<tr><th>Current Medications:</th></tr>\n\t\t<tr><td>\"+p_currentMeds+\"<hr></td></tr>\n\t\t<tr><th>Allergies:</th></tr>\n\t\t<tr><td>\"+p_allergies+\"<hr></td></tr>\n\t\t<tr><td><label>Consultant: </label>\"+p_provider+\"</td></tr>\n\t\t<tr><td></td></tr>\n\t\t<tr><td><div class='center'><em>Created by: OSCAR The open-source EMR www.oscarcanada.org</em></div></td></tr>\n\t</table>\n</body>\n</html>\n*/","'use strict';\n\nangular.module('Inbox', []);","angular.module('Inbox').controller('Inbox.InboxController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);","'use strict';\n\nangular.module('Patient.Search', [ 'Common.Services' ]);\n","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.PatientSearchController', [\n\n\t'$q',\n\t'$state',\n\t'$stateParams',\n\t'$uibModal',\n\t'NgTableParams',\n\t'securityService',\n\t'demographicsService',\n\n\tfunction(\n\t\t$q,\n\t\t$state,\n\t\t$stateParams,\n\t\t$uibModal,\n\t\tNgTableParams,\n\t\tsecurityService,\n\t\tdemographicsService)\n\t{\n\t\tvar controller = {};\n\n\t\t//=========================================================================\n\t\t// Initialization\n\t\t//=========================================================================\n\n\t\tcontroller.demographicReadAccess = null;\n\t\tcontroller.search = {};\n\t\tcontroller.STATUS_MODE = demographicsService.STATUS_MODE;\n\t\tcontroller.SEARCH_MODE = demographicsService.SEARCH_MODE;\n\t\tcontroller.defaultStatus = demographicsService.STATUS_MODE.ACTIVE;\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.clearParams();\n\t\t\tif (Juno.Common.Util.exists($stateParams.term))\n\t\t\t{\n\t\t\t\tcontroller.search.term = $stateParams.term;\n\n\t\t\t\tif (!isNaN(controller.search.term))\n\t\t\t\t{\t// if looks like HIN search by hin auto-magically\n\t\t\t\t\tcontroller.search.type = demographicsService.SEARCH_MODE.Hin\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.search.status = controller.defaultStatus;\n\n\t\t\tsecurityService.hasRights(\n\t\t\t{\n\t\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tobjectName: '_demographic',\n\t\t\t\t\tprivilege: 'r'\n\t\t\t\t}]\n\t\t\t}).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tif (Juno.Common.Util.exists(results.content) && results.content.length === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.demographicReadAccess = results.content[0];\n\t\t\t\t\t\tif (controller.demographicReadAccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontroller.initTable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('failed to load rights', results);\n\t\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\tcontroller.demographicReadAccess = false;\n\t\t\t\t});\n\t\t};\n\n\t\t//=========================================================================\n\t\t// Methods\n\t\t//=========================================================================\n\n\t\tcontroller.initTable = function initTable()\n\t\t{\n\t\t\tcontroller.tableParams = new NgTableParams(\n\t\t\t{\n\t\t\t\tpage: 1,\n\t\t\t\tcount: 10,\n\t\t\t\tsorting:\n\t\t\t\t{\n\t\t\t\t\tDemographicName: 'asc'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tgetData: function(params)\n\t\t\t\t{\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\tvar count = params.url().count;\n\t\t\t\t\tvar page = params.url().page;\n\n\t\t\t\t\tcontroller.search.params = params.url();\n\n\t\t\t\t\tvar promiseArray = [];\n\t\t\t\t\tpromiseArray.push(demographicsService.search(\n\t\t\t\t\t\tcontroller.search, page, count));\n\n\t\t\t\t\tcontroller.integratorResults = null;\n\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t{\n\t\t\t\t\t\tpromiseArray.push(demographicsService.searchIntegrator(\n\t\t\t\t\t\t\tcontroller.search, 100));\n\t\t\t\t\t}\n\n\t\t\t\t\t$q.all(promiseArray).then(\n\t\t\t\t\t\tfunction success(results)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar demographicSearchResults = results[0];\n\t\t\t\t\t\t\tparams.total(demographicSearchResults.meta.total);\n\n\t\t\t\t\t\t\tif (controller.search.integrator)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontroller.integratorResults = results[1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdeferred.resolve(demographicSearchResults.data);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction error(promiseErrors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('patient search failed', promiseErrors);\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.searchPatients = function searchPatients()\n\t\t{\n\t\t\tif (controller.search.type === demographicsService.SEARCH_MODE.DOB)\n\t\t\t{\n\t\t\t\tvar dobMoment = moment(controller.search.term, [\"YYYY-MM-DD\", \"YYYY/MM/DD\"], true);\n\t\t\t\tif (dobMoment.isValid())\n\t\t\t\t{\n\t\t\t\t\tcontroller.search.term = dobMoment.format(\"YYYY-MM-DD\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\talert(\"Please enter Date of Birth in format YYYY-MM-DD.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// reset to page 1 for new searches\n\t\t\tcontroller.tableParams.page(1);\n\t\t\tcontroller.tableParams.reload();\n\t\t};\n\n\t\tcontroller.clearParams = function(searchType)\n\t\t{\n\t\t\t// default search type\n\t\t\tif (!Juno.Common.Util.exists(searchType))\n\t\t\t{\n\t\t\t\tsearchType = demographicsService.SEARCH_MODE.Name;\n\t\t\t}\n\n\t\t\t// reset the parameters\n\t\t\tcontroller.search = {\n\t\t\t\ttype: searchType,\n\t\t\t\tterm: '',\n\t\t\t\tstatus: controller.defaultStatus,\n\t\t\t\tintegrator: false,\n\t\t\t\toutofdomain: true\n\t\t\t};\n\n\t\t\t// update the placeholder\n\t\t\tcontroller.searchTermPlaceHolder = (controller.search.type === demographicsService.SEARCH_MODE.DOB) ?\n\t\t\t\t\"YYYY-MM-DD\" : \"Search Term\";\n\n\t\t\t// do the search (if initialized)\n\t\t\tif (Juno.Common.Util.exists(controller.tableParams))\n\t\t\t{\n\t\t\t\tcontroller.tableParams.page(1);\n\t\t\t\tcontroller.tableParams.reload();\n\t\t\t}\n\t\t};\n\n\t\tcontroller.toggleParam = function toggleParam(param)\n\t\t{\n\t\t\tif (['integrator', 'outofdomain'].indexOf(param) > -1)\n\t\t\t{\n\t\t\t\tcontroller.search[param] = !controller.search[param];\n\t\t\t}\n\t\t};\n\n\t\tcontroller.loadRecord = function loadRecord(demographicNo)\n\t\t{\n\t\t\t$state.go('record.details',\n\t\t\t{\n\t\t\t\tdemographicNo: demographicNo,\n\t\t\t\thideNote: true\n\t\t\t});\n\t\t};\n\n\t\tcontroller.showIntegratorResults = function showIntegratorResults()\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar total = 0;\n\n\t\t\tif (Juno.Common.Util.exists(controller.integratorResults))\n\t\t\t{\n\t\t\t\tresults = controller.integratorResults.content;\n\t\t\t\ttotal = controller.integratorResults.total;\n\t\t\t}\n\n\t\t\t$uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/patientsearch/remotePatientResults.jsp',\n\t\t\t\tcontroller: 'RemotePatientResultsController',\n\t\t\t\tresolve:\n\t\t\t\t{\n\t\t\t\t\tresults: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t},\n\t\t\t\t\ttotal: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn controller;\n\t}\n]);","'use strict';\n\n/*\n\n Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved.\n This software is published under the GPL GNU General Public License.\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n as published by the Free Software Foundation; either version 2\n of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n This software was written for the\n Department of Family Medicine\n McMaster University\n Hamilton\n Ontario, Canada\n\n */\nangular.module('Patient.Search').controller('Patient.Search.RemotePatientResultsController', [\n\n\t'$http',\n\t'$scope',\n\t'$uibModalInstance',\n\t'results',\n\t'total',\n\n\tfunction(\n\t\t$http,\n\t\t$scope,\n\t\t$uibModalInstance,\n\t\tresults,\n\t\ttotal)\n\t{\n\t\t$scope.results = results;\n\t\t$scope.total = total;\n\n\t\t$scope.currentPage = 1;\n\t\t$scope.pageSize = 5;\n\t\t$scope.startIndex = 0;\n\n\n\t\t$scope.close = function close()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.doImport = function doImport(d)\n\t\t{\n\t\t\tvar myUrl = '../appointment/copyRemoteDemographic.jsp?remoteFacilityId=' + d.remoteFacilityId + '&demographic_no=' + d.demographicNo;\n\t\t\twindow.open(myUrl, \"ImportDemo\", \"width=700, height=1027\");\n\t\t};\n\n\t\t$scope.save = function save()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\n\t\t$scope.prevPage = function prevPage()\n\t\t{\n\t\t\tif ($scope.startIndex == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage--;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\n\t\t};\n\n\t\t$scope.nextPage = function nextPage()\n\t\t{\n\t\t\tif ($scope.startIndex + $scope.pageSize > $scope.total)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$scope.currentPage++;\n\t\t\t$scope.startIndex = ($scope.currentPage - 1) * $scope.pageSize;\n\t\t};\n\n\n\t}\n]);","'use strict';\n\nangular.module('Report', ['Common', 'Common.Services']);","// Figure out what to do with this. \nangular.module('oscarProviderViewModule').factory('ReportNavigation', [ '$rootScope', function($rootScope)\n{\n\treturn {\n\t\tlocation: '',\n\n\t\tload: function(msg)\n\t\t{\n\t\t\tthis.location = msg;\n\t\t}\n\t};\n}]);\n\nangular.module('Report').controller('Report.ReportsController', [\n\n\t'$scope',\n\t'$state',\n\t'$filter',\n\t'$log',\n\t'ReportNavigation',\n\n\tfunction(\n\t\t$scope,\n\t\t$state,\n\t\t$filter,\n\t\t$log,\n\t\tReportNavigation)\n\t{\n\n\t\tvar controller = this;\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.reports = [\n\t\t\t{\n\t\t\t\tnumberLabel: \"1\",\n\t\t\t\tname: 'EDB List',\n\t\t\t\ttemplateUrl: 'src/report/report_edb_list.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"2\",\n\t\t\t\tname: 'Active Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportactivepatientlist.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"3\",\n\t\t\t\tname: 'Daysheets',\n\t\t\t\ttemplateUrl: 'src/report/report_daysheet.jsp',\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"5\",\n\t\t\t\tname: 'Bad Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_badAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"6\",\n\t\t\t\tname: 'Patient Chart List',\n\t\t\t\ttemplateUrl: 'src/report/report_patientChartList.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"7\",\n\t\t\t\tname: 'Old Patients',\n\t\t\t\ttemplateUrl: 'src/report/report_oldPatients.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"8\",\n\t\t\t\tname: 'No Show Appointments',\n\t\t\t\ttemplateUrl: 'src/report/report_noShowAppointments.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"9\",\n\t\t\t\tname: 'Consultations',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ConsultationReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"10\",\n\t\t\t\tname: 'Lab Requisitions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/LabReqReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"11\",\n\t\t\t\tname: 'Demographic Report Tool',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/ReportDemographicReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"13\",\n\t\t\t\tname: 'Preventions',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarPrevention/PreventionReporting.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"14\",\n\t\t\t\tname: 'Patient Study List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/demographicstudyreport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"15\",\n\t\t\t\tname: 'Chronic Disease Management',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/oscarMeasurements/SetupSelectCDMReport.do'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"16\",\n\t\t\t\tname: 'Waiting List',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarWaitingList/SetupDisplayWaitingList.do?waitingListId='\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"17\",\n\t\t\t\tname: 'Forms',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportFormRecord.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"18\",\n\t\t\t\tname: 'SCBP demographic Report',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/reportBCARDemo.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"19\",\n\t\t\t\tname: 'Clinical',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../report/ClinicalReports.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"20\",\n\t\t\t\tname: 'Injections',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/InjectionReport2.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"21\",\n\t\t\t\tname: 'OSIS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/OSISReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"22\",\n\t\t\t\tname: 'One Time Consult CDS Report',\n\t\t\t\tgroup: 'Public Health',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/CDSOneTimeConsultReport.jsp'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnumberLabel: \"23\",\n\t\t\t\tname: 'Report By Template',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/reportByTemplate/homePage.jsp'\n\t\t\t},\n\t\t];\n\n\t\tcontroller.init = function init()\n\t\t{\n\t\t\tcontroller.reportGroup = \"\";\n\t\t\tcontroller.reportGroups = controller.getReportGroups();\n\t\t\tcontroller.reportSidebar = ReportNavigation;\n\t\t\tcontroller.test = controller.reportSidebar.url;\n\t\t};\n\n\t\tcontroller.editDemographicSet = function editDemographicSet()\n\t\t{\n\t\t\tcontroller.selectReport(\n\t\t\t{\n\t\t\t\tname: 'Demographic Set Edit',\n\t\t\t\ttemplateUrl: 'src/report/report_iframe.jsp',\n\t\t\t\tiframeUrl: '../oscarReport/demographicSetEdit.jsp'\n\t\t\t});\n\t\t};\n\n\t\tcontroller.getReports = function getReports()\n\t\t{\n\t\t\tif (controller.reportGroup != null && controller.reportGroup.length > 0)\n\t\t\t{\n\t\t\t\tvar filtered = $filter('filter')(controller.reports,\n\t\t\t\t{\n\t\t\t\t\tgroup: controller.reportGroup\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\n\t\t\t}\n\t\t\treturn controller.reports;\n\t\t};\n\n\t\tcontroller.getReportGroups = function getReportGroups()\n\t\t{\n\t\t\tvar groups = [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: 'All Groups'\n\t\t\t}];\n\t\t\tvar groupMap = {};\n\n\t\t\tfor (var i = 0; i < controller.reports.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.reports[i].group != null)\n\t\t\t\t{\n\t\t\t\t\tgroupMap[controller.reports[i].group] = controller.reports[i].group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in groupMap)\n\t\t\t{\n\t\t\t\tgroups.push(\n\t\t\t\t{\n\t\t\t\t\tvalue: key,\n\t\t\t\t\tlabel: key\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t};\n\n\t\tcontroller.selectReport = function selectReport(report)\n\t\t{\n\t\t\tcontroller.currentReport = report;\n\n\t\t\tif (report.direct === true)\n\t\t\t{\n\t\t\t\twindow.open(report.window.url, report.name, 'width=' + report.window.width + '&height=' + report.window.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tReportNavigation.load(report.templateUrl);\n\t\t\t}\n\t\t};\n\n\n\t\t// controller.selectReport(controller.reports[0]);\n\n\t\t// controller.openReportWindow = function openReportWindow(url, name)\n\t\t// {\n\t\t// \twindow.open(url, name, 'height=900,width=700');\n\t\t// };\n\t}\n]);","angular.module('Report').controller('Report.ReportBadAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '../report/reportapptsheet.jsp?dsmode=all&provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_badApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportDaySheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\ttype: '',\n\t\t\tstartDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\tendDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\tstartTime: null,\n\t\t\tendTime: null\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.data.providerNo = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (p.type === 'all' || p.type === 'all-nr')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar endDate = $filter('date')(p.endDate, 'yyyy-MM-dd');\n\n\t\t\t\tvar startTime = $filter('date')(p.startTime, 'HH:mm');\n\t\t\t\tvar endTime = $filter('date')(p.endTime, 'HH:mm');\n\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=all&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate + '&edate=' + endDate + '&sTime=' + startTime + '&eTime=' + endTime;\n\n\t\t\t\tif (p.type === 'all-nr')\n\t\t\t\t{\n\t\t\t\t\turl += '&rosteredStatus=true';\n\t\t\t\t}\n\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\n\t\t\tif (p.type === 'new')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/reportdaysheet.jsp?dsmode=new&provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'lab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=labDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\n\t\t\t}\n\t\t\tif (p.type === 'billing')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/printLabDaySheetAction.do?xmlStyle=billDaySheet.xml&input_date=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t\tif (p.type === 'tab')\n\t\t\t{\n\t\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\t\tvar url = '../report/tabulardaysheetreport.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&sdate=' + startDate;\n\t\t\t\twindow.open(url, 'report_daysheet', 'height=900,width=700');\n\t\t\t}\n\t\t};\n\n\t\tcontroller.reset = function reset()\n\t\t{\n\t\t\tcontroller.params = {\n\t\t\t\tproviderNo: '',\n\t\t\t\ttype: '',\n\t\t\t\tstartDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\t\tendDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\t\tstartTime: null,\n\t\t\t\tendTime: null\n\t\t\t};\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportEdbListController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tstartDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\tendDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t\tversion: '',\n\t\t\tregion: 'ON'\n\t\t}; //todo: grab region from somewhere\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\t$log.log('run edb report');\n\t\t\tvar startDate = $filter('date')(controller.params.startDate, 'yyyy-MM-dd');\n\t\t\tvar endDate = $filter('date')(controller.params.endDate, 'yyyy-MM-dd');\n\n\t\t\tvar url = '';\n\n\t\t\tif (controller.params.region === 'BC')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist2007.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportbcedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (controller.params.region === 'ON')\n\t\t\t{\n\t\t\t\tif (controller.params.version == '05')\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportonedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\turl = '../report/reportnewedblist.jsp?startDate=' + startDate + '&endDate=' + endDate;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\twindow.open(url, 'report_edb', 'height=900,width=700');\n\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportNoShowAppointmentSheetController', [\n\n\t'$scope',\n\t'$log',\n\t'$filter',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\t$filter,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tstartDate: Juno.Common.Util.formatMomentDate(moment()),\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar startDate = $filter('date')(p.startDate, 'yyyy-MM-dd');\n\t\t\tvar url = '../report/reportnoshowapptlist.jsp?provider_no=' + p.providerNo + '&sdate=' + startDate;\n\t\t\twindow.open(url, 'report_noShowApptSheet', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportOldPatientsController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {\n\t\t\tproviderNo: '',\n\t\t\tage: 65\n\t\t};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(response)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < response.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: response[x].providerNo,\n\t\t\t\t\t\t\tname: response[x].firstName + ' ' + response[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tvar url = '../report/reportpatientchartlistspecial.jsp?provider_no=' + (p.providerNo === '' ? '*' : p.providerNo) + '&age=' + p.age;\n\t\t\twindow.open(url, 'report_oldpatients', 'height=900,width=700');\n\t\t};\n\t}\n]);","angular.module('Report').controller('Report.ReportPatientChartListController', [\n\n\t'$scope',\n\t'$log',\n\t'providerService',\n\n\tfunction(\n\t\t$scope,\n\t\t$log,\n\t\tproviderService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.params = {};\n\n\t\tcontroller.searchProviders = function searchProviders(val)\n\t\t{\n\t\t\tvar search = {\n\t\t\t\tsearchTerm: val,\n\t\t\t\tactive: true\n\t\t\t};\n\t\t\treturn providerService.searchProviders(search, 0, 10).then(\n\t\t\t\tfunction success(results)\n\t\t\t\t{\n\t\t\t\t\tvar resp = [];\n\t\t\t\t\tfor (var x = 0; x < results.length; x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresp.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproviderNo: results[x].providerNo,\n\t\t\t\t\t\t\tname: results[x].firstName + ' ' + results[x].lastName\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn resp;\n\t\t\t\t},\n\t\t\t\tfunction error(errors)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(errors);\n\t\t\t\t});\n\t\t};\n\t\tcontroller.updateProviderNo = function updateProviderNo(item, model, label)\n\t\t{\n\t\t\tcontroller.params.providerNo = model;\n\t\t\tcontroller.params.name = label;\n\t\t};\n\n\t\tcontroller.generateReport = function generateReport()\n\t\t{\n\t\t\tvar p = controller.params;\n\t\t\tif (!p.providerNo)\n\t\t\t{\n\t\t\t\talert('Please enter a provider');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar url = '../report/reportpatientchartlist.jsp?provider_no=' + p.providerNo;\n\t\t\twindow.open(url, 'report_patientchartlist', 'height=900,width=700');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Document', ['Common', 'Common.Services']);","angular.module('Document').controller('Document.DocumentsController', [\n\n\t'$scope',\n\t'securityService',\n\n\tfunction(\n\t\t$scope,\n\t\tsecurityService)\n\t{\n\t\tvar controller = this;\n\t\tcontroller.me = null;\n\n\t\t$scope.$watch(function()\n\t\t{\n\t\t\treturn securityService.getUser();\n\t\t}, function(newVal)\n\t\t{\n\t\t\tcontroller.me = newVal;\n\n\t\t\tif (newVal != null)\n\t\t\t{\n\t\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t\t}\n\t\t}, true);\n\n\n\t\tcontroller.openPopup = function openPopup()\n\t\t{\n\t\t\twindow.open('../dms/documentReport.jsp?function=provider&functionid=' + controller.me.providerNo, 'edocView', 'height=700,width=1024');\n\t\t};\n\t}\n]);","'use strict';\n\nangular.module('Settings', ['Common', 'Common.Services']);","import {SitesApi} from \"../../generated/api/SitesApi\";\nimport {ScheduleApi} from \"../../generated/api/ScheduleApi\";\n\nangular.module('Settings').controller('Settings.SettingsController', [\n\n\t'$scope',\n\t'$http',\n\t'$httpParamSerializer',\n\t'$state',\n\t'$uibModal',\n\t'$filter',\n\t'providerList',\n\t'user',\n\t'billingServiceTypes',\n\t'loadedSettings',\n\t'providerService',\n\t'encounterForms',\n\t'eforms',\n\t'teams',\n\t'groupNames',\n\t'loadedApps',\n\t'appService',\n\n\tfunction(\n\t\t$scope,\n\t\t$http,\n\t\t$httpParamSerializer,\n\t\t$state,\n\t\t$uibModal,\n\t\t$filter,\n\t\tproviderList,\n\t\tuser,\n\t\tbillingServiceTypes,\n\t\tloadedSettings,\n\t\tproviderService,\n\t\tencounterForms,\n\t\teforms,\n\t\tteams,\n\t\tgroupNames,\n\t\tloadedApps,\n\t\tappService)\n\t{\n\n\t\tvar controller = this;\n\n\t\tcontroller.sitesApi = new SitesApi($http, $httpParamSerializer,\n\t\t'../ws/rs');\n\t\tcontroller.scheduleApi = new ScheduleApi($http, $httpParamSerializer,\n\t\t\t'../ws/rs');\n\n\t\t$scope.$emit('configureShowPatientList', false);\n\n\t\tcontroller.providerList = providerList;\n\t\tcontroller.user = user;\n\t\tcontroller.billingServiceTypes = billingServiceTypes;\n\t\tcontroller.pref = loadedSettings;\n\t\tcontroller.encounterForms = encounterForms.content;\n\t\tcontroller.eforms = eforms;\n\t\tcontroller.loadedApps = loadedApps;\n\n\t\tcontroller.siteOptions = [];\n\t\tcontroller.scheduleOptions = [];\n\n\t\tif (controller.pref.recentPatients == null)\n\t\t{\n\t\t\tcontroller.pref.recentPatients = \"8\";\n\t\t}\n\n\t\t//convert to value/label object list from string array\n\t\tcontroller.formGroupNames = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t}];\n\t\tfor (var i = 0; i < groupNames.length; i++)\n\t\t{\n\t\t\tcontroller.formGroupNames.push(\n\t\t\t{\n\t\t\t\t\"value\": groupNames[i],\n\t\t\t\t\"label\": groupNames[i]\n\t\t\t});\n\t\t}\n\n\n\t\t//convert to value/label obj list. Add all/none\n\t\tcontroller.teams = [\n\t\t{\n\t\t\t\"value\": \"-1\",\n\t\t\t\"label\": \"All\"\n\t\t}];\n\t\tfor (var i = 0; i < teams.length; i++)\n\t\t{\n\t\t\tcontroller.teams.push(\n\t\t\t{\n\t\t\t\t\"value\": teams[i],\n\t\t\t\t\"label\": teams[i]\n\t\t\t});\n\t\t}\n\t\tcontroller.teams.push(\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"label\": \"None\"\n\t\t});\n\n\t\t//add none -option to start.\n\t\tcontroller.billingServiceTypesMod = [];\n\t\tangular.copy(controller.billingServiceTypes, controller.billingServiceTypesMod);\n\t\tcontroller.billingServiceTypesMod.splice(0, 0,\n\t\t{\n\t\t\t\"type\": \"no\",\n\t\t\t\"name\": \"--None--\"\n\t\t});\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenForms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tformName: controller.pref.appointmentScreenForms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].formName === controller.pref.appointmentScreenForms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this needs to be done to do the weird checkbox lists. basically add a property to each encounterList object called checked:[true|false]\n\t\tfor (var i = 0; i < controller.pref.appointmentScreenEforms.length; i++)\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tid: controller.pref.appointmentScreenEforms[i]\n\t\t\t});\n\t\t\tif (selected != null)\n\t\t\t{\n\t\t\t\tfor (var x = 0; x < selected.length; x++)\n\t\t\t\t{\n\t\t\t\t\tif (selected[x].id === controller.pref.appointmentScreenEforms[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tselected[x].checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tcontroller.tabs = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tdisplayName: 'Persona',\n\t\t\tpath: 'persona'\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tdisplayName: 'General',\n\t\t\tpath: 'general'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdisplayName: 'Schedule',\n\t\t\tpath: 'schedule'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdisplayName: 'Billing',\n\t\t\tpath: 'billing'\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdisplayName: 'Rx',\n\t\t\tpath: 'rx'\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdisplayName: 'Master Demographic',\n\t\t\tpath: 'masterdemo'\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdisplayName: 'Consultations',\n\t\t\tpath: 'consults'\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdisplayName: 'Documents',\n\t\t\tpath: 'documents'\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tdisplayName: 'Summary',\n\t\t\tpath: 'summary'\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tdisplayName: 'eForms',\n\t\t\tpath: 'eforms'\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tdisplayName: 'Inbox',\n\t\t\tpath: 'inbox'\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tdisplayName: 'Programs',\n\t\t\tpath: 'programs'\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tdisplayName: 'Integration',\n\t\t\tpath: 'integration'\n\t\t}, ];\n\t\tcontroller.pageSizes = [\n\t\t{\n\t\t\tvalue: 'PageSize.A4',\n\t\t\tlabel: 'A4'\n\t\t},\n\t\t{\n\t\t\tvalue: 'PageSize.A6',\n\t\t\tlabel: 'A6'\n\t\t}];\n\n\t\tcontroller.rxInteractionWarningLevels = [\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: 'Not Specified'\n\t\t},\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Low'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Medium'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'High'\n\t\t},\n\t\t{\n\t\t\tvalue: '4',\n\t\t\tlabel: 'None'\n\t\t}];\n\n\t\tcontroller.staleDates = [\n\t\t{\n\t\t\tvalue: 'A',\n\t\t\tlabel: 'All'\n\t\t},\n\t\t{\n\t\t\tvalue: '0',\n\t\t\tlabel: '0'\n\t\t},\n\t\t{\n\t\t\tvalue: '-1',\n\t\t\tlabel: '-1'\n\t\t},\n\t\t{\n\t\t\tvalue: '-2',\n\t\t\tlabel: '2'\n\t\t},\n\t\t{\n\t\t\tvalue: '-3',\n\t\t\tlabel: '3'\n\t\t},\n\t\t{\n\t\t\tvalue: '-4',\n\t\t\tlabel: '4'\n\t\t},\n\t\t{\n\t\t\tvalue: '-5',\n\t\t\tlabel: '5'\n\t\t},\n\t\t{\n\t\t\tvalue: '-6',\n\t\t\tlabel: '6'\n\t\t},\n\t\t{\n\t\t\tvalue: '-7',\n\t\t\tlabel: '7'\n\t\t},\n\t\t{\n\t\t\tvalue: '-8',\n\t\t\tlabel: '8'\n\t\t},\n\t\t{\n\t\t\tvalue: '-9',\n\t\t\tlabel: '9'\n\t\t},\n\t\t{\n\t\t\tvalue: '-10',\n\t\t\tlabel: '10'\n\t\t},\n\t\t{\n\t\t\tvalue: '-11',\n\t\t\tlabel: '11'\n\t\t},\n\t\t{\n\t\t\tvalue: '-12',\n\t\t\tlabel: '12'\n\t\t},\n\t\t{\n\t\t\tvalue: '-13',\n\t\t\tlabel: '13'\n\t\t},\n\t\t{\n\t\t\tvalue: '-14',\n\t\t\tlabel: '14'\n\t\t},\n\t\t{\n\t\t\tvalue: '-15',\n\t\t\tlabel: '15'\n\t\t},\n\t\t{\n\t\t\tvalue: '-16',\n\t\t\tlabel: '16'\n\t\t},\n\t\t{\n\t\t\tvalue: '-17',\n\t\t\tlabel: '17'\n\t\t},\n\t\t{\n\t\t\tvalue: '-18',\n\t\t\tlabel: '18'\n\t\t},\n\t\t{\n\t\t\tvalue: '-19',\n\t\t\tlabel: '19'\n\t\t},\n\t\t{\n\t\t\tvalue: '-20',\n\t\t\tlabel: '20'\n\t\t},\n\t\t{\n\t\t\tvalue: '-21',\n\t\t\tlabel: '21'\n\t\t},\n\t\t{\n\t\t\tvalue: '-22',\n\t\t\tlabel: '22'\n\t\t},\n\t\t{\n\t\t\tvalue: '-23',\n\t\t\tlabel: '23'\n\t\t},\n\t\t{\n\t\t\tvalue: '-24',\n\t\t\tlabel: '24'\n\t\t},\n\t\t{\n\t\t\tvalue: '-25',\n\t\t\tlabel: '25'\n\t\t},\n\t\t{\n\t\t\tvalue: '-26',\n\t\t\tlabel: '26'\n\t\t},\n\t\t{\n\t\t\tvalue: '-27',\n\t\t\tlabel: '27'\n\t\t},\n\t\t{\n\t\t\tvalue: '-28',\n\t\t\tlabel: '28'\n\t\t},\n\t\t{\n\t\t\tvalue: '-29',\n\t\t\tlabel: '29'\n\t\t},\n\t\t{\n\t\t\tvalue: '-30',\n\t\t\tlabel: '30'\n\t\t},\n\t\t{\n\t\t\tvalue: '-31',\n\t\t\tlabel: '31'\n\t\t},\n\t\t{\n\t\t\tvalue: '-32',\n\t\t\tlabel: '32'\n\t\t},\n\t\t{\n\t\t\tvalue: '-33',\n\t\t\tlabel: '33'\n\t\t},\n\t\t{\n\t\t\tvalue: '-34',\n\t\t\tlabel: '34'\n\t\t},\n\t\t{\n\t\t\tvalue: '-35',\n\t\t\tlabel: '35'\n\t\t},\n\t\t{\n\t\t\tvalue: '-36',\n\t\t\tlabel: '36'\n\t\t}, ];\n\n\t\tcontroller.olisLabs = [\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tvalue: '5552',\n\t\t\tlabel: 'Gamma-Dynacare'\n\t\t},\n\t\t{\n\t\t\tvalue: '5407',\n\t\t\tlabel: 'CML'\n\t\t},\n\t\t{\n\t\t\tvalue: '5687',\n\t\t\tlabel: 'LifeLabs'\n\t\t}];\n\n\t\tcontroller.pasteFormats = [\n\t\t{\n\t\t\tvalue: 'single',\n\t\t\tlabel: 'Single Line'\n\t\t},\n\t\t{\n\t\t\tvalue: 'multi',\n\t\t\tlabel: 'Multi Line'\n\t\t}];\n\n\t\tcontroller.letterHeadNameDefaults = [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'Provider (user)'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'MRP'\n\t\t},\n\t\t{\n\t\t\tvalue: '3',\n\t\t\tlabel: 'Clinic'\n\t\t}];\n\n\t\tif (controller.pref.consultationLetterHeadNameDefault == null)\n\t\t{\n\t\t\tcontroller.pref.consultationLetterHeadNameDefault = \"1\";\n\t\t}\n\n\n\t\tif ($state.current.data !== undefined)\n\t\t{\n\t\t\tcontroller.currentTab = $filter('filter')(controller.tabs, {path: $state.current.data.tab})[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontroller.currentTab = controller.tabs[0];\n\t\t}\n\n\n\n\n\t\tcontroller.init = function()\n\t\t{\n\t\t\tcontroller.sitesApi.getSiteList().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\tvar out = [];\n\t\t\t\t\tif (angular.isArray(results))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tout.push({\n\t\t\t\t\t\t\t\tid: results[i].siteId,\n\t\t\t\t\t\t\t\tvalue: results[i].name,\n\t\t\t\t\t\t\t\tlabel: results[i].name,\n\t\t\t\t\t\t\t\tcolor: results[i].bgColor,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.siteOptions = out;\n\t\t\t\t}\n\t\t\t);\n\t\t\tcontroller.scheduleApi.getScheduleGroups().then(\n\t\t\t\tfunction success(rawResults)\n\t\t\t\t{\n\t\t\t\t\tvar results = rawResults.data.body;\n\t\t\t\t\tfor (var i = 0; i < results.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar scheduleData = results[i];\n\n\t\t\t\t\t\tresults[i].label = results[i].name;\n\t\t\t\t\t\tresults[i].value = results[i].identifier;\n\n\t\t\t\t\t\tcontroller.scheduleOptions.push(scheduleData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\n\t\tcontroller.isActive = function(tab)\n\t\t{\n\t\t\treturn (tab != null && controller.currentTab != null && tab.id == controller.currentTab.id);\n\t\t};\n\n\t\tcontroller.changeTab = function(tab)\n\t\t{\n\t\t\tcontroller.currentTab = tab;\n\t\t\t$state.go('settings.' + tab.path);\n\t\t};\n\n\t\tcontroller.save = function()\n\t\t{\n\t\t\tvar newList = [];\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: controller.pref.appointmentScreenQuickLinks[i].name,\n\t\t\t\t\t\t\t\turl: controller.pref.appointmentScreenQuickLinks[i].url\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\n\t\t\tif (controller.validateSettings())\n\t\t\t{\n\t\t\t\tproviderService.saveSettings(controller.user.providerNo, controller.pref).then(function (data)\n\t\t\t\t{\n\t\t\t\t\talert('saved');\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcontroller.validateSettings = function()\n\t\t{\n\t\t\t// check eform fields are valid\n\t\t\tif (!controller.pref.eformPopupWidth || !controller.pref.eformPopupHeight)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tcontroller.cancel = function()\n\t\t{\n\t\t\tcontroller.pref = {};\n\t\t\t$state.go('dashboard');\n\t\t};\n\n\t\tcontroller.selectEncounterForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.encounterForms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].formName);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenForms = tmp;\n\t\t};\n\n\t\tcontroller.selectEForms = function()\n\t\t{\n\t\t\tvar selected = $filter('filter')(controller.eforms,\n\t\t\t{\n\t\t\t\tchecked: true\n\t\t\t});\n\t\t\tvar tmp = [];\n\t\t\tfor (var i = 0; i < selected.length; i++)\n\t\t\t{\n\t\t\t\ttmp.push(selected[i].id);\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenEforms = tmp;\n\t\t};\n\n\t\tcontroller.removeQuickLinks = function()\n\t\t{\n\t\t\tvar newList = [];\n\n\t\t\tfor (var i = 0; i < controller.pref.appointmentScreenQuickLinks.length; i++)\n\t\t\t{\n\t\t\t\tif (controller.pref.appointmentScreenQuickLinks[i].checked == null || controller.pref.appointmentScreenQuickLinks[i].checked == false)\n\t\t\t\t{\n\t\t\t\t\tnewList.push(controller.pref.appointmentScreenQuickLinks[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontroller.pref.appointmentScreenQuickLinks = newList;\n\t\t};\n\n\n\t\tcontroller.openChangePasswordModal = function()\n\t\t{\n\t\t\t/*\n        var modalInstance = $uibModal.open({\n        \ttemplateUrl: 'src/settings/changePassword.jsp',\n            controller: 'ChangePasswordController'\n        });\n     */\n\t\t\twindow.open('../provider/providerchangepassword.jsp', 'change_password', 'width=750,height=500');\n\t\t};\n\n\n\t\tcontroller.openQuickLinkModal = function()\n\t\t{\n\t\t\tvar modalInstance = $uibModal.open(\n\t\t\t{\n\t\t\t\ttemplateUrl: 'src/settings/quickLink.jsp',\n\t\t\t\tcontroller: 'QuickLinkController'\n\t\t\t});\n\n\t\t\tmodalInstance.result.then(function(selectedItem)\n\t\t\t{\n\t\t\t\tif (selectedItem != null)\n\t\t\t\t{\n\t\t\t\t\tif (selectedItem != null && selectedItem.name != null && selectedItem.url != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.pref.appointmentScreenQuickLinks.push(selectedItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tcontroller.editDocumentTemplates = function()\n\t\t{\n\t\t\twindow.open('../admin/displayDocumentDescriptionTemplate.jsp', 'document_templates', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showProviderColourPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerColourPicker.jsp', 'provider_colour', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.showDefaultEncounterWindowSizePopup = function()\n\t\t{\n\t\t\twindow.open('../setProviderStaleDate.do?method=viewEncounterWindowSize', 'encounter_window_sz', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openConfigureEChartCppPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/CppPreferences.do', 'configure_echart_cpp', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openManageAPIClientPopup = function()\n\t\t{\n\t\t\twindow.open('../provider/clients.jsp', 'api_clients', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.openMyOscarUsernamePopup = function()\n\t\t{\n\t\t\twindow.open('../provider/providerIndivoIdSetter.jsp', 'invivo_setter', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.authenticate = function(app)\n\t\t{\n\t\t\twindow.open('../apps/oauth1.jsp?id=' + app.id, 'appAuth', 'width=700,height=450');\n\t\t};\n\n\t\tcontroller.refreshAppList = function()\n\t\t{\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t\tappService.getApps().then(function(data)\n\t\t\t\t{\n\t\t\t\t\tcontroller.loadedApps = data;\n\t\t\t\t},\n\t\t\t\tfunction(errorMessage)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"applist:\" + errorMessage);\n\t\t\t\t}\n\t\t\t);\n\t\t\t///\n\t\t\tconsole.log(\"refresh\", controller.loadedApps);\n\t\t};\n\n\t\tcontroller.init();\n\t}\n]);","angular.module('Settings').controller('Settings.ChangePasswordController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close(\"Someone Closed Me\");\n\t\t};\n\n\t\t$scope.changePassword = function()\n\t\t{\n\t\t\tconsole.log('password saved - NOT');\n\t\t\t$uibModalInstance.close(\"Someone Saved Me\");\n\t\t};\n\t}\n]);","angular.module('Settings').controller('Settings.QuickLinkController', [\n\n\t'$scope',\n\t'$uibModalInstance',\n\n\tfunction(\n\t\t$scope,\n\t\t$uibModalInstance)\n\t{\n\n\t\t$scope.qll = {};\n\n\t\t$scope.close = function()\n\t\t{\n\t\t\t$uibModalInstance.close();\n\t\t};\n\n\t\t$scope.addQuickLink = function(qlForm)\n\t\t{\n\t\t\tif (qlForm.$valid)\n\t\t\t{\n\t\t\t\t//\talert($scope.qll.toSource());\n\t\t\t\t$uibModalInstance.close($scope.qll);\n\t\t\t}\n\t\t};\n\t}\n]);","import patientSummaryItems from \"./partials/patientSummaryItems.html\";\n\nangular.module('Settings').component('patientSummaryItems', {\n\ttemplate: patientSummaryItems,\n\tcontroller: function ()\n\t{\n\t\tvar ctrl = this;\n\t},\n\tbindings:\n\t{\n\t\tpref: '='\n\t}\n});","'use strict';\n\nangular.module('Help', []);","angular.module('Help').controller('Help.SupportController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http)\n\t{\n\n\t\t//TODO load this dynamically\n\t\t$scope.ospInfo = {\n\t\t\tname: 'JunoEMR.com',\n\t\t\tphone: '250-900-7373',\n\t\t\tcontact: 'Juno EMR Support',\n\t\t\temail: 'support@junoemr.com',\n\t\t\turl: 'https://help.junoemr.com'\n\t\t};\n\n\t\t$scope.buildInfo = {\n\t\t\tversionDisplayName: 'Juno',\n\t\t\tversion: 'master-0000'\n\t\t};\n\t}\n]);","angular.module('Help').controller('Help.HelpController', [\n\n\t'$scope',\n\t'$http',\n\n\tfunction(\n\t\t$scope,\n\t\t$http) {\n\n\t}\n]);"],"sourceRoot":""}